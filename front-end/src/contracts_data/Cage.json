{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_gambleTokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_rewardRate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_exchangeRate",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "CashOut",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "Staked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawn",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "buyIn",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "cashOut",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "getStakeObj",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            }
          ],
          "internalType": "struct Cage.Stake",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "getStakedAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "isStaker",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stake",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wethToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/nicholasrabow/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
    "2": "/Users/nicholasrabow/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol",
    "4": "/Users/nicholasrabow/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/utils/Context.sol",
    "5": "contracts/Cage.sol",
    "6": "contracts/GambleToken.sol"
  },
  "ast": {
    "absolutePath": "contracts/Cage.sol",
    "exportedSymbols": {
      "Cage": [
        525
      ],
      "Context": [
        770
      ],
      "ERC20": [
        1358
      ],
      "GambleToken": [
        748
      ],
      "IERC20": [
        708
      ],
      "IERC20Metadata": [
        1383
      ],
      "Ownable": [
        630
      ],
      "TransferFailed": [
        6
      ]
    },
    "id": 526,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "31:23:5"
      },
      {
        "absolutePath": "/Users/nicholasrabow/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 526,
        "sourceUnit": 631,
        "src": "56:52:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/nicholasrabow/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.5.0/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 526,
        "sourceUnit": 709,
        "src": "109:56:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/GambleToken.sol",
        "file": "./GambleToken.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 526,
        "sourceUnit": 749,
        "src": "166:27:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "errorSelector": "90b8ec18",
        "id": 6,
        "name": "TransferFailed",
        "nameLocation": "201:14:5",
        "nodeType": "ErrorDefinition",
        "parameters": {
          "id": 5,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "215:2:5"
        },
        "src": "195:23:5"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 7,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 630,
              "src": "237:7:5"
            },
            "id": 8,
            "nodeType": "InheritanceSpecifier",
            "src": "237:7:5"
          }
        ],
        "canonicalName": "Cage",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 525,
        "linearizedBaseContracts": [
          525,
          630,
          770
        ],
        "name": "Cage",
        "nameLocation": "229:4:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 10,
            "mutability": "mutable",
            "name": "rewardRate",
            "nameLocation": "265:10:5",
            "nodeType": "VariableDeclaration",
            "scope": 525,
            "src": "249:26:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint16",
              "typeString": "uint16"
            },
            "typeName": {
              "id": 9,
              "name": "uint16",
              "nodeType": "ElementaryTypeName",
              "src": "249:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint16",
                "typeString": "uint16"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 12,
            "mutability": "mutable",
            "name": "exchangeRate",
            "nameLocation": "295:12:5",
            "nodeType": "VariableDeclaration",
            "scope": 525,
            "src": "279:28:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint16",
              "typeString": "uint16"
            },
            "typeName": {
              "id": 11,
              "name": "uint16",
              "nodeType": "ElementaryTypeName",
              "src": "279:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint16",
                "typeString": "uint16"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "4b57b0be",
            "id": 15,
            "mutability": "mutable",
            "name": "wethToken",
            "nameLocation": "326:9:5",
            "nodeType": "VariableDeclaration",
            "scope": 525,
            "src": "312:23:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$708",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 14,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 13,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 708,
                "src": "312:6:5"
              },
              "referencedDeclaration": 708,
              "src": "312:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$708",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 18,
            "mutability": "mutable",
            "name": "gambleToken",
            "nameLocation": "360:11:5",
            "nodeType": "VariableDeclaration",
            "scope": 525,
            "src": "339:32:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_GambleToken_$748",
              "typeString": "contract GambleToken"
            },
            "typeName": {
              "id": 17,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 16,
                "name": "GambleToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 748,
                "src": "339:11:5"
              },
              "referencedDeclaration": 748,
              "src": "339:11:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GambleToken_$748",
                "typeString": "contract GambleToken"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 22,
            "mutability": "mutable",
            "name": "stakes",
            "nameLocation": "393:6:5",
            "nodeType": "VariableDeclaration",
            "scope": 525,
            "src": "376:23:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Stake_$81_storage_$dyn_storage",
              "typeString": "struct Cage.Stake[]"
            },
            "typeName": {
              "baseType": {
                "id": 20,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 19,
                  "name": "Stake",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 81,
                  "src": "376:5:5"
                },
                "referencedDeclaration": 81,
                "src": "376:5:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Stake_$81_storage_ptr",
                  "typeString": "struct Cage.Stake"
                }
              },
              "id": 21,
              "nodeType": "ArrayTypeName",
              "src": "376:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Stake_$81_storage_$dyn_storage_ptr",
                "typeString": "struct Cage.Stake[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 28,
            "mutability": "mutable",
            "name": "stakerToStakes",
            "nameLocation": "441:14:5",
            "nodeType": "VariableDeclaration",
            "scope": 525,
            "src": "404:51:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stake_$81_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct Cage.Stake[])"
            },
            "typeName": {
              "id": 27,
              "keyType": {
                "id": 23,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "412:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "404:27:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stake_$81_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct Cage.Stake[])"
              },
              "valueType": {
                "baseType": {
                  "id": 25,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 24,
                    "name": "Stake",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 81,
                    "src": "423:5:5"
                  },
                  "referencedDeclaration": 81,
                  "src": "423:5:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Stake_$81_storage_ptr",
                    "typeString": "struct Cage.Stake"
                  }
                },
                "id": 26,
                "nodeType": "ArrayTypeName",
                "src": "423:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_Stake_$81_storage_$dyn_storage_ptr",
                  "typeString": "struct Cage.Stake[]"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 32,
            "mutability": "mutable",
            "name": "stakers",
            "nameLocation": "493:7:5",
            "nodeType": "VariableDeclaration",
            "scope": 525,
            "src": "459:41:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 31,
              "keyType": {
                "id": 29,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "467:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "459:24:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 30,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "478:4:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "eventSelector": "1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee90",
            "id": 40,
            "name": "Staked",
            "nameLocation": "511:6:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "534:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 40,
                  "src": "518:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "518:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "548:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 40,
                  "src": "540:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "540:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "564:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 40,
                  "src": "556:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "556:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "517:57:5"
            },
            "src": "505:70:5"
          },
          {
            "anonymous": false,
            "eventSelector": "7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5",
            "id": 46,
            "name": "Withdrawn",
            "nameLocation": "584:9:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 45,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "610:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 46,
                  "src": "594:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "594:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "624:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 46,
                  "src": "616:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "616:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "593:38:5"
            },
            "src": "578:54:5"
          },
          {
            "anonymous": false,
            "eventSelector": "ab933177d8753a66dd869151cf9aa88649e067b7a4e2dad9d5d192d61cf593b0",
            "id": 52,
            "name": "CashOut",
            "nameLocation": "641:7:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 51,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "665:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 52,
                  "src": "649:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "649:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "679:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 52,
                  "src": "671:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "671:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "648:38:5"
            },
            "src": "635:52:5"
          },
          {
            "body": {
              "id": 75,
              "nodeType": "Block",
              "src": "799:128:5",
              "statements": [
                {
                  "expression": {
                    "id": 65,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 61,
                      "name": "gambleToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "806:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GambleToken_$748",
                        "typeString": "contract GambleToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 63,
                          "name": "_gambleTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "832:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 62,
                        "name": "GambleToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 748,
                        "src": "820:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_GambleToken_$748_$",
                          "typeString": "type(contract GambleToken)"
                        }
                      },
                      "id": 64,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "820:32:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GambleToken_$748",
                        "typeString": "contract GambleToken"
                      }
                    },
                    "src": "806:46:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GambleToken_$748",
                      "typeString": "contract GambleToken"
                    }
                  },
                  "id": 66,
                  "nodeType": "ExpressionStatement",
                  "src": "806:46:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 68,
                        "name": "_rewardRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "873:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 67,
                      "name": "_setRewardRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 497,
                      "src": "858:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 69,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "858:27:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 70,
                  "nodeType": "ExpressionStatement",
                  "src": "858:27:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 72,
                        "name": "_exchangeRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 58,
                        "src": "908:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 71,
                      "name": "_setExchangeRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 512,
                      "src": "891:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 73,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "891:31:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74,
                  "nodeType": "ExpressionStatement",
                  "src": "891:31:5"
                }
              ]
            },
            "id": 76,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54,
                  "mutability": "mutable",
                  "name": "_gambleTokenAddress",
                  "nameLocation": "716:19:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 76,
                  "src": "708:27:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "708:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56,
                  "mutability": "mutable",
                  "name": "_rewardRate",
                  "nameLocation": "749:11:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 76,
                  "src": "741:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "741:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58,
                  "mutability": "mutable",
                  "name": "_exchangeRate",
                  "nameLocation": "774:13:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 76,
                  "src": "766:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "766:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "702:89:5"
            },
            "returnParameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "799:0:5"
            },
            "scope": 525,
            "src": "691:236:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "canonicalName": "Cage.Stake",
            "id": 81,
            "members": [
              {
                "constant": false,
                "id": 78,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "956:6:5",
                "nodeType": "VariableDeclaration",
                "scope": 81,
                "src": "948:14:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 77,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "948:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 80,
                "mutability": "mutable",
                "name": "timestamp",
                "nameLocation": "976:9:5",
                "nodeType": "VariableDeclaration",
                "scope": 81,
                "src": "968:17:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 79,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "968:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Stake",
            "nameLocation": "937:5:5",
            "nodeType": "StructDefinition",
            "scope": 525,
            "src": "930:60:5",
            "visibility": "public"
          },
          {
            "body": {
              "id": 126,
              "nodeType": "Block",
              "src": "1027:421:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 90,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "expression": {
                              "id": 85,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1095:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 86,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1095:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 87,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "1095:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "expression": {
                            "id": 88,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1116:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 89,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1116:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1095:30:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f206e6f74206f776e20656e6f75676820455448",
                        "id": 91,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1127:27:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4a38ee27dd50c263a6645d3a19b475cfe61383f6e10fa94b28a98ed6ea4501dc",
                          "typeString": "literal_string \"You do not own enough ETH\""
                        },
                        "value": "You do not own enough ETH"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4a38ee27dd50c263a6645d3a19b475cfe61383f6e10fa94b28a98ed6ea4501dc",
                          "typeString": "literal_string \"You do not own enough ETH\""
                        }
                      ],
                      "id": 84,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1087:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1087:68:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 93,
                  "nodeType": "ExpressionStatement",
                  "src": "1087:68:5"
                },
                {
                  "expression": {
                    "id": 99,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 94,
                        "name": "stakers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "1200:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 97,
                      "indexExpression": {
                        "expression": {
                          "id": 95,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1208:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 96,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1208:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1200:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 98,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1222:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1200:26:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 100,
                  "nodeType": "ExpressionStatement",
                  "src": "1200:26:5"
                },
                {
                  "assignments": [
                    102
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 102,
                      "mutability": "mutable",
                      "name": "timestamp",
                      "nameLocation": "1275:9:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 126,
                      "src": "1267:17:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 101,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1267:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 105,
                  "initialValue": {
                    "expression": {
                      "id": 103,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -4,
                      "src": "1287:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "timestamp",
                    "nodeType": "MemberAccess",
                    "src": "1287:15:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1267:35:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 112,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1346:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 113,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "1346:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 114,
                            "name": "timestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 102,
                            "src": "1357:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 111,
                          "name": "Stake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 81,
                          "src": "1340:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Stake_$81_storage_ptr_$",
                            "typeString": "type(struct Cage.Stake storage pointer)"
                          }
                        },
                        "id": 115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1340:27:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$81_memory_ptr",
                          "typeString": "struct Cage.Stake memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Stake_$81_memory_ptr",
                          "typeString": "struct Cage.Stake memory"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 106,
                          "name": "stakerToStakes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 28,
                          "src": "1308:14:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stake_$81_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct Cage.Stake storage ref[] storage ref)"
                          }
                        },
                        "id": 109,
                        "indexExpression": {
                          "expression": {
                            "id": 107,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1323:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1323:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1308:26:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Stake_$81_storage_$dyn_storage",
                          "typeString": "struct Cage.Stake storage ref[] storage ref"
                        }
                      },
                      "id": 110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1308:31:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Stake_$81_storage_$dyn_storage_ptr_$_t_struct$_Stake_$81_storage_$returns$__$bound_to$_t_array$_t_struct$_Stake_$81_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Cage.Stake storage ref[] storage pointer,struct Cage.Stake storage ref)"
                      }
                    },
                    "id": 116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1308:60:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 117,
                  "nodeType": "ExpressionStatement",
                  "src": "1308:60:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 119,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1410:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1410:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 121,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1422:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "1422:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 123,
                        "name": "timestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102,
                        "src": "1433:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 118,
                      "name": "Staked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "1403:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1403:40:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 125,
                  "nodeType": "EmitStatement",
                  "src": "1398:45:5"
                }
              ]
            },
            "functionSelector": "3a4b66f1",
            "id": 127,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stake",
            "nameLocation": "1004:5:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1009:2:5"
            },
            "returnParameters": {
              "id": 83,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1027:0:5"
            },
            "scope": 525,
            "src": "995:453:5",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 261,
              "nodeType": "Block",
              "src": "1506:1140:5",
              "statements": [
                {
                  "assignments": [
                    135
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 135,
                      "mutability": "mutable",
                      "name": "totalAmountStaked",
                      "nameLocation": "1520:17:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 261,
                      "src": "1512:25:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 134,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1512:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 140,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 137,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1556:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1556:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 136,
                      "name": "getStakedAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 324,
                      "src": "1540:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1540:27:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1512:55:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 142,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 129,
                          "src": "1581:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 143,
                          "name": "totalAmountStaked",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 135,
                          "src": "1592:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1581:28:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "417474656d7074696e6720746f207769746864726177206d6f7265207468616e207374616b65642e",
                        "id": 145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1611:42:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8dd87b91f04bc16f84c1271b65acb9688b34f03cd7c052de6ee32124feaa23bb",
                          "typeString": "literal_string \"Attempting to withdraw more than staked.\""
                        },
                        "value": "Attempting to withdraw more than staked."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8dd87b91f04bc16f84c1271b65acb9688b34f03cd7c052de6ee32124feaa23bb",
                          "typeString": "literal_string \"Attempting to withdraw more than staked.\""
                        }
                      ],
                      "id": 141,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1573:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1573:81:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 147,
                  "nodeType": "ExpressionStatement",
                  "src": "1573:81:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 154,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 129,
                        "src": "1704:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 150,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1683:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 151,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1683:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1675:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 148,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1675:8:5",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1675:19:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1675:28:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1675:37:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 156,
                  "nodeType": "ExpressionStatement",
                  "src": "1675:37:5"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 157,
                      "name": "totalAmountStaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 135,
                      "src": "1722:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 158,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 129,
                      "src": "1743:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1722:28:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 168,
                  "nodeType": "IfStatement",
                  "src": "1718:101:5",
                  "trueBody": {
                    "id": 167,
                    "nodeType": "Block",
                    "src": "1752:67:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 160,
                              "name": "stakers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "1785:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 163,
                            "indexExpression": {
                              "expression": {
                                "id": 161,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1793:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 162,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1793:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1785:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 164,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1807:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "1785:27:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 166,
                        "nodeType": "ExpressionStatement",
                        "src": "1785:27:5"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    170
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 170,
                      "mutability": "mutable",
                      "name": "amountRemaining",
                      "nameLocation": "1917:15:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 261,
                      "src": "1909:23:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 169,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1909:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 172,
                  "initialValue": {
                    "id": 171,
                    "name": "_amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 129,
                    "src": "1935:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1909:33:5"
                },
                {
                  "body": {
                    "id": 253,
                    "nodeType": "Block",
                    "src": "1977:607:5",
                    "statements": [
                      {
                        "body": {
                          "id": 251,
                          "nodeType": "Block",
                          "src": "2046:532:5",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 200,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "id": 190,
                                        "name": "stakerToStakes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 28,
                                        "src": "2060:14:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stake_$81_storage_$dyn_storage_$",
                                          "typeString": "mapping(address => struct Cage.Stake storage ref[] storage ref)"
                                        }
                                      },
                                      "id": 193,
                                      "indexExpression": {
                                        "expression": {
                                          "id": 191,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -15,
                                          "src": "2075:3:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 192,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "2075:10:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "2060:26:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_Stake_$81_storage_$dyn_storage",
                                        "typeString": "struct Cage.Stake storage ref[] storage ref"
                                      }
                                    },
                                    "id": 197,
                                    "indexExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 196,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 194,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 177,
                                        "src": "2087:1:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "hexValue": "31",
                                        "id": 195,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2089:1:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      },
                                      "src": "2087:3:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2060:31:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Stake_$81_storage",
                                      "typeString": "struct Cage.Stake storage ref"
                                    }
                                  },
                                  "id": 198,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "amount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 78,
                                  "src": "2060:38:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<=",
                                "rightExpression": {
                                  "id": 199,
                                  "name": "amountRemaining",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 170,
                                  "src": "2102:15:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2060:57:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 249,
                                "nodeType": "Block",
                                "src": "2347:223:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 243,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "expression": {
                                          "baseExpression": {
                                            "baseExpression": {
                                              "id": 223,
                                              "name": "stakerToStakes",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 28,
                                              "src": "2431:14:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stake_$81_storage_$dyn_storage_$",
                                                "typeString": "mapping(address => struct Cage.Stake storage ref[] storage ref)"
                                              }
                                            },
                                            "id": 229,
                                            "indexExpression": {
                                              "expression": {
                                                "id": 224,
                                                "name": "msg",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -15,
                                                "src": "2446:3:5",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_message",
                                                  "typeString": "msg"
                                                }
                                              },
                                              "id": 225,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "sender",
                                              "nodeType": "MemberAccess",
                                              "src": "2446:10:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "2431:26:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_struct$_Stake_$81_storage_$dyn_storage",
                                              "typeString": "struct Cage.Stake storage ref[] storage ref"
                                            }
                                          },
                                          "id": 230,
                                          "indexExpression": {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 228,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 226,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 177,
                                              "src": "2458:1:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "-",
                                            "rightExpression": {
                                              "hexValue": "31",
                                              "id": 227,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "2460:1:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1_by_1",
                                                "typeString": "int_const 1"
                                              },
                                              "value": "1"
                                            },
                                            "src": "2458:3:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "2431:31:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Stake_$81_storage",
                                            "typeString": "struct Cage.Stake storage ref"
                                          }
                                        },
                                        "id": 231,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "memberName": "amount",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 78,
                                        "src": "2431:38:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 242,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "baseExpression": {
                                              "baseExpression": {
                                                "id": 232,
                                                "name": "stakerToStakes",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 28,
                                                "src": "2472:14:5",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stake_$81_storage_$dyn_storage_$",
                                                  "typeString": "mapping(address => struct Cage.Stake storage ref[] storage ref)"
                                                }
                                              },
                                              "id": 235,
                                              "indexExpression": {
                                                "expression": {
                                                  "id": 233,
                                                  "name": "msg",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": -15,
                                                  "src": "2487:3:5",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_message",
                                                    "typeString": "msg"
                                                  }
                                                },
                                                "id": 234,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "2487:10:5",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "2472:26:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_struct$_Stake_$81_storage_$dyn_storage",
                                                "typeString": "struct Cage.Stake storage ref[] storage ref"
                                              }
                                            },
                                            "id": 239,
                                            "indexExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 238,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 236,
                                                "name": "i",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 177,
                                                "src": "2499:1:5",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "-",
                                              "rightExpression": {
                                                "hexValue": "31",
                                                "id": 237,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "2501:1:5",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_1_by_1",
                                                  "typeString": "int_const 1"
                                                },
                                                "value": "1"
                                              },
                                              "src": "2499:3:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "2472:31:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Stake_$81_storage",
                                              "typeString": "struct Cage.Stake storage ref"
                                            }
                                          },
                                          "id": 240,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "amount",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 78,
                                          "src": "2472:38:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "id": 241,
                                          "name": "amountRemaining",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 170,
                                          "src": "2513:15:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "2472:56:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "2431:97:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 244,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2431:97:5"
                                  },
                                  {
                                    "expression": {
                                      "id": 247,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 245,
                                        "name": "amountRemaining",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 170,
                                        "src": "2540:15:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "hexValue": "30",
                                        "id": 246,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2558:1:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "2540:19:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 248,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2540:19:5"
                                  }
                                ]
                              },
                              "id": 250,
                              "nodeType": "IfStatement",
                              "src": "2056:514:5",
                              "trueBody": {
                                "id": 222,
                                "nodeType": "Block",
                                "src": "2118:223:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 213,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 201,
                                        "name": "amountRemaining",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 170,
                                        "src": "2212:15:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 212,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 202,
                                          "name": "amountRemaining",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 170,
                                          "src": "2230:15:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "expression": {
                                            "baseExpression": {
                                              "baseExpression": {
                                                "id": 203,
                                                "name": "stakerToStakes",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 28,
                                                "src": "2248:14:5",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stake_$81_storage_$dyn_storage_$",
                                                  "typeString": "mapping(address => struct Cage.Stake storage ref[] storage ref)"
                                                }
                                              },
                                              "id": 206,
                                              "indexExpression": {
                                                "expression": {
                                                  "id": 204,
                                                  "name": "msg",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": -15,
                                                  "src": "2263:3:5",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_message",
                                                    "typeString": "msg"
                                                  }
                                                },
                                                "id": 205,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "2263:10:5",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "2248:26:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_struct$_Stake_$81_storage_$dyn_storage",
                                                "typeString": "struct Cage.Stake storage ref[] storage ref"
                                              }
                                            },
                                            "id": 210,
                                            "indexExpression": {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 209,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 207,
                                                "name": "i",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 177,
                                                "src": "2275:1:5",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "-",
                                              "rightExpression": {
                                                "hexValue": "31",
                                                "id": 208,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "2277:1:5",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_rational_1_by_1",
                                                  "typeString": "int_const 1"
                                                },
                                                "value": "1"
                                              },
                                              "src": "2275:3:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "2248:31:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Stake_$81_storage",
                                              "typeString": "struct Cage.Stake storage ref"
                                            }
                                          },
                                          "id": 211,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "amount",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 78,
                                          "src": "2248:38:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "2230:56:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "2212:74:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 214,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2212:74:5"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "expression": {
                                          "baseExpression": {
                                            "id": 215,
                                            "name": "stakerToStakes",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 28,
                                            "src": "2298:14:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stake_$81_storage_$dyn_storage_$",
                                              "typeString": "mapping(address => struct Cage.Stake storage ref[] storage ref)"
                                            }
                                          },
                                          "id": 218,
                                          "indexExpression": {
                                            "expression": {
                                              "id": 216,
                                              "name": "msg",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -15,
                                              "src": "2313:3:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_message",
                                                "typeString": "msg"
                                              }
                                            },
                                            "id": 217,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "sender",
                                            "nodeType": "MemberAccess",
                                            "src": "2313:10:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "2298:26:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_Stake_$81_storage_$dyn_storage",
                                            "typeString": "struct Cage.Stake storage ref[] storage ref"
                                          }
                                        },
                                        "id": 219,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "pop",
                                        "nodeType": "MemberAccess",
                                        "src": "2298:30:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_struct$_Stake_$81_storage_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_struct$_Stake_$81_storage_$dyn_storage_ptr_$",
                                          "typeString": "function (struct Cage.Stake storage ref[] storage pointer)"
                                        }
                                      },
                                      "id": 220,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2298:32:5",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 221,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2298:32:5"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 184,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 177,
                            "src": "2035:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 185,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2039:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "2035:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 252,
                        "initializationExpression": {
                          "assignments": [
                            177
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 177,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "1996:1:5",
                              "nodeType": "VariableDeclaration",
                              "scope": 252,
                              "src": "1991:6:5",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 176,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "1991:4:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 183,
                          "initialValue": {
                            "expression": {
                              "baseExpression": {
                                "id": 178,
                                "name": "stakerToStakes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 28,
                                "src": "2000:14:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stake_$81_storage_$dyn_storage_$",
                                  "typeString": "mapping(address => struct Cage.Stake storage ref[] storage ref)"
                                }
                              },
                              "id": 181,
                              "indexExpression": {
                                "expression": {
                                  "id": 179,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "2015:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 180,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2015:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2000:26:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Stake_$81_storage_$dyn_storage",
                                "typeString": "struct Cage.Stake storage ref[] storage ref"
                              }
                            },
                            "id": 182,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "2000:33:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "1991:42:5"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 188,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "--",
                            "prefix": false,
                            "src": "2042:3:5",
                            "subExpression": {
                              "id": 187,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 177,
                              "src": "2042:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 189,
                          "nodeType": "ExpressionStatement",
                          "src": "2042:3:5"
                        },
                        "nodeType": "ForStatement",
                        "src": "1986:592:5"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 173,
                      "name": "amountRemaining",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 170,
                      "src": "1955:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 174,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1974:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1955:20:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 254,
                  "nodeType": "WhileStatement",
                  "src": "1948:636:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 256,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2621:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2621:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 258,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 129,
                        "src": "2633:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 255,
                      "name": "Withdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "2611:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2611:30:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 260,
                  "nodeType": "EmitStatement",
                  "src": "2606:35:5"
                }
              ]
            },
            "functionSelector": "2e1a7d4d",
            "id": 262,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 132,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 131,
                  "name": "onlyStakers",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 524,
                  "src": "1495:11:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "1495:11:5"
              }
            ],
            "name": "withdraw",
            "nameLocation": "1462:8:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 129,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1479:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 262,
                  "src": "1471:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 128,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1471:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1470:17:5"
            },
            "returnParameters": {
              "id": 133,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1506:0:5"
            },
            "scope": 525,
            "src": "1453:1193:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 280,
              "nodeType": "Block",
              "src": "2692:99:5",
              "statements": [
                {
                  "assignments": [
                    268
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 268,
                      "mutability": "mutable",
                      "name": "amountToMint",
                      "nameLocation": "2706:12:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 280,
                      "src": "2698:20:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 267,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2698:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 271,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 269,
                      "name": "_getRewardValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 410,
                      "src": "2721:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () returns (uint256)"
                      }
                    },
                    "id": 270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2721:17:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2698:40:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 275,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2761:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2761:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 277,
                        "name": "amountToMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 268,
                        "src": "2773:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 272,
                        "name": "gambleToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "2744:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GambleToken_$748",
                          "typeString": "contract GambleToken"
                        }
                      },
                      "id": 274,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 734,
                      "src": "2744:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2744:42:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 279,
                  "nodeType": "ExpressionStatement",
                  "src": "2744:42:5"
                }
              ]
            },
            "functionSelector": "b88a802f",
            "id": 281,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 265,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 264,
                  "name": "onlyStakers",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 524,
                  "src": "2680:11:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "2680:11:5"
              }
            ],
            "name": "claimReward",
            "nameLocation": "2659:11:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 263,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2670:2:5"
            },
            "returnParameters": {
              "id": 266,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2692:0:5"
            },
            "scope": 525,
            "src": "2650:141:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 323,
              "nodeType": "Block",
              "src": "2867:242:5",
              "statements": [
                {
                  "assignments": [
                    289
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 289,
                      "mutability": "mutable",
                      "name": "totalAmountStaked",
                      "nameLocation": "2881:17:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 323,
                      "src": "2873:25:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 288,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2873:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 291,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2901:1:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2873:29:5"
                },
                {
                  "assignments": [
                    296
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 296,
                      "mutability": "mutable",
                      "name": "currentStakes",
                      "nameLocation": "2923:13:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 323,
                      "src": "2908:28:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Stake_$81_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Cage.Stake[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 294,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 293,
                            "name": "Stake",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 81,
                            "src": "2908:5:5"
                          },
                          "referencedDeclaration": 81,
                          "src": "2908:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stake_$81_storage_ptr",
                            "typeString": "struct Cage.Stake"
                          }
                        },
                        "id": 295,
                        "nodeType": "ArrayTypeName",
                        "src": "2908:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Stake_$81_storage_$dyn_storage_ptr",
                          "typeString": "struct Cage.Stake[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 300,
                  "initialValue": {
                    "baseExpression": {
                      "id": 297,
                      "name": "stakerToStakes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "2939:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stake_$81_storage_$dyn_storage_$",
                        "typeString": "mapping(address => struct Cage.Stake storage ref[] storage ref)"
                      }
                    },
                    "id": 299,
                    "indexExpression": {
                      "id": 298,
                      "name": "_account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 283,
                      "src": "2954:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2939:24:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Stake_$81_storage_$dyn_storage",
                      "typeString": "struct Cage.Stake storage ref[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2908:55:5"
                },
                {
                  "body": {
                    "id": 319,
                    "nodeType": "Block",
                    "src": "3016:59:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 312,
                            "name": "totalAmountStaked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 289,
                            "src": "3024:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 313,
                                "name": "currentStakes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 296,
                                "src": "3045:13:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Stake_$81_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "struct Cage.Stake memory[] memory"
                                }
                              },
                              "id": 315,
                              "indexExpression": {
                                "id": 314,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 302,
                                "src": "3059:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3045:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Stake_$81_memory_ptr",
                                "typeString": "struct Cage.Stake memory"
                              }
                            },
                            "id": 316,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 78,
                            "src": "3045:23:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3024:44:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 318,
                        "nodeType": "ExpressionStatement",
                        "src": "3024:44:5"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 305,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 302,
                      "src": "2986:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 306,
                        "name": "currentStakes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 296,
                        "src": "2990:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Stake_$81_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Cage.Stake memory[] memory"
                        }
                      },
                      "id": 307,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2990:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2986:24:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 320,
                  "initializationExpression": {
                    "assignments": [
                      302
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 302,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2979:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 320,
                        "src": "2974:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 301,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2974:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 304,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 303,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2983:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2974:10:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 310,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3012:3:5",
                      "subExpression": {
                        "id": 309,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 302,
                        "src": "3012:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 311,
                    "nodeType": "ExpressionStatement",
                    "src": "3012:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "2969:106:5"
                },
                {
                  "expression": {
                    "id": 321,
                    "name": "totalAmountStaked",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 289,
                    "src": "3087:17:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 287,
                  "id": 322,
                  "nodeType": "Return",
                  "src": "3080:24:5"
                }
              ]
            },
            "functionSelector": "4da6a556",
            "id": 324,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStakedAmount",
            "nameLocation": "2804:15:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 284,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 283,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "2828:8:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 324,
                  "src": "2820:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 282,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2820:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2819:18:5"
            },
            "returnParameters": {
              "id": 287,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 286,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 324,
                  "src": "2858:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 285,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2858:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2857:9:5"
            },
            "scope": 525,
            "src": "2795:314:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 335,
              "nodeType": "Block",
              "src": "3175:35:5",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 331,
                      "name": "stakers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
                      "src": "3188:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 333,
                    "indexExpression": {
                      "id": 332,
                      "name": "_account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 326,
                      "src": "3196:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3188:17:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 330,
                  "id": 334,
                  "nodeType": "Return",
                  "src": "3181:24:5"
                }
              ]
            },
            "functionSelector": "6f1e8533",
            "id": 336,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isStaker",
            "nameLocation": "3122:8:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 327,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 326,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "3139:8:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 336,
                  "src": "3131:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 325,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3131:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3130:18:5"
            },
            "returnParameters": {
              "id": 330,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 329,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 336,
                  "src": "3169:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 328,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3169:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3168:6:5"
            },
            "scope": 525,
            "src": "3113:97:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 352,
              "nodeType": "Block",
              "src": "3303:50:5",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 346,
                        "name": "stakerToStakes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "3316:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stake_$81_storage_$dyn_storage_$",
                          "typeString": "mapping(address => struct Cage.Stake storage ref[] storage ref)"
                        }
                      },
                      "id": 348,
                      "indexExpression": {
                        "id": 347,
                        "name": "_account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 338,
                        "src": "3331:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3316:24:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Stake_$81_storage_$dyn_storage",
                        "typeString": "struct Cage.Stake storage ref[] storage ref"
                      }
                    },
                    "id": 350,
                    "indexExpression": {
                      "id": 349,
                      "name": "_index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 340,
                      "src": "3341:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3316:32:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$81_storage",
                      "typeString": "struct Cage.Stake storage ref"
                    }
                  },
                  "functionReturnParameters": 345,
                  "id": 351,
                  "nodeType": "Return",
                  "src": "3309:39:5"
                }
              ]
            },
            "functionSelector": "f97500c3",
            "id": 353,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStakeObj",
            "nameLocation": "3223:11:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 341,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 338,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "3243:8:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 353,
                  "src": "3235:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 337,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3235:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 340,
                  "mutability": "mutable",
                  "name": "_index",
                  "nameLocation": "3261:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 353,
                  "src": "3253:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 339,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3253:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3234:34:5"
            },
            "returnParameters": {
              "id": 345,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 344,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 353,
                  "src": "3289:12:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Stake_$81_memory_ptr",
                    "typeString": "struct Cage.Stake"
                  },
                  "typeName": {
                    "id": 343,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 342,
                      "name": "Stake",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 81,
                      "src": "3289:5:5"
                    },
                    "referencedDeclaration": 81,
                    "src": "3289:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$81_storage_ptr",
                      "typeString": "struct Cage.Stake"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3288:14:5"
            },
            "scope": 525,
            "src": "3214:139:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 409,
              "nodeType": "Block",
              "src": "3409:367:5",
              "statements": [
                {
                  "assignments": [
                    359
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 359,
                      "mutability": "mutable",
                      "name": "rewardValue",
                      "nameLocation": "3423:11:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 409,
                      "src": "3415:19:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 358,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3415:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 361,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3437:1:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3415:23:5"
                },
                {
                  "assignments": [
                    366
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 366,
                      "mutability": "mutable",
                      "name": "currentStakes",
                      "nameLocation": "3459:13:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 409,
                      "src": "3444:28:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Stake_$81_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct Cage.Stake[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 364,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 363,
                            "name": "Stake",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 81,
                            "src": "3444:5:5"
                          },
                          "referencedDeclaration": 81,
                          "src": "3444:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stake_$81_storage_ptr",
                            "typeString": "struct Cage.Stake"
                          }
                        },
                        "id": 365,
                        "nodeType": "ArrayTypeName",
                        "src": "3444:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Stake_$81_storage_$dyn_storage_ptr",
                          "typeString": "struct Cage.Stake[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 371,
                  "initialValue": {
                    "baseExpression": {
                      "id": 367,
                      "name": "stakerToStakes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "3475:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stake_$81_storage_$dyn_storage_$",
                        "typeString": "mapping(address => struct Cage.Stake storage ref[] storage ref)"
                      }
                    },
                    "id": 370,
                    "indexExpression": {
                      "expression": {
                        "id": 368,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3490:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 369,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3490:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3475:26:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Stake_$81_storage_$dyn_storage",
                      "typeString": "struct Cage.Stake storage ref[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3444:57:5"
                },
                {
                  "body": {
                    "id": 405,
                    "nodeType": "Block",
                    "src": "3554:194:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 403,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 383,
                            "name": "rewardValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 359,
                            "src": "3628:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 402,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 399,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 384,
                                        "name": "currentStakes",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 366,
                                        "src": "3644:13:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_Stake_$81_memory_ptr_$dyn_memory_ptr",
                                          "typeString": "struct Cage.Stake memory[] memory"
                                        }
                                      },
                                      "id": 386,
                                      "indexExpression": {
                                        "id": 385,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 373,
                                        "src": "3658:1:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3644:16:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Stake_$81_memory_ptr",
                                        "typeString": "struct Cage.Stake memory"
                                      }
                                    },
                                    "id": 387,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "amount",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 78,
                                    "src": "3644:23:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 397,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "components": [
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 394,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "expression": {
                                                  "id": 388,
                                                  "name": "block",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": -4,
                                                  "src": "3672:5:5",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_block",
                                                    "typeString": "block"
                                                  }
                                                },
                                                "id": 389,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "timestamp",
                                                "nodeType": "MemberAccess",
                                                "src": "3672:15:5",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "-",
                                              "rightExpression": {
                                                "expression": {
                                                  "baseExpression": {
                                                    "id": 390,
                                                    "name": "currentStakes",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 366,
                                                    "src": "3690:13:5",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_array$_t_struct$_Stake_$81_memory_ptr_$dyn_memory_ptr",
                                                      "typeString": "struct Cage.Stake memory[] memory"
                                                    }
                                                  },
                                                  "id": 392,
                                                  "indexExpression": {
                                                    "id": 391,
                                                    "name": "i",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 373,
                                                    "src": "3704:1:5",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
                                                  "src": "3690:16:5",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Stake_$81_memory_ptr",
                                                    "typeString": "struct Cage.Stake memory"
                                                  }
                                                },
                                                "id": 393,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "timestamp",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 80,
                                                "src": "3690:26:5",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "3672:44:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "id": 395,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "3671:46:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "hexValue": "31",
                                          "id": 396,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "3720:6:5",
                                          "subdenomination": "days",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_86400_by_1",
                                            "typeString": "int_const 86400"
                                          },
                                          "value": "1"
                                        },
                                        "src": "3671:55:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 398,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "3670:57:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "3644:83:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 400,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "3643:85:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 401,
                              "name": "rewardRate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10,
                              "src": "3731:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint16",
                                "typeString": "uint16"
                              }
                            },
                            "src": "3643:98:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3628:113:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 404,
                        "nodeType": "ExpressionStatement",
                        "src": "3628:113:5"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 376,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 373,
                      "src": "3524:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 377,
                        "name": "currentStakes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 366,
                        "src": "3528:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Stake_$81_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Cage.Stake memory[] memory"
                        }
                      },
                      "id": 378,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3528:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3524:24:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 406,
                  "initializationExpression": {
                    "assignments": [
                      373
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 373,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3517:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 406,
                        "src": "3512:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 372,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3512:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 375,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 374,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3521:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3512:10:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 381,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3550:3:5",
                      "subExpression": {
                        "id": 380,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 373,
                        "src": "3550:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 382,
                    "nodeType": "ExpressionStatement",
                    "src": "3550:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "3507:241:5"
                },
                {
                  "expression": {
                    "id": 407,
                    "name": "rewardValue",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 359,
                    "src": "3760:11:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 357,
                  "id": 408,
                  "nodeType": "Return",
                  "src": "3753:18:5"
                }
              ]
            },
            "id": 410,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getRewardValue",
            "nameLocation": "3365:15:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 354,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3380:2:5"
            },
            "returnParameters": {
              "id": 357,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 356,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 410,
                  "src": "3400:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 355,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3400:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3399:9:5"
            },
            "scope": 525,
            "src": "3356:420:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 435,
              "nodeType": "Block",
              "src": "3811:229:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "expression": {
                              "id": 414,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3879:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 415,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3879:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 416,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "3879:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 417,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3901:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 418,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "3901:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3879:31:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f206e6f74206f776e20656e6f75676820455448",
                        "id": 420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3912:27:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4a38ee27dd50c263a6645d3a19b475cfe61383f6e10fa94b28a98ed6ea4501dc",
                          "typeString": "literal_string \"You do not own enough ETH\""
                        },
                        "value": "You do not own enough ETH"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4a38ee27dd50c263a6645d3a19b475cfe61383f6e10fa94b28a98ed6ea4501dc",
                          "typeString": "literal_string \"You do not own enough ETH\""
                        }
                      ],
                      "id": 413,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3871:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3871:69:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 422,
                  "nodeType": "ExpressionStatement",
                  "src": "3871:69:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 426,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4007:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4007:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 431,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 428,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4019:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 429,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "4019:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "31303030",
                              "id": 430,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4029:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000_by_1",
                                "typeString": "int_const 1000"
                              },
                              "value": "1000"
                            },
                            "src": "4019:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 432,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "4018:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 423,
                        "name": "gambleToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "3990:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GambleToken_$748",
                          "typeString": "contract GambleToken"
                        }
                      },
                      "id": 425,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 734,
                      "src": "3990:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3990:45:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 434,
                  "nodeType": "ExpressionStatement",
                  "src": "3990:45:5"
                }
              ]
            },
            "functionSelector": "53aab434",
            "id": 436,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buyIn",
            "nameLocation": "3789:5:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 411,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3794:2:5"
            },
            "returnParameters": {
              "id": 412,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3811:0:5"
            },
            "scope": 525,
            "src": "3780:260:5",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 481,
              "nodeType": "Block",
              "src": "4085:360:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 444,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4121:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 445,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4121:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 442,
                              "name": "gambleToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18,
                              "src": "4099:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_GambleToken_$748",
                                "typeString": "contract GambleToken"
                              }
                            },
                            "id": 443,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 869,
                            "src": "4099:21:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 446,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4099:33:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 447,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 438,
                          "src": "4136:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4099:44:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206d69676874206e65656420746f2070757420697420616c6c206f6e2072656420746f2063617368206f7574207468617420616d6f756e742e",
                        "id": 449,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4145:62:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bc70f94818493ceb2cf37404bf1f6a96436691cc3481d0e1577b9b21e6aa26e0",
                          "typeString": "literal_string \"You might need to put it all on red to cash out that amount.\""
                        },
                        "value": "You might need to put it all on red to cash out that amount."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bc70f94818493ceb2cf37404bf1f6a96436691cc3481d0e1577b9b21e6aa26e0",
                          "typeString": "literal_string \"You might need to put it all on red to cash out that amount.\""
                        }
                      ],
                      "id": 441,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4091:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4091:117:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 451,
                  "nodeType": "ExpressionStatement",
                  "src": "4091:117:5"
                },
                {
                  "assignments": [
                    453
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 453,
                      "mutability": "mutable",
                      "name": "cashOutAmount",
                      "nameLocation": "4222:13:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 481,
                      "src": "4214:21:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 452,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4214:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 457,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 454,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 438,
                      "src": "4238:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "31303030",
                      "id": 455,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4246:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000_by_1",
                        "typeString": "int_const 1000"
                      },
                      "value": "1000"
                    },
                    "src": "4238:12:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4214:36:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 464,
                        "name": "cashOutAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 453,
                        "src": "4312:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 460,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4291:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 461,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4291:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4283:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 458,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4283:8:5",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4283:19:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 463,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "4283:28:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4283:43:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 466,
                  "nodeType": "ExpressionStatement",
                  "src": "4283:43:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 470,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4376:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4376:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 472,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 438,
                        "src": "4387:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 467,
                        "name": "gambleToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18,
                        "src": "4359:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_GambleToken_$748",
                          "typeString": "contract GambleToken"
                        }
                      },
                      "id": 469,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 747,
                      "src": "4359:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4359:36:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 474,
                  "nodeType": "ExpressionStatement",
                  "src": "4359:36:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 476,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4414:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4414:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 478,
                        "name": "cashOutAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 453,
                        "src": "4426:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 475,
                      "name": "CashOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52,
                      "src": "4406:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4406:34:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 480,
                  "nodeType": "EmitStatement",
                  "src": "4401:39:5"
                }
              ]
            },
            "functionSelector": "5c7b79f5",
            "id": 482,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cashOut",
            "nameLocation": "4053:7:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 439,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 438,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4069:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 482,
                  "src": "4061:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 437,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4061:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4060:17:5"
            },
            "returnParameters": {
              "id": 440,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4085:0:5"
            },
            "scope": 525,
            "src": "4044:401:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 496,
              "nodeType": "Block",
              "src": "4507:37:5",
              "statements": [
                {
                  "expression": {
                    "id": 494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 489,
                      "name": "rewardRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "4513:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 492,
                          "name": "_rate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 484,
                          "src": "4533:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 491,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4526:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint16_$",
                          "typeString": "type(uint16)"
                        },
                        "typeName": {
                          "id": 490,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "4526:6:5",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 493,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4526:13:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "4513:26:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 495,
                  "nodeType": "ExpressionStatement",
                  "src": "4513:26:5"
                }
              ]
            },
            "id": 497,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 487,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 486,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 572,
                  "src": "4497:9:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "4497:9:5"
              }
            ],
            "name": "_setRewardRate",
            "nameLocation": "4458:14:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 485,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 484,
                  "mutability": "mutable",
                  "name": "_rate",
                  "nameLocation": "4481:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 497,
                  "src": "4473:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 483,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4473:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4472:15:5"
            },
            "returnParameters": {
              "id": 488,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4507:0:5"
            },
            "scope": 525,
            "src": "4449:95:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 511,
              "nodeType": "Block",
              "src": "4608:39:5",
              "statements": [
                {
                  "expression": {
                    "id": 509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 504,
                      "name": "exchangeRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "4614:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 507,
                          "name": "_rate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 499,
                          "src": "4636:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4629:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint16_$",
                          "typeString": "type(uint16)"
                        },
                        "typeName": {
                          "id": 505,
                          "name": "uint16",
                          "nodeType": "ElementaryTypeName",
                          "src": "4629:6:5",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 508,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4629:13:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "4614:28:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 510,
                  "nodeType": "ExpressionStatement",
                  "src": "4614:28:5"
                }
              ]
            },
            "id": 512,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 502,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 501,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 572,
                  "src": "4598:9:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "4598:9:5"
              }
            ],
            "name": "_setExchangeRate",
            "nameLocation": "4557:16:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 500,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 499,
                  "mutability": "mutable",
                  "name": "_rate",
                  "nameLocation": "4582:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 512,
                  "src": "4574:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 498,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4574:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4573:15:5"
            },
            "returnParameters": {
              "id": 503,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4608:0:5"
            },
            "scope": 525,
            "src": "4548:99:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 523,
              "nodeType": "Block",
              "src": "4677:78:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 515,
                          "name": "stakers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32,
                          "src": "4691:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 518,
                        "indexExpression": {
                          "expression": {
                            "id": 516,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4699:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 517,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4699:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4691:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752068617665206e6f74207374616b656420616e79204554482e",
                        "id": 519,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4712:30:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b50d711ea5c72bf6127dee3ae74285cd11088253efe58a76f62babaf5bc8c60c",
                          "typeString": "literal_string \"You have not staked any ETH.\""
                        },
                        "value": "You have not staked any ETH."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b50d711ea5c72bf6127dee3ae74285cd11088253efe58a76f62babaf5bc8c60c",
                          "typeString": "literal_string \"You have not staked any ETH.\""
                        }
                      ],
                      "id": 514,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4683:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4683:60:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 521,
                  "nodeType": "ExpressionStatement",
                  "src": "4683:60:5"
                },
                {
                  "id": 522,
                  "nodeType": "PlaceholderStatement",
                  "src": "4749:1:5"
                }
              ]
            },
            "id": 524,
            "name": "onlyStakers",
            "nameLocation": "4663:11:5",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 513,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4674:2:5"
            },
            "src": "4654:101:5",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 526,
        "src": "220:4540:5",
        "usedErrors": []
      }
    ],
    "src": "31:4730:5"
  },
  "bytecode": "60806040523480156200001157600080fd5b5060405162001141380380620011418339810160408190526200003491620001a7565b6200003f3362000079565b600280546001600160a01b0319166001600160a01b0385161790556200006582620000c9565b62000070816200013a565b505050620001ec565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000546001600160a01b03163314620001185760405162461bcd60e51b815260206004820181905260248201526000805160206200112183398151915260448201526064015b60405180910390fd5b6000805461ffff909216600160a01b0261ffff60a01b19909216919091179055565b6000546001600160a01b03163314620001855760405162461bcd60e51b815260206004820181905260248201526000805160206200112183398151915260448201526064016200010f565b6000805461ffff909216600160b01b0261ffff60b01b19909216919091179055565b600080600060608486031215620001bd57600080fd5b83516001600160a01b0381168114620001d557600080fd5b602085015160409095015190969495509392505050565b610f2580620001fc6000396000f3fe6080604052600436106100a75760003560e01c80636f1e8533116100645780636f1e853314610169578063715018a6146101b25780638da5cb5b146101c7578063b88a802f146101e5578063f2fde38b146101fa578063f97500c31461021a57600080fd5b80632e1a7d4d146100ac5780633a4b66f1146100ce5780634b57b0be146100d65780634da6a5561461011357806353aab434146101415780635c7b79f514610149575b600080fd5b3480156100b857600080fd5b506100cc6100c7366004610d73565b610255565b005b6100cc61053c565b3480156100e257600080fd5b506001546100f6906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561011f57600080fd5b5061013361012e366004610da8565b610626565b60405190815260200161010a565b6100cc6106fc565b34801561015557600080fd5b506100cc610164366004610d73565b6107c7565b34801561017557600080fd5b506101a2610184366004610da8565b6001600160a01b031660009081526005602052604090205460ff1690565b604051901515815260200161010a565b3480156101be57600080fd5b506100cc610983565b3480156101d357600080fd5b506000546001600160a01b03166100f6565b3480156101f157600080fd5b506100cc6109e9565b34801561020657600080fd5b506100cc610215366004610da8565b610aba565b34801561022657600080fd5b5061023a610235366004610dca565b610b85565b6040805182518152602092830151928101929092520161010a565b3360009081526005602052604090205460ff166102b95760405162461bcd60e51b815260206004820152601c60248201527f596f752068617665206e6f74207374616b656420616e79204554482e0000000060448201526064015b60405180910390fd5b60006102c433610626565b9050808211156103275760405162461bcd60e51b815260206004820152602860248201527f417474656d7074696e6720746f207769746864726177206d6f7265207468616e6044820152671039ba30b5b2b21760c11b60648201526084016102b0565b604051339083156108fc029084906000818181858888f19350505050158015610354573d6000803e3d6000fd5b5081810361037457336000908152600560205260409020805460ff191690555b815b801561050257336000908152600460205260409020545b80156104fc5733600090815260046020526040902082906103af600184610e0a565b815481106103bf576103bf610e21565b90600052602060002090600202016000015411610462573360009081526004602052604090206103f0600183610e0a565b8154811061040057610400610e21565b9060005260206000209060020201600001548261041d9190610e0a565b3360009081526004602052604090208054919350908061043f5761043f610e37565b6000828152602081206002600019909301928302018181556001015590556104ea565b336000908152600460205260409020829061047e600184610e0a565b8154811061048e5761048e610e21565b9060005260206000209060020201600001546104aa9190610e0a565b3360009081526004602052604090206104c4600184610e0a565b815481106104d4576104d4610e21565b6000918252602082206002909102019190915591505b806104f481610e4d565b91505061038d565b50610376565b60405183815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d59060200160405180910390a2505050565b343331116105885760405162461bcd60e51b81526020600482015260196024820152780b2deea40c8de40dcdee840deeedc40cadcdeeaced0408aa89603b1b60448201526064016102b0565b336000818152600560209081526040808320805460ff19166001908117909155600483528184208251808401845234808252428287018181528454808701865594895296909720915160029093029091019182559351910155519192917f1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee909161061b918590918252602082015260400190565b60405180910390a250565b6001600160a01b0381166000908152600460209081526040808320805482518185028101850190935280835284938493929190849084015b828210156106a45783829060005260206000209060020201604051806040016040529081600082015481526020016001820154815250508152602001906001019061065e565b50505050905060005b81518110156106f3578181815181106106c8576106c8610e21565b602002602001015160000151836106df9190610e64565b9250806106eb81610e7c565b9150506106ad565b50909392505050565b34333110156107495760405162461bcd60e51b81526020600482015260196024820152780b2deea40c8de40dcdee840deeedc40cadcdeeaced0408aa89603b1b60448201526064016102b0565b6002546001600160a01b03166340c10f1933610767346103e8610e95565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b1580156107ad57600080fd5b505af11580156107c1573d6000803e3d6000fd5b50505050565b6002546040516370a0823160e01b815233600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa15801561080f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108339190610eb4565b10156108a75760405162461bcd60e51b815260206004820152603c60248201527f596f75206d69676874206e65656420746f2070757420697420616c6c206f6e2060448201527f72656420746f2063617368206f7574207468617420616d6f756e742e0000000060648201526084016102b0565b60006108b56103e883610ecd565b604051909150339082156108fc029083906000818181858888f193505050501580156108e5573d6000803e3d6000fd5b50600254604051632770a7eb60e21b8152336004820152602481018490526001600160a01b0390911690639dc29fac90604401600060405180830381600087803b15801561093257600080fd5b505af1158015610946573d6000803e3d6000fd5b50506040518381523392507fab933177d8753a66dd869151cf9aa88649e067b7a4e2dad9d5d192d61cf593b0915060200160405180910390a25050565b6000546001600160a01b031633146109dd5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102b0565b6109e76000610bf8565b565b3360009081526005602052604090205460ff16610a485760405162461bcd60e51b815260206004820152601c60248201527f596f752068617665206e6f74207374616b656420616e79204554482e0000000060448201526064016102b0565b6000610a52610c48565b6002546040516340c10f1960e01b8152336004820152602481018390529192506001600160a01b0316906340c10f1990604401600060405180830381600087803b158015610a9f57600080fd5b505af1158015610ab3573d6000803e3d6000fd5b5050505050565b6000546001600160a01b03163314610b145760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102b0565b6001600160a01b038116610b795760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102b0565b610b8281610bf8565b50565b60408051808201909152600080825260208201526001600160a01b0383166000908152600460205260409020805483908110610bc357610bc3610e21565b906000526020600020906002020160405180604001604052908160008201548152602001600182015481525050905092915050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b336000908152600460209081526040808320805482518185028101850190935280835284938493929190849084015b82821015610cbd57838290600052602060002090600202016040518060400160405290816000820154815260200160018201548152505081526020019060010190610c77565b50505050905060005b8151811015610d6b57600060149054906101000a900461ffff1661ffff1662015180838381518110610cfa57610cfa610e21565b60200260200101516020015142610d119190610e0a565b610d1b9190610ecd565b838381518110610d2d57610d2d610e21565b602002602001015160000151610d439190610e95565b610d4d9190610ecd565b610d579084610e64565b925080610d6381610e7c565b915050610cc6565b509092915050565b600060208284031215610d8557600080fd5b5035919050565b80356001600160a01b0381168114610da357600080fd5b919050565b600060208284031215610dba57600080fd5b610dc382610d8c565b9392505050565b60008060408385031215610ddd57600080fd5b610de683610d8c565b946020939093013593505050565b634e487b7160e01b600052601160045260246000fd5b600082821015610e1c57610e1c610df4565b500390565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b600081610e5c57610e5c610df4565b506000190190565b60008219821115610e7757610e77610df4565b500190565b600060018201610e8e57610e8e610df4565b5060010190565b6000816000190483118215151615610eaf57610eaf610df4565b500290565b600060208284031215610ec657600080fd5b5051919050565b600082610eea57634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212200ca00163b335038434310ec539f55350bf7dfb1ad36049f28f9bb3311959e9e964736f6c634300080d00334f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.13+commit.abaa5c0e"
  },
  "contractName": "Cage",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "41": [
            2006,
            2028,
            true
          ]
        }
      },
      "2": {},
      "4": {},
      "5": {
        "Cage.buyIn": {
          "38": [
            3879,
            3910,
            true
          ]
        },
        "Cage.cashOut": {
          "39": [
            4099,
            4143,
            true
          ]
        },
        "Cage.claimReward": {
          "40": [
            4691,
            4710,
            true
          ]
        },
        "Cage.stake": {
          "37": [
            1095,
            1125,
            true
          ]
        },
        "Cage.withdraw": {
          "34": [
            1581,
            1609,
            true
          ],
          "35": [
            1722,
            1750,
            false
          ],
          "36": [
            2060,
            2117,
            false
          ]
        }
      },
      "6": {}
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "29": [
            2378,
            2395
          ],
          "30": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "1": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "24": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "26": [
            1998,
            2071
          ],
          "27": [
            2081,
            2109
          ]
        }
      },
      "2": {},
      "4": {
        "Context._msgSender": {
          "23": [
            712,
            729
          ]
        }
      },
      "5": {
        "Cage._getRewardValue": {
          "31": [
            3628,
            3741
          ],
          "32": [
            3550,
            3553
          ],
          "33": [
            3753,
            3771
          ]
        },
        "Cage.buyIn": {
          "17": [
            3871,
            3940
          ],
          "18": [
            3990,
            4035
          ]
        },
        "Cage.cashOut": {
          "19": [
            4091,
            4208
          ],
          "20": [
            4283,
            4326
          ],
          "21": [
            4359,
            4395
          ],
          "22": [
            4401,
            4440
          ]
        },
        "Cage.claimReward": {
          "25": [
            2744,
            2786
          ]
        },
        "Cage.getStakeObj": {
          "28": [
            3309,
            3348
          ]
        },
        "Cage.getStakedAmount": {
          "14": [
            3024,
            3068
          ],
          "15": [
            3012,
            3015
          ],
          "16": [
            3080,
            3104
          ]
        },
        "Cage.isStaker": {
          "0": [
            3181,
            3205
          ]
        },
        "Cage.stake": {
          "10": [
            1087,
            1155
          ],
          "11": [
            1200,
            1226
          ],
          "12": [
            1308,
            1368
          ],
          "13": [
            1398,
            1443
          ]
        },
        "Cage.withdraw": {
          "2": [
            1573,
            1654
          ],
          "3": [
            1675,
            1712
          ],
          "4": [
            1785,
            1812
          ],
          "5": [
            2212,
            2286
          ],
          "6": [
            2298,
            2330
          ],
          "7": [
            2431,
            2528
          ],
          "8": [
            2042,
            2045
          ],
          "9": [
            2606,
            2641
          ]
        }
      },
      "6": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Context",
    "GambleToken",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.5.0/Ownable"
  ],
  "deployedBytecode": "6080604052600436106100a75760003560e01c80636f1e8533116100645780636f1e853314610169578063715018a6146101b25780638da5cb5b146101c7578063b88a802f146101e5578063f2fde38b146101fa578063f97500c31461021a57600080fd5b80632e1a7d4d146100ac5780633a4b66f1146100ce5780634b57b0be146100d65780634da6a5561461011357806353aab434146101415780635c7b79f514610149575b600080fd5b3480156100b857600080fd5b506100cc6100c7366004610d73565b610255565b005b6100cc61053c565b3480156100e257600080fd5b506001546100f6906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561011f57600080fd5b5061013361012e366004610da8565b610626565b60405190815260200161010a565b6100cc6106fc565b34801561015557600080fd5b506100cc610164366004610d73565b6107c7565b34801561017557600080fd5b506101a2610184366004610da8565b6001600160a01b031660009081526005602052604090205460ff1690565b604051901515815260200161010a565b3480156101be57600080fd5b506100cc610983565b3480156101d357600080fd5b506000546001600160a01b03166100f6565b3480156101f157600080fd5b506100cc6109e9565b34801561020657600080fd5b506100cc610215366004610da8565b610aba565b34801561022657600080fd5b5061023a610235366004610dca565b610b85565b6040805182518152602092830151928101929092520161010a565b3360009081526005602052604090205460ff166102b95760405162461bcd60e51b815260206004820152601c60248201527f596f752068617665206e6f74207374616b656420616e79204554482e0000000060448201526064015b60405180910390fd5b60006102c433610626565b9050808211156103275760405162461bcd60e51b815260206004820152602860248201527f417474656d7074696e6720746f207769746864726177206d6f7265207468616e6044820152671039ba30b5b2b21760c11b60648201526084016102b0565b604051339083156108fc029084906000818181858888f19350505050158015610354573d6000803e3d6000fd5b5081810361037457336000908152600560205260409020805460ff191690555b815b801561050257336000908152600460205260409020545b80156104fc5733600090815260046020526040902082906103af600184610e0a565b815481106103bf576103bf610e21565b90600052602060002090600202016000015411610462573360009081526004602052604090206103f0600183610e0a565b8154811061040057610400610e21565b9060005260206000209060020201600001548261041d9190610e0a565b3360009081526004602052604090208054919350908061043f5761043f610e37565b6000828152602081206002600019909301928302018181556001015590556104ea565b336000908152600460205260409020829061047e600184610e0a565b8154811061048e5761048e610e21565b9060005260206000209060020201600001546104aa9190610e0a565b3360009081526004602052604090206104c4600184610e0a565b815481106104d4576104d4610e21565b6000918252602082206002909102019190915591505b806104f481610e4d565b91505061038d565b50610376565b60405183815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d59060200160405180910390a2505050565b343331116105885760405162461bcd60e51b81526020600482015260196024820152780b2deea40c8de40dcdee840deeedc40cadcdeeaced0408aa89603b1b60448201526064016102b0565b336000818152600560209081526040808320805460ff19166001908117909155600483528184208251808401845234808252428287018181528454808701865594895296909720915160029093029091019182559351910155519192917f1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee909161061b918590918252602082015260400190565b60405180910390a250565b6001600160a01b0381166000908152600460209081526040808320805482518185028101850190935280835284938493929190849084015b828210156106a45783829060005260206000209060020201604051806040016040529081600082015481526020016001820154815250508152602001906001019061065e565b50505050905060005b81518110156106f3578181815181106106c8576106c8610e21565b602002602001015160000151836106df9190610e64565b9250806106eb81610e7c565b9150506106ad565b50909392505050565b34333110156107495760405162461bcd60e51b81526020600482015260196024820152780b2deea40c8de40dcdee840deeedc40cadcdeeaced0408aa89603b1b60448201526064016102b0565b6002546001600160a01b03166340c10f1933610767346103e8610e95565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b1580156107ad57600080fd5b505af11580156107c1573d6000803e3d6000fd5b50505050565b6002546040516370a0823160e01b815233600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa15801561080f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108339190610eb4565b10156108a75760405162461bcd60e51b815260206004820152603c60248201527f596f75206d69676874206e65656420746f2070757420697420616c6c206f6e2060448201527f72656420746f2063617368206f7574207468617420616d6f756e742e0000000060648201526084016102b0565b60006108b56103e883610ecd565b604051909150339082156108fc029083906000818181858888f193505050501580156108e5573d6000803e3d6000fd5b50600254604051632770a7eb60e21b8152336004820152602481018490526001600160a01b0390911690639dc29fac90604401600060405180830381600087803b15801561093257600080fd5b505af1158015610946573d6000803e3d6000fd5b50506040518381523392507fab933177d8753a66dd869151cf9aa88649e067b7a4e2dad9d5d192d61cf593b0915060200160405180910390a25050565b6000546001600160a01b031633146109dd5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102b0565b6109e76000610bf8565b565b3360009081526005602052604090205460ff16610a485760405162461bcd60e51b815260206004820152601c60248201527f596f752068617665206e6f74207374616b656420616e79204554482e0000000060448201526064016102b0565b6000610a52610c48565b6002546040516340c10f1960e01b8152336004820152602481018390529192506001600160a01b0316906340c10f1990604401600060405180830381600087803b158015610a9f57600080fd5b505af1158015610ab3573d6000803e3d6000fd5b5050505050565b6000546001600160a01b03163314610b145760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102b0565b6001600160a01b038116610b795760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102b0565b610b8281610bf8565b50565b60408051808201909152600080825260208201526001600160a01b0383166000908152600460205260409020805483908110610bc357610bc3610e21565b906000526020600020906002020160405180604001604052908160008201548152602001600182015481525050905092915050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b336000908152600460209081526040808320805482518185028101850190935280835284938493929190849084015b82821015610cbd57838290600052602060002090600202016040518060400160405290816000820154815260200160018201548152505081526020019060010190610c77565b50505050905060005b8151811015610d6b57600060149054906101000a900461ffff1661ffff1662015180838381518110610cfa57610cfa610e21565b60200260200101516020015142610d119190610e0a565b610d1b9190610ecd565b838381518110610d2d57610d2d610e21565b602002602001015160000151610d439190610e95565b610d4d9190610ecd565b610d579084610e64565b925080610d6381610e7c565b915050610cc6565b509092915050565b600060208284031215610d8557600080fd5b5035919050565b80356001600160a01b0381168114610da357600080fd5b919050565b600060208284031215610dba57600080fd5b610dc382610d8c565b9392505050565b60008060408385031215610ddd57600080fd5b610de683610d8c565b946020939093013593505050565b634e487b7160e01b600052601160045260246000fd5b600082821015610e1c57610e1c610df4565b500390565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b600081610e5c57610e5c610df4565b506000190190565b60008219821115610e7757610e77610df4565b500190565b600060018201610e8e57610e8e610df4565b5060010190565b6000816000190483118215151615610eaf57610eaf610df4565b500290565b600060208284031215610ec657600080fd5b5051919050565b600082610eea57634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212200ca00163b335038434310ec539f55350bf7dfb1ad36049f28f9bb3311959e9e964736f6c634300080d0033",
  "deployedSourceMap": "220:4540:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1453:1193;;;;;;;;;;-1:-1:-1;1453:1193:5;;;;;:::i;:::-;;:::i;:::-;;995:453;;;:::i;312:23::-;;;;;;;;;;-1:-1:-1;312:23:5;;;;-1:-1:-1;;;;;312:23:5;;;;;;-1:-1:-1;;;;;377:32:7;;;359:51;;347:2;332:18;312:23:5;;;;;;;;2795:314;;;;;;;;;;-1:-1:-1;2795:314:5;;;;;:::i;:::-;;:::i;:::-;;;936:25:7;;;924:2;909:18;2795:314:5;790:177:7;3780:260:5;;;:::i;4044:401::-;;;;;;;;;;-1:-1:-1;4044:401:5;;;;;:::i;:::-;;:::i;3113:97::-;;;;;;;;;;-1:-1:-1;3113:97:5;;;;;:::i;:::-;-1:-1:-1;;;;;3188:17:5;3169:4;3188:17;;;:7;:17;;;;;;;;;3113:97;;;;1137:14:7;;1130:22;1112:41;;1100:2;1085:18;3113:97:5;972:187:7;1668:101:0;;;;;;;;;;;;;:::i;1036:85::-;;;;;;;;;;-1:-1:-1;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;1036:85;;2650:141:5;;;;;;;;;;;;;:::i;1918:198:0:-;;;;;;;;;;-1:-1:-1;1918:198:0;;;;;:::i;:::-;;:::i;3214:139:5:-;;;;;;;;;;-1:-1:-1;3214:139:5;;;;;:::i;:::-;;:::i;:::-;;;;1837:13:7;;1819:32;;1907:4;1895:17;;;1889:24;1867:20;;;1860:54;;;;1792:18;3214:139:5;1631:289:7;1453:1193:5;4699:10;4691:19;;;;:7;:19;;;;;;;;4683:60;;;;-1:-1:-1;;;4683:60:5;;2127:2:7;4683:60:5;;;2109:21:7;2166:2;2146:18;;;2139:30;2205;2185:18;;;2178:58;2253:18;;4683:60:5;;;;;;;;;1512:25:::1;1540:27;1556:10;1540:15;:27::i;:::-;1512:55;;1592:17;1581:7;:28;;1573:81;;;::::0;-1:-1:-1;;;1573:81:5;;2484:2:7;1573:81:5::1;::::0;::::1;2466:21:7::0;2523:2;2503:18;;;2496:30;2562:34;2542:18;;;2535:62;-1:-1:-1;;;2613:18:7;;;2606:38;2661:19;;1573:81:5::1;2282:404:7::0;1573:81:5::1;1675:37;::::0;1683:10:::1;::::0;1675:37;::::1;;;::::0;1704:7;;1675:37:::1;::::0;;;1704:7;1683:10;1675:37;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;1743:7;1722:17;:28:::0;1718:101:::1;;1793:10;1807:5;1785:19:::0;;;:7:::1;:19;::::0;;;;:27;;-1:-1:-1;;1785:27:5::1;::::0;;1718:101:::1;1935:7:::0;1948:636:::1;1955:20:::0;;1948:636:::1;;2015:10;1991:6;2000:26:::0;;;:14:::1;:26;::::0;;;;:33;1986:592:::1;2035:5:::0;;1986:592:::1;;2075:10;2060:26;::::0;;;:14:::1;:26;::::0;;;;2102:15;;2087:3:::1;2089:1;2087::::0;:3:::1;:::i;:::-;2060:31;;;;;;;;:::i;:::-;;;;;;;;;;;:38;;;:57;2056:514;;2263:10;2248:26;::::0;;;:14:::1;:26;::::0;;;;2275:3:::1;2277:1;2275::::0;:3:::1;:::i;:::-;2248:31;;;;;;;;:::i;:::-;;;;;;;;;;;:38;;;2230:15;:56;;;;:::i;:::-;2313:10;2298:26;::::0;;;:14:::1;:26;::::0;;;;:32;;2212:74;;-1:-1:-1;2298:26:5;:32;::::1;;;;:::i;:::-;;::::0;;;::::1;::::0;;::::1;-1:-1:-1::0;;2298:32:5;;;;;::::1;;::::0;;;::::1;;::::0;;;2056:514:::1;;;2487:10;2472:26;::::0;;;:14:::1;:26;::::0;;;;2513:15;;2499:3:::1;2501:1;2499::::0;:3:::1;:::i;:::-;2472:31;;;;;;;;:::i;:::-;;;;;;;;;;;:38;;;:56;;;;:::i;:::-;2446:10;2431:26;::::0;;;:14:::1;:26;::::0;;;;2458:3:::1;2460:1;2458::::0;:3:::1;:::i;:::-;2431:31;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;::::1;::::0;;::::1;;:97:::0;;;;:31;-1:-1:-1;2056:514:5::1;2042:3:::0;::::1;::::0;::::1;:::i;:::-;;;;1986:592;;;;1948:636;;;2611:30;::::0;936:25:7;;;2621:10:5::1;::::0;2611:30:::1;::::0;924:2:7;909:18;2611:30:5::1;;;;;;;1506:1140;;1453:1193:::0;:::o;995:453::-;1116:9;1095:10;:18;:30;1087:68;;;;-1:-1:-1;;;1087:68:5;;3560:2:7;1087:68:5;;;3542:21:7;3599:2;3579:18;;;3572:30;-1:-1:-1;;;3618:18:7;;;3611:55;3683:18;;1087:68:5;3358:349:7;1087:68:5;1208:10;1200:19;;;;:7;:19;;;;;;;;:26;;-1:-1:-1;;1200:26:5;1222:4;1200:26;;;;;;1308:14;:26;;;;;1340:27;;;;;;;1346:9;1340:27;;;1287:15;1340:27;;;;;;1308:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1403:40;1287:15;;1208:10;1403:40;;;;1287:15;;3886:25:7;;;3942:2;3927:18;;3920:34;3874:2;3859:18;;3712:248;1403:40:5;;;;;;;;1027:421;995:453::o;2795:314::-;-1:-1:-1;;;;;2939:24:5;;2858:7;2939:24;;;:14;:24;;;;;;;;2908:55;;;;;;;;;;;;;;;;;2858:7;;;;2908:55;2939:24;2908:55;2858:7;;2908:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2974:6;2969:106;2990:13;:20;2986:1;:24;2969:106;;;3045:13;3059:1;3045:16;;;;;;;;:::i;:::-;;;;;;;:23;;;3024:44;;;;;:::i;:::-;;-1:-1:-1;3012:3:5;;;;:::i;:::-;;;;2969:106;;;-1:-1:-1;3087:17:5;;2795:314;-1:-1:-1;;;2795:314:5:o;3780:260::-;3901:9;3879:10;:18;:31;;3871:69;;;;-1:-1:-1;;;3871:69:5;;3560:2:7;3871:69:5;;;3542:21:7;3599:2;3579:18;;;3572:30;-1:-1:-1;;;3618:18:7;;;3611:55;3683:18;;3871:69:5;3358:349:7;3871:69:5;3990:11;;-1:-1:-1;;;;;3990:11:5;:16;4007:10;4019:14;:9;4029:4;4019:14;:::i;:::-;3990:45;;-1:-1:-1;;;;;;3990:45:5;;;;;;;-1:-1:-1;;;;;4603:32:7;;;3990:45:5;;;4585:51:7;4652:18;;;4645:34;4558:18;;3990:45:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3780:260::o;4044:401::-;4099:11;;:33;;-1:-1:-1;;;4099:33:5;;4121:10;4099:33;;;359:51:7;4136:7:5;;-1:-1:-1;;;;;4099:11:5;;:21;;332:18:7;;4099:33:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;;4091:117;;;;-1:-1:-1;;;4091:117:5;;5081:2:7;4091:117:5;;;5063:21:7;5120:2;5100:18;;;5093:30;5159:34;5139:18;;;5132:62;5230:30;5210:18;;;5203:58;5278:19;;4091:117:5;4879:424:7;4091:117:5;4214:21;4238:12;4246:4;4238:7;:12;:::i;:::-;4283:43;;4214:36;;-1:-1:-1;4291:10:5;;4283:43;;;;;4214:36;;4283:43;;;;4214:36;4291:10;4283:43;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4359:11:5;;:36;;-1:-1:-1;;;4359:36:5;;4376:10;4359:36;;;4585:51:7;4652:18;;;4645:34;;;-1:-1:-1;;;;;4359:11:5;;;;:16;;4558:18:7;;4359:36:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4406:34:5;;936:25:7;;;4414:10:5;;-1:-1:-1;4406:34:5;;-1:-1:-1;924:2:7;909:18;4406:34:5;;;;;;;4085:360;4044:401;:::o;1668:101:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;5732:2:7;1240:68:0;;;5714:21:7;;;5751:18;;;5744:30;5810:34;5790:18;;;5783:62;5862:18;;1240:68:0;5530:356:7;1240:68:0;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;2650:141:5:-;4699:10;4691:19;;;;:7;:19;;;;;;;;4683:60;;;;-1:-1:-1;;;4683:60:5;;2127:2:7;4683:60:5;;;2109:21:7;2166:2;2146:18;;;2139:30;2205;2185:18;;;2178:58;2253:18;;4683:60:5;1925:352:7;4683:60:5;2698:20:::1;2721:17;:15;:17::i;:::-;2744:11;::::0;:42:::1;::::0;-1:-1:-1;;;2744:42:5;;2761:10:::1;2744:42;::::0;::::1;4585:51:7::0;4652:18;;;4645:34;;;2698:40:5;;-1:-1:-1;;;;;;2744:11:5::1;::::0;:16:::1;::::0;4558:18:7;;2744:42:5::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2692:99;2650:141::o:0;1918:198:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;5732:2:7;1240:68:0;;;5714:21:7;;;5751:18;;;5744:30;5810:34;5790:18;;;5783:62;5862:18;;1240:68:0;5530:356:7;1240:68:0;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;6093:2:7;1998:73:0::1;::::0;::::1;6075:21:7::0;6132:2;6112:18;;;6105:30;6171:34;6151:18;;;6144:62;-1:-1:-1;;;6222:18:7;;;6215:36;6268:19;;1998:73:0::1;5891:402:7::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;3214:139:5:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;3316:24:5;;;;;;:14;:24;;;;;:32;;3341:6;;3316:32;;;;;;:::i;:::-;;;;;;;;;;;3309:39;;;;;;;;;;;;;;;;;;;;;;;;;;;3214:139;;;;:::o;2270:187:0:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;3356:420:5:-;3490:10;3400:7;3475:26;;;:14;:26;;;;;;;;3444:57;;;;;;;;;;;;;;;;;3400:7;;;;3444:57;3475:26;3444:57;3400:7;;3444:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3512:6;3507:241;3528:13;:20;3524:1;:24;3507:241;;;3731:10;;;;;;;;;;;3643:98;;3720:6;3690:13;3704:1;3690:16;;;;;;;;:::i;:::-;;;;;;;:26;;;3672:15;:44;;;;:::i;:::-;3671:55;;;;:::i;:::-;3644:13;3658:1;3644:16;;;;;;;;:::i;:::-;;;;;;;:23;;;:83;;;;:::i;:::-;3643:98;;;;:::i;:::-;3628:113;;;;:::i;:::-;;-1:-1:-1;3550:3:5;;;;:::i;:::-;;;;3507:241;;;-1:-1:-1;3760:11:5;;3356:420;-1:-1:-1;;3356:420:5:o;14:180:7:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:7;;14:180;-1:-1:-1;14:180:7:o;421:173::-;489:20;;-1:-1:-1;;;;;538:31:7;;528:42;;518:70;;584:1;581;574:12;518:70;421:173;;;:::o;599:186::-;658:6;711:2;699:9;690:7;686:23;682:32;679:52;;;727:1;724;717:12;679:52;750:29;769:9;750:29;:::i;:::-;740:39;599:186;-1:-1:-1;;;599:186:7:o;1372:254::-;1440:6;1448;1501:2;1489:9;1480:7;1476:23;1472:32;1469:52;;;1517:1;1514;1507:12;1469:52;1540:29;1559:9;1540:29;:::i;:::-;1530:39;1616:2;1601:18;;;;1588:32;;-1:-1:-1;;;1372:254:7:o;2691:127::-;2752:10;2747:3;2743:20;2740:1;2733:31;2783:4;2780:1;2773:15;2807:4;2804:1;2797:15;2823:125;2863:4;2891:1;2888;2885:8;2882:34;;;2896:18;;:::i;:::-;-1:-1:-1;2933:9:7;;2823:125::o;2953:127::-;3014:10;3009:3;3005:20;3002:1;2995:31;3045:4;3042:1;3035:15;3069:4;3066:1;3059:15;3085:127;3146:10;3141:3;3137:20;3134:1;3127:31;3177:4;3174:1;3167:15;3201:4;3198:1;3191:15;3217:136;3256:3;3284:5;3274:39;;3293:18;;:::i;:::-;-1:-1:-1;;;3329:18:7;;3217:136::o;3965:128::-;4005:3;4036:1;4032:6;4029:1;4026:13;4023:39;;;4042:18;;:::i;:::-;-1:-1:-1;4078:9:7;;3965:128::o;4098:135::-;4137:3;4158:17;;;4155:43;;4178:18;;:::i;:::-;-1:-1:-1;4225:1:7;4214:13;;4098:135::o;4238:168::-;4278:7;4344:1;4340;4336:6;4332:14;4329:1;4326:21;4321:1;4314:9;4307:17;4303:45;4300:71;;;4351:18;;:::i;:::-;-1:-1:-1;4391:9:7;;4238:168::o;4690:184::-;4760:6;4813:2;4801:9;4792:7;4788:23;4784:32;4781:52;;;4829:1;4826;4819:12;4781:52;-1:-1:-1;4852:16:7;;4690:184;-1:-1:-1;4690:184:7:o;5308:217::-;5348:1;5374;5364:132;;5418:10;5413:3;5409:20;5406:1;5399:31;5453:4;5450:1;5443:15;5481:4;5478:1;5471:15;5364:132;-1:-1:-1;5510:9:7;;5308:217::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    220,
    4760
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA7 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6F1E8533 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x6F1E8533 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1B2 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0xB88A802F EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0xF97500C3 EQ PUSH2 0x21A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0xAC JUMPI DUP1 PUSH4 0x3A4B66F1 EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0x4B57B0BE EQ PUSH2 0xD6 JUMPI DUP1 PUSH4 0x4DA6A556 EQ PUSH2 0x113 JUMPI DUP1 PUSH4 0x53AAB434 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x5C7B79F5 EQ PUSH2 0x149 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCC PUSH2 0xC7 CALLDATASIZE PUSH1 0x4 PUSH2 0xD73 JUMP JUMPDEST PUSH2 0x255 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCC PUSH2 0x53C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0xF6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x133 PUSH2 0x12E CALLDATASIZE PUSH1 0x4 PUSH2 0xDA8 JUMP JUMPDEST PUSH2 0x626 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10A JUMP JUMPDEST PUSH2 0xCC PUSH2 0x6FC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x155 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCC PUSH2 0x164 CALLDATASIZE PUSH1 0x4 PUSH2 0xD73 JUMP JUMPDEST PUSH2 0x7C7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x175 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A2 PUSH2 0x184 CALLDATASIZE PUSH1 0x4 PUSH2 0xDA8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCC PUSH2 0x983 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xF6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCC PUSH2 0x9E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x206 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCC PUSH2 0x215 CALLDATASIZE PUSH1 0x4 PUSH2 0xDA8 JUMP JUMPDEST PUSH2 0xABA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x23A PUSH2 0x235 CALLDATASIZE PUSH1 0x4 PUSH2 0xDCA JUMP JUMPDEST PUSH2 0xB85 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 MLOAD DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD MLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADD PUSH2 0x10A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x2B9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752068617665206E6F74207374616B656420616E79204554482E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2C4 CALLER PUSH2 0x626 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x327 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x417474656D7074696E6720746F207769746864726177206D6F7265207468616E PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x1039BA30B5B2B217 PUSH1 0xC1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2B0 JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 DUP4 ISZERO PUSH2 0x8FC MUL SWAP1 DUP5 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x354 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP2 DUP2 SUB PUSH2 0x374 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMPDEST DUP2 JUMPDEST DUP1 ISZERO PUSH2 0x502 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST DUP1 ISZERO PUSH2 0x4FC JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP3 SWAP1 PUSH2 0x3AF PUSH1 0x1 DUP5 PUSH2 0xE0A JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x3BF JUMPI PUSH2 0x3BF PUSH2 0xE21 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD GT PUSH2 0x462 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x3F0 PUSH1 0x1 DUP4 PUSH2 0xE0A JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x400 JUMPI PUSH2 0x400 PUSH2 0xE21 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD DUP3 PUSH2 0x41D SWAP2 SWAP1 PUSH2 0xE0A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP2 SWAP4 POP SWAP1 DUP1 PUSH2 0x43F JUMPI PUSH2 0x43F PUSH2 0xE37 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x2 PUSH1 0x0 NOT SWAP1 SWAP4 ADD SWAP3 DUP4 MUL ADD DUP2 DUP2 SSTORE PUSH1 0x1 ADD SSTORE SWAP1 SSTORE PUSH2 0x4EA JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP3 SWAP1 PUSH2 0x47E PUSH1 0x1 DUP5 PUSH2 0xE0A JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x48E JUMPI PUSH2 0x48E PUSH2 0xE21 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD SLOAD PUSH2 0x4AA SWAP2 SWAP1 PUSH2 0xE0A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x4C4 PUSH1 0x1 DUP5 PUSH2 0xE0A JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x4D4 JUMPI PUSH2 0x4D4 PUSH2 0xE21 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP2 POP JUMPDEST DUP1 PUSH2 0x4F4 DUP2 PUSH2 0xE4D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x38D JUMP JUMPDEST POP PUSH2 0x376 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE CALLER SWAP1 PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST CALLVALUE CALLER BALANCE GT PUSH2 0x588 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0xB2DEEA40C8DE40DCDEE840DEEEDC40CADCDEEACED0408AA89 PUSH1 0x3B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2B0 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x4 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD DUP5 MSTORE CALLVALUE DUP1 DUP3 MSTORE TIMESTAMP DUP3 DUP8 ADD DUP2 DUP2 MSTORE DUP5 SLOAD DUP1 DUP8 ADD DUP7 SSTORE SWAP5 DUP10 MSTORE SWAP7 SWAP1 SWAP8 KECCAK256 SWAP2 MLOAD PUSH1 0x2 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD SWAP2 DUP3 SSTORE SWAP4 MLOAD SWAP2 ADD SSTORE MLOAD SWAP2 SWAP3 SWAP2 PUSH32 0x1449C6DD7851ABC30ABF37F57715F492010519147CC2652FBC38202C18A6EE90 SWAP2 PUSH2 0x61B SWAP2 DUP6 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE DUP5 SWAP4 DUP5 SWAP4 SWAP3 SWAP2 SWAP1 DUP5 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x6A4 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x65E JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x6F3 JUMPI DUP2 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x6C8 JUMPI PUSH2 0x6C8 PUSH2 0xE21 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP4 PUSH2 0x6DF SWAP2 SWAP1 PUSH2 0xE64 JUMP JUMPDEST SWAP3 POP DUP1 PUSH2 0x6EB DUP2 PUSH2 0xE7C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x6AD JUMP JUMPDEST POP SWAP1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLVALUE CALLER BALANCE LT ISZERO PUSH2 0x749 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0xB2DEEA40C8DE40DCDEE840DEEEDC40CADCDEEACED0408AA89 PUSH1 0x3B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2B0 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x40C10F19 CALLER PUSH2 0x767 CALLVALUE PUSH2 0x3E8 PUSH2 0xE95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7C1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x80F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x833 SWAP2 SWAP1 PUSH2 0xEB4 JUMP JUMPDEST LT ISZERO PUSH2 0x8A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206D69676874206E65656420746F2070757420697420616C6C206F6E20 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x72656420746F2063617368206F7574207468617420616D6F756E742E00000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2B0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8B5 PUSH2 0x3E8 DUP4 PUSH2 0xECD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 SWAP2 POP CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x8E5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2770A7EB PUSH1 0xE2 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x9DC29FAC SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x932 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x946 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE CALLER SWAP3 POP PUSH32 0xAB933177D8753A66DD869151CF9AA88649E067B7A4E2DAD9D5D192D61CF593B0 SWAP2 POP PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2B0 JUMP JUMPDEST PUSH2 0x9E7 PUSH1 0x0 PUSH2 0xBF8 JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xA48 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752068617665206E6F74207374616B656420616E79204554482E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2B0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA52 PUSH2 0xC48 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x40C10F19 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x40C10F19 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAB3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB14 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2B0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB79 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2B0 JUMP JUMPDEST PUSH2 0xB82 DUP2 PUSH2 0xBF8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0xBC3 JUMPI PUSH2 0xBC3 PUSH2 0xE21 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE DUP5 SWAP4 DUP5 SWAP4 SWAP3 SWAP2 SWAP1 DUP5 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xCBD JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xC77 JUMP JUMPDEST POP POP POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0xD6B JUMPI PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND PUSH3 0x15180 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xCFA JUMPI PUSH2 0xCFA PUSH2 0xE21 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD TIMESTAMP PUSH2 0xD11 SWAP2 SWAP1 PUSH2 0xE0A JUMP JUMPDEST PUSH2 0xD1B SWAP2 SWAP1 PUSH2 0xECD JUMP JUMPDEST DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xD2D JUMPI PUSH2 0xD2D PUSH2 0xE21 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH2 0xD43 SWAP2 SWAP1 PUSH2 0xE95 JUMP JUMPDEST PUSH2 0xD4D SWAP2 SWAP1 PUSH2 0xECD JUMP JUMPDEST PUSH2 0xD57 SWAP1 DUP5 PUSH2 0xE64 JUMP JUMPDEST SWAP3 POP DUP1 PUSH2 0xD63 DUP2 PUSH2 0xE7C JUMP JUMPDEST SWAP2 POP POP PUSH2 0xCC6 JUMP JUMPDEST POP SWAP1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xDA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC3 DUP3 PUSH2 0xD8C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDE6 DUP4 PUSH2 0xD8C JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xE1C JUMPI PUSH2 0xE1C PUSH2 0xDF4 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0xE5C JUMPI PUSH2 0xE5C PUSH2 0xDF4 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xE77 JUMPI PUSH2 0xE77 PUSH2 0xDF4 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0xE8E JUMPI PUSH2 0xE8E PUSH2 0xDF4 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xEAF JUMPI PUSH2 0xEAF PUSH2 0xDF4 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xEEA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC LOG0 ADD PUSH4 0xB3350384 CALLVALUE BALANCE 0xE 0xC5 CODECOPY CREATE2 MSTORE8 POP 0xBF PUSH30 0xFB1AD36049F28F9BB3311959E9E964736F6C634300080D00330000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        220,
        4760
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "8": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "LT",
      "path": "5"
    },
    "9": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA7"
    },
    "12": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "13": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "16": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "SHR",
      "path": "5"
    },
    "19": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "DUP1",
      "path": "5"
    },
    "20": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x6F1E8533"
    },
    "25": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "GT",
      "path": "5"
    },
    "26": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x64"
    },
    "29": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "30": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "DUP1",
      "path": "5"
    },
    "31": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x6F1E8533"
    },
    "36": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "EQ",
      "path": "5"
    },
    "37": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x169"
    },
    "40": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "41": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "DUP1",
      "path": "5"
    },
    "42": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x715018A6"
    },
    "47": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "EQ",
      "path": "5"
    },
    "48": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B2"
    },
    "51": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "52": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "DUP1",
      "path": "5"
    },
    "53": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x8DA5CB5B"
    },
    "58": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "EQ",
      "path": "5"
    },
    "59": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1C7"
    },
    "62": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "63": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "DUP1",
      "path": "5"
    },
    "64": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xB88A802F"
    },
    "69": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "EQ",
      "path": "5"
    },
    "70": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1E5"
    },
    "73": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "74": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "DUP1",
      "path": "5"
    },
    "75": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xF2FDE38B"
    },
    "80": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "EQ",
      "path": "5"
    },
    "81": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1FA"
    },
    "84": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "85": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "DUP1",
      "path": "5"
    },
    "86": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xF97500C3"
    },
    "91": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "EQ",
      "path": "5"
    },
    "92": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x21A"
    },
    "95": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "96": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "98": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "DUP1",
      "path": "5"
    },
    "99": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "REVERT",
      "path": "5"
    },
    "100": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "101": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "DUP1",
      "path": "5"
    },
    "102": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x2E1A7D4D"
    },
    "107": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "EQ",
      "path": "5"
    },
    "108": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAC"
    },
    "111": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "112": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "DUP1",
      "path": "5"
    },
    "113": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x3A4B66F1"
    },
    "118": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "EQ",
      "path": "5"
    },
    "119": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCE"
    },
    "122": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "123": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "DUP1",
      "path": "5"
    },
    "124": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x4B57B0BE"
    },
    "129": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "EQ",
      "path": "5"
    },
    "130": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD6"
    },
    "133": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "134": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "DUP1",
      "path": "5"
    },
    "135": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x4DA6A556"
    },
    "140": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "EQ",
      "path": "5"
    },
    "141": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x113"
    },
    "144": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "145": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "DUP1",
      "path": "5"
    },
    "146": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x53AAB434"
    },
    "151": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "EQ",
      "path": "5"
    },
    "152": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x141"
    },
    "155": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "156": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "DUP1",
      "path": "5"
    },
    "157": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x5C7B79F5"
    },
    "162": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "EQ",
      "path": "5"
    },
    "163": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x149"
    },
    "166": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "167": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "168": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "170": {
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "DUP1",
      "path": "5"
    },
    "171": {
      "first_revert": true,
      "fn": null,
      "offset": [
        220,
        4760
      ],
      "op": "REVERT",
      "path": "5"
    },
    "172": {
      "fn": "Cage.withdraw",
      "offset": [
        1453,
        2646
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "173": {
      "fn": "Cage.withdraw",
      "offset": [
        1453,
        2646
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "174": {
      "fn": "Cage.withdraw",
      "offset": [
        1453,
        2646
      ],
      "op": "DUP1",
      "path": "5"
    },
    "175": {
      "fn": "Cage.withdraw",
      "offset": [
        1453,
        2646
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "176": {
      "fn": "Cage.withdraw",
      "offset": [
        1453,
        2646
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB8"
    },
    "179": {
      "fn": "Cage.withdraw",
      "offset": [
        1453,
        2646
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "180": {
      "fn": "Cage.withdraw",
      "offset": [
        1453,
        2646
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "182": {
      "fn": "Cage.withdraw",
      "offset": [
        1453,
        2646
      ],
      "op": "DUP1",
      "path": "5"
    },
    "183": {
      "fn": "Cage.withdraw",
      "offset": [
        1453,
        2646
      ],
      "op": "REVERT",
      "path": "5"
    },
    "184": {
      "fn": "Cage.withdraw",
      "offset": [
        1453,
        2646
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "185": {
      "op": "POP"
    },
    "186": {
      "fn": "Cage.withdraw",
      "offset": [
        1453,
        2646
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCC"
    },
    "189": {
      "fn": "Cage.withdraw",
      "offset": [
        1453,
        2646
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC7"
    },
    "192": {
      "fn": "Cage.withdraw",
      "offset": [
        1453,
        2646
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "193": {
      "fn": "Cage.withdraw",
      "offset": [
        1453,
        2646
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "195": {
      "fn": "Cage.withdraw",
      "offset": [
        1453,
        2646
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD73"
    },
    "198": {
      "fn": "Cage.withdraw",
      "jump": "i",
      "offset": [
        1453,
        2646
      ],
      "op": "JUMP",
      "path": "5"
    },
    "199": {
      "fn": "Cage.withdraw",
      "offset": [
        1453,
        2646
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "200": {
      "fn": "Cage.withdraw",
      "offset": [
        1453,
        2646
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x255"
    },
    "203": {
      "fn": "Cage.withdraw",
      "jump": "i",
      "offset": [
        1453,
        2646
      ],
      "op": "JUMP",
      "path": "5"
    },
    "204": {
      "fn": "Cage.withdraw",
      "offset": [
        1453,
        2646
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "205": {
      "fn": "Cage.withdraw",
      "offset": [
        1453,
        2646
      ],
      "op": "STOP",
      "path": "5"
    },
    "206": {
      "fn": "Cage.stake",
      "offset": [
        995,
        1448
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "207": {
      "fn": "Cage.stake",
      "offset": [
        995,
        1448
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCC"
    },
    "210": {
      "fn": "Cage.stake",
      "offset": [
        995,
        1448
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x53C"
    },
    "213": {
      "fn": "Cage.stake",
      "jump": "i",
      "offset": [
        995,
        1448
      ],
      "op": "JUMP",
      "path": "5"
    },
    "214": {
      "offset": [
        312,
        335
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "215": {
      "fn": "Cage.stake",
      "offset": [
        312,
        335
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "216": {
      "fn": "Cage.stake",
      "offset": [
        312,
        335
      ],
      "op": "DUP1",
      "path": "5"
    },
    "217": {
      "fn": "Cage.stake",
      "offset": [
        312,
        335
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "218": {
      "fn": "Cage.stake",
      "offset": [
        312,
        335
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE2"
    },
    "221": {
      "fn": "Cage.stake",
      "offset": [
        312,
        335
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "222": {
      "fn": "Cage.stake",
      "offset": [
        312,
        335
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "224": {
      "fn": "Cage.stake",
      "offset": [
        312,
        335
      ],
      "op": "DUP1",
      "path": "5"
    },
    "225": {
      "fn": "Cage.stake",
      "offset": [
        312,
        335
      ],
      "op": "REVERT",
      "path": "5"
    },
    "226": {
      "fn": "Cage.stake",
      "offset": [
        312,
        335
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "227": {
      "op": "POP"
    },
    "228": {
      "offset": [
        312,
        335
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "230": {
      "fn": "Cage.stake",
      "offset": [
        312,
        335
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "231": {
      "fn": "Cage.stake",
      "offset": [
        312,
        335
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF6"
    },
    "234": {
      "fn": "Cage.stake",
      "offset": [
        312,
        335
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "237": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "239": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "241": {
      "op": "SHL"
    },
    "242": {
      "op": "SUB"
    },
    "243": {
      "offset": [
        312,
        335
      ],
      "op": "AND",
      "path": "5"
    },
    "244": {
      "fn": "Cage.stake",
      "offset": [
        312,
        335
      ],
      "op": "DUP2",
      "path": "5"
    },
    "245": {
      "fn": "Cage.stake",
      "offset": [
        312,
        335
      ],
      "op": "JUMP",
      "path": "5"
    },
    "246": {
      "fn": "Cage.stake",
      "offset": [
        312,
        335
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "247": {
      "fn": "Cage.stake",
      "offset": [
        312,
        335
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "249": {
      "fn": "Cage.stake",
      "offset": [
        312,
        335
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "250": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "254": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "256": {
      "op": "SHL"
    },
    "257": {
      "op": "SUB"
    },
    "258": {
      "op": "SWAP1"
    },
    "259": {
      "op": "SWAP2"
    },
    "260": {
      "op": "AND"
    },
    "261": {
      "op": "DUP2"
    },
    "262": {
      "op": "MSTORE"
    },
    "263": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "265": {
      "op": "ADD"
    },
    "266": {
      "offset": [
        312,
        335
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "267": {
      "fn": "Cage.stake",
      "offset": [
        312,
        335
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "269": {
      "fn": "Cage.stake",
      "offset": [
        312,
        335
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "270": {
      "fn": "Cage.stake",
      "offset": [
        312,
        335
      ],
      "op": "DUP1",
      "path": "5"
    },
    "271": {
      "fn": "Cage.stake",
      "offset": [
        312,
        335
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "272": {
      "fn": "Cage.stake",
      "offset": [
        312,
        335
      ],
      "op": "SUB",
      "path": "5"
    },
    "273": {
      "fn": "Cage.stake",
      "offset": [
        312,
        335
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "274": {
      "fn": "Cage.stake",
      "offset": [
        312,
        335
      ],
      "op": "RETURN",
      "path": "5"
    },
    "275": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2795,
        3109
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "276": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2795,
        3109
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "277": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2795,
        3109
      ],
      "op": "DUP1",
      "path": "5"
    },
    "278": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2795,
        3109
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "279": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2795,
        3109
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11F"
    },
    "282": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2795,
        3109
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "283": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2795,
        3109
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "285": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2795,
        3109
      ],
      "op": "DUP1",
      "path": "5"
    },
    "286": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2795,
        3109
      ],
      "op": "REVERT",
      "path": "5"
    },
    "287": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2795,
        3109
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "288": {
      "op": "POP"
    },
    "289": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2795,
        3109
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x133"
    },
    "292": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2795,
        3109
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x12E"
    },
    "295": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2795,
        3109
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "296": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2795,
        3109
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "298": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2795,
        3109
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDA8"
    },
    "301": {
      "fn": "Cage.getStakedAmount",
      "jump": "i",
      "offset": [
        2795,
        3109
      ],
      "op": "JUMP",
      "path": "5"
    },
    "302": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2795,
        3109
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "303": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2795,
        3109
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x626"
    },
    "306": {
      "fn": "Cage.getStakedAmount",
      "jump": "i",
      "offset": [
        2795,
        3109
      ],
      "op": "JUMP",
      "path": "5"
    },
    "307": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2795,
        3109
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "308": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2795,
        3109
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "310": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2795,
        3109
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "311": {
      "op": "SWAP1"
    },
    "312": {
      "op": "DUP2"
    },
    "313": {
      "op": "MSTORE"
    },
    "314": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "316": {
      "op": "ADD"
    },
    "317": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2795,
        3109
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10A"
    },
    "320": {
      "op": "JUMP"
    },
    "321": {
      "fn": "Cage.buyIn",
      "offset": [
        3780,
        4040
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "322": {
      "fn": "Cage.buyIn",
      "offset": [
        3780,
        4040
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCC"
    },
    "325": {
      "fn": "Cage.buyIn",
      "offset": [
        3780,
        4040
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6FC"
    },
    "328": {
      "fn": "Cage.buyIn",
      "jump": "i",
      "offset": [
        3780,
        4040
      ],
      "op": "JUMP",
      "path": "5"
    },
    "329": {
      "fn": "Cage.cashOut",
      "offset": [
        4044,
        4445
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "330": {
      "fn": "Cage.cashOut",
      "offset": [
        4044,
        4445
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "331": {
      "fn": "Cage.cashOut",
      "offset": [
        4044,
        4445
      ],
      "op": "DUP1",
      "path": "5"
    },
    "332": {
      "fn": "Cage.cashOut",
      "offset": [
        4044,
        4445
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "333": {
      "fn": "Cage.cashOut",
      "offset": [
        4044,
        4445
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x155"
    },
    "336": {
      "fn": "Cage.cashOut",
      "offset": [
        4044,
        4445
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "337": {
      "fn": "Cage.cashOut",
      "offset": [
        4044,
        4445
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "339": {
      "fn": "Cage.cashOut",
      "offset": [
        4044,
        4445
      ],
      "op": "DUP1",
      "path": "5"
    },
    "340": {
      "fn": "Cage.cashOut",
      "offset": [
        4044,
        4445
      ],
      "op": "REVERT",
      "path": "5"
    },
    "341": {
      "fn": "Cage.cashOut",
      "offset": [
        4044,
        4445
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "342": {
      "op": "POP"
    },
    "343": {
      "fn": "Cage.cashOut",
      "offset": [
        4044,
        4445
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCC"
    },
    "346": {
      "fn": "Cage.cashOut",
      "offset": [
        4044,
        4445
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x164"
    },
    "349": {
      "fn": "Cage.cashOut",
      "offset": [
        4044,
        4445
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "350": {
      "fn": "Cage.cashOut",
      "offset": [
        4044,
        4445
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "352": {
      "fn": "Cage.cashOut",
      "offset": [
        4044,
        4445
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD73"
    },
    "355": {
      "fn": "Cage.cashOut",
      "jump": "i",
      "offset": [
        4044,
        4445
      ],
      "op": "JUMP",
      "path": "5"
    },
    "356": {
      "fn": "Cage.cashOut",
      "offset": [
        4044,
        4445
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "357": {
      "fn": "Cage.cashOut",
      "offset": [
        4044,
        4445
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7C7"
    },
    "360": {
      "fn": "Cage.cashOut",
      "jump": "i",
      "offset": [
        4044,
        4445
      ],
      "op": "JUMP",
      "path": "5"
    },
    "361": {
      "fn": "Cage.isStaker",
      "offset": [
        3113,
        3210
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "362": {
      "fn": "Cage.isStaker",
      "offset": [
        3113,
        3210
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "363": {
      "fn": "Cage.isStaker",
      "offset": [
        3113,
        3210
      ],
      "op": "DUP1",
      "path": "5"
    },
    "364": {
      "fn": "Cage.isStaker",
      "offset": [
        3113,
        3210
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "365": {
      "fn": "Cage.isStaker",
      "offset": [
        3113,
        3210
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x175"
    },
    "368": {
      "fn": "Cage.isStaker",
      "offset": [
        3113,
        3210
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "369": {
      "fn": "Cage.isStaker",
      "offset": [
        3113,
        3210
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "371": {
      "fn": "Cage.isStaker",
      "offset": [
        3113,
        3210
      ],
      "op": "DUP1",
      "path": "5"
    },
    "372": {
      "fn": "Cage.isStaker",
      "offset": [
        3113,
        3210
      ],
      "op": "REVERT",
      "path": "5"
    },
    "373": {
      "fn": "Cage.isStaker",
      "offset": [
        3113,
        3210
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "374": {
      "op": "POP"
    },
    "375": {
      "fn": "Cage.isStaker",
      "offset": [
        3113,
        3210
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A2"
    },
    "378": {
      "fn": "Cage.isStaker",
      "offset": [
        3113,
        3210
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x184"
    },
    "381": {
      "fn": "Cage.isStaker",
      "offset": [
        3113,
        3210
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "382": {
      "fn": "Cage.isStaker",
      "offset": [
        3113,
        3210
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "384": {
      "fn": "Cage.isStaker",
      "offset": [
        3113,
        3210
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDA8"
    },
    "387": {
      "fn": "Cage.isStaker",
      "jump": "i",
      "offset": [
        3113,
        3210
      ],
      "op": "JUMP",
      "path": "5"
    },
    "388": {
      "fn": "Cage.isStaker",
      "offset": [
        3113,
        3210
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "391": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "393": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "395": {
      "op": "SHL"
    },
    "396": {
      "op": "SUB"
    },
    "397": {
      "fn": "Cage.isStaker",
      "offset": [
        3188,
        3205
      ],
      "op": "AND",
      "path": "5",
      "statement": 0
    },
    "398": {
      "fn": "Cage.isStaker",
      "offset": [
        3169,
        3173
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "400": {
      "fn": "Cage.isStaker",
      "offset": [
        3188,
        3205
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "401": {
      "fn": "Cage.isStaker",
      "offset": [
        3188,
        3205
      ],
      "op": "DUP2",
      "path": "5"
    },
    "402": {
      "fn": "Cage.isStaker",
      "offset": [
        3188,
        3205
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "403": {
      "fn": "Cage.isStaker",
      "offset": [
        3188,
        3195
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "405": {
      "fn": "Cage.isStaker",
      "offset": [
        3188,
        3205
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "407": {
      "fn": "Cage.isStaker",
      "offset": [
        3188,
        3205
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "408": {
      "fn": "Cage.isStaker",
      "offset": [
        3188,
        3205
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "410": {
      "fn": "Cage.isStaker",
      "offset": [
        3188,
        3205
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "411": {
      "fn": "Cage.isStaker",
      "offset": [
        3188,
        3205
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "412": {
      "fn": "Cage.isStaker",
      "offset": [
        3188,
        3205
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "413": {
      "fn": "Cage.isStaker",
      "offset": [
        3188,
        3205
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "415": {
      "fn": "Cage.isStaker",
      "offset": [
        3188,
        3205
      ],
      "op": "AND",
      "path": "5"
    },
    "416": {
      "fn": "Cage.isStaker",
      "offset": [
        3188,
        3205
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "417": {
      "fn": "Cage.isStaker",
      "offset": [
        3113,
        3210
      ],
      "op": "JUMP",
      "path": "5"
    },
    "418": {
      "fn": "Cage.isStaker",
      "offset": [
        3113,
        3210
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "419": {
      "fn": "Cage.isStaker",
      "offset": [
        3113,
        3210
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "421": {
      "fn": "Cage.isStaker",
      "offset": [
        3113,
        3210
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "422": {
      "op": "SWAP1"
    },
    "423": {
      "op": "ISZERO"
    },
    "424": {
      "op": "ISZERO"
    },
    "425": {
      "op": "DUP2"
    },
    "426": {
      "op": "MSTORE"
    },
    "427": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "429": {
      "op": "ADD"
    },
    "430": {
      "fn": "Cage.isStaker",
      "offset": [
        3113,
        3210
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10A"
    },
    "433": {
      "op": "JUMP"
    },
    "434": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "435": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "436": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "DUP1",
      "path": "0"
    },
    "437": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "438": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BE"
    },
    "441": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "442": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "444": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "DUP1",
      "path": "0"
    },
    "445": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "REVERT",
      "path": "0"
    },
    "446": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "447": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "POP",
      "path": "0"
    },
    "448": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC"
    },
    "451": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x983"
    },
    "454": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "455": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "456": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "457": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "458": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "459": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D3"
    },
    "462": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "463": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "465": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "466": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "REVERT",
      "path": "0"
    },
    "467": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "468": {
      "op": "POP"
    },
    "469": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "471": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 1
    },
    "472": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "474": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "476": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "478": {
      "op": "SHL"
    },
    "479": {
      "op": "SUB"
    },
    "480": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "481": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF6"
    },
    "484": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMP",
      "path": "0"
    },
    "485": {
      "fn": "Cage.claimReward",
      "offset": [
        2650,
        2791
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "486": {
      "fn": "Cage.claimReward",
      "offset": [
        2650,
        2791
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "487": {
      "fn": "Cage.claimReward",
      "offset": [
        2650,
        2791
      ],
      "op": "DUP1",
      "path": "5"
    },
    "488": {
      "fn": "Cage.claimReward",
      "offset": [
        2650,
        2791
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "489": {
      "fn": "Cage.claimReward",
      "offset": [
        2650,
        2791
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1F1"
    },
    "492": {
      "fn": "Cage.claimReward",
      "offset": [
        2650,
        2791
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "493": {
      "fn": "Cage.claimReward",
      "offset": [
        2650,
        2791
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "495": {
      "fn": "Cage.claimReward",
      "offset": [
        2650,
        2791
      ],
      "op": "DUP1",
      "path": "5"
    },
    "496": {
      "fn": "Cage.claimReward",
      "offset": [
        2650,
        2791
      ],
      "op": "REVERT",
      "path": "5"
    },
    "497": {
      "fn": "Cage.claimReward",
      "offset": [
        2650,
        2791
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "498": {
      "fn": "Cage.claimReward",
      "offset": [
        2650,
        2791
      ],
      "op": "POP",
      "path": "5"
    },
    "499": {
      "fn": "Cage.claimReward",
      "offset": [
        2650,
        2791
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCC"
    },
    "502": {
      "fn": "Cage.claimReward",
      "offset": [
        2650,
        2791
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9E9"
    },
    "505": {
      "fn": "Cage.claimReward",
      "jump": "i",
      "offset": [
        2650,
        2791
      ],
      "op": "JUMP",
      "path": "5"
    },
    "506": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "507": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "508": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "509": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "510": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x206"
    },
    "513": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "514": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "516": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "517": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "REVERT",
      "path": "0"
    },
    "518": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "519": {
      "op": "POP"
    },
    "520": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCC"
    },
    "523": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x215"
    },
    "526": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "527": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "529": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDA8"
    },
    "532": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "533": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "534": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xABA"
    },
    "537": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "538": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3214,
        3353
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "539": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3214,
        3353
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "540": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3214,
        3353
      ],
      "op": "DUP1",
      "path": "5"
    },
    "541": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3214,
        3353
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "542": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3214,
        3353
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x226"
    },
    "545": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3214,
        3353
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "546": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3214,
        3353
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "548": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3214,
        3353
      ],
      "op": "DUP1",
      "path": "5"
    },
    "549": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3214,
        3353
      ],
      "op": "REVERT",
      "path": "5"
    },
    "550": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3214,
        3353
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "551": {
      "op": "POP"
    },
    "552": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3214,
        3353
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x23A"
    },
    "555": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3214,
        3353
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x235"
    },
    "558": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3214,
        3353
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "559": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3214,
        3353
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "561": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3214,
        3353
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDCA"
    },
    "564": {
      "fn": "Cage.getStakeObj",
      "jump": "i",
      "offset": [
        3214,
        3353
      ],
      "op": "JUMP",
      "path": "5"
    },
    "565": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3214,
        3353
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "566": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3214,
        3353
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB85"
    },
    "569": {
      "fn": "Cage.getStakeObj",
      "jump": "i",
      "offset": [
        3214,
        3353
      ],
      "op": "JUMP",
      "path": "5"
    },
    "570": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3214,
        3353
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "571": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3214,
        3353
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "573": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3214,
        3353
      ],
      "op": "DUP1",
      "path": "5"
    },
    "574": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3214,
        3353
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "575": {
      "op": "DUP3"
    },
    "576": {
      "op": "MLOAD"
    },
    "577": {
      "op": "DUP2"
    },
    "578": {
      "op": "MSTORE"
    },
    "579": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "581": {
      "op": "SWAP3"
    },
    "582": {
      "op": "DUP4"
    },
    "583": {
      "op": "ADD"
    },
    "584": {
      "op": "MLOAD"
    },
    "585": {
      "op": "SWAP3"
    },
    "586": {
      "op": "DUP2"
    },
    "587": {
      "op": "ADD"
    },
    "588": {
      "op": "SWAP3"
    },
    "589": {
      "op": "SWAP1"
    },
    "590": {
      "op": "SWAP3"
    },
    "591": {
      "op": "MSTORE"
    },
    "592": {
      "op": "ADD"
    },
    "593": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3214,
        3353
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x10A"
    },
    "596": {
      "op": "JUMP"
    },
    "597": {
      "fn": "Cage.withdraw",
      "offset": [
        1453,
        2646
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "598": {
      "offset": [
        4699,
        4709
      ],
      "op": "CALLER",
      "path": "5"
    },
    "599": {
      "offset": [
        4691,
        4710
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "601": {
      "fn": "Cage.withdraw",
      "offset": [
        4691,
        4710
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "602": {
      "fn": "Cage.withdraw",
      "offset": [
        4691,
        4710
      ],
      "op": "DUP2",
      "path": "5"
    },
    "603": {
      "fn": "Cage.withdraw",
      "offset": [
        4691,
        4710
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "604": {
      "offset": [
        4691,
        4698
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "606": {
      "offset": [
        4691,
        4710
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "608": {
      "fn": "Cage.withdraw",
      "offset": [
        4691,
        4710
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "609": {
      "fn": "Cage.withdraw",
      "offset": [
        4691,
        4710
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "611": {
      "fn": "Cage.withdraw",
      "offset": [
        4691,
        4710
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "612": {
      "fn": "Cage.withdraw",
      "offset": [
        4691,
        4710
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "613": {
      "fn": "Cage.withdraw",
      "offset": [
        4691,
        4710
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "614": {
      "fn": "Cage.withdraw",
      "offset": [
        4691,
        4710
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "616": {
      "fn": "Cage.withdraw",
      "offset": [
        4691,
        4710
      ],
      "op": "AND",
      "path": "5"
    },
    "617": {
      "offset": [
        4683,
        4743
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2B9"
    },
    "620": {
      "offset": [
        4683,
        4743
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "621": {
      "fn": "Cage.withdraw",
      "offset": [
        4683,
        4743
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "623": {
      "fn": "Cage.withdraw",
      "offset": [
        4683,
        4743
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "624": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "628": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "630": {
      "op": "SHL"
    },
    "631": {
      "offset": [
        4683,
        4743
      ],
      "op": "DUP2",
      "path": "5"
    },
    "632": {
      "fn": "Cage.withdraw",
      "offset": [
        4683,
        4743
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "633": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "635": {
      "offset": [
        4683,
        4743
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "637": {
      "fn": "Cage.withdraw",
      "offset": [
        4683,
        4743
      ],
      "op": "DUP3",
      "path": "5"
    },
    "638": {
      "fn": "Cage.withdraw",
      "offset": [
        4683,
        4743
      ],
      "op": "ADD",
      "path": "5"
    },
    "639": {
      "op": "MSTORE"
    },
    "640": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "642": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "644": {
      "op": "DUP3"
    },
    "645": {
      "op": "ADD"
    },
    "646": {
      "op": "MSTORE"
    },
    "647": {
      "op": "PUSH32",
      "value": "0x596F752068617665206E6F74207374616B656420616E79204554482E00000000"
    },
    "680": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "682": {
      "op": "DUP3"
    },
    "683": {
      "op": "ADD"
    },
    "684": {
      "op": "MSTORE"
    },
    "685": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "687": {
      "op": "ADD"
    },
    "688": {
      "offset": [
        4683,
        4743
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "689": {
      "fn": "Cage.withdraw",
      "offset": [
        4683,
        4743
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "691": {
      "fn": "Cage.withdraw",
      "offset": [
        4683,
        4743
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "692": {
      "fn": "Cage.withdraw",
      "offset": [
        4683,
        4743
      ],
      "op": "DUP1",
      "path": "5"
    },
    "693": {
      "fn": "Cage.withdraw",
      "offset": [
        4683,
        4743
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "694": {
      "fn": "Cage.withdraw",
      "offset": [
        4683,
        4743
      ],
      "op": "SUB",
      "path": "5"
    },
    "695": {
      "fn": "Cage.withdraw",
      "offset": [
        4683,
        4743
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "696": {
      "fn": "Cage.withdraw",
      "offset": [
        4683,
        4743
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "5"
    },
    "697": {
      "fn": "Cage.withdraw",
      "offset": [
        4683,
        4743
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "698": {
      "fn": "Cage.withdraw",
      "offset": [
        1512,
        1537
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "700": {
      "fn": "Cage.withdraw",
      "offset": [
        1540,
        1567
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2C4"
    },
    "703": {
      "fn": "Cage.withdraw",
      "offset": [
        1556,
        1566
      ],
      "op": "CALLER",
      "path": "5"
    },
    "704": {
      "fn": "Cage.withdraw",
      "offset": [
        1540,
        1555
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x626"
    },
    "707": {
      "fn": "Cage.withdraw",
      "jump": "i",
      "offset": [
        1540,
        1567
      ],
      "op": "JUMP",
      "path": "5"
    },
    "708": {
      "fn": "Cage.withdraw",
      "offset": [
        1540,
        1567
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "709": {
      "fn": "Cage.withdraw",
      "offset": [
        1512,
        1567
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "710": {
      "fn": "Cage.withdraw",
      "offset": [
        1512,
        1567
      ],
      "op": "POP",
      "path": "5"
    },
    "711": {
      "fn": "Cage.withdraw",
      "offset": [
        1592,
        1609
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 2
    },
    "712": {
      "fn": "Cage.withdraw",
      "offset": [
        1581,
        1588
      ],
      "op": "DUP3",
      "path": "5"
    },
    "713": {
      "fn": "Cage.withdraw",
      "offset": [
        1581,
        1609
      ],
      "op": "GT",
      "path": "5"
    },
    "714": {
      "branch": 34,
      "fn": "Cage.withdraw",
      "offset": [
        1581,
        1609
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "715": {
      "fn": "Cage.withdraw",
      "offset": [
        1573,
        1654
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x327"
    },
    "718": {
      "branch": 34,
      "fn": "Cage.withdraw",
      "offset": [
        1573,
        1654
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "719": {
      "fn": "Cage.withdraw",
      "offset": [
        1573,
        1654
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "721": {
      "fn": "Cage.withdraw",
      "offset": [
        1573,
        1654
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "722": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "726": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "728": {
      "op": "SHL"
    },
    "729": {
      "fn": "Cage.withdraw",
      "offset": [
        1573,
        1654
      ],
      "op": "DUP2",
      "path": "5"
    },
    "730": {
      "fn": "Cage.withdraw",
      "offset": [
        1573,
        1654
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "731": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "733": {
      "fn": "Cage.withdraw",
      "offset": [
        1573,
        1654
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "735": {
      "fn": "Cage.withdraw",
      "offset": [
        1573,
        1654
      ],
      "op": "DUP3",
      "path": "5"
    },
    "736": {
      "fn": "Cage.withdraw",
      "offset": [
        1573,
        1654
      ],
      "op": "ADD",
      "path": "5"
    },
    "737": {
      "op": "MSTORE"
    },
    "738": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "740": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "742": {
      "op": "DUP3"
    },
    "743": {
      "op": "ADD"
    },
    "744": {
      "op": "MSTORE"
    },
    "745": {
      "op": "PUSH32",
      "value": "0x417474656D7074696E6720746F207769746864726177206D6F7265207468616E"
    },
    "778": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "780": {
      "op": "DUP3"
    },
    "781": {
      "op": "ADD"
    },
    "782": {
      "op": "MSTORE"
    },
    "783": {
      "op": "PUSH8",
      "value": "0x1039BA30B5B2B217"
    },
    "792": {
      "op": "PUSH1",
      "value": "0xC1"
    },
    "794": {
      "op": "SHL"
    },
    "795": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "797": {
      "op": "DUP3"
    },
    "798": {
      "op": "ADD"
    },
    "799": {
      "op": "MSTORE"
    },
    "800": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "802": {
      "op": "ADD"
    },
    "803": {
      "fn": "Cage.withdraw",
      "offset": [
        1573,
        1654
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2B0"
    },
    "806": {
      "op": "JUMP"
    },
    "807": {
      "fn": "Cage.withdraw",
      "offset": [
        1573,
        1654
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "808": {
      "fn": "Cage.withdraw",
      "offset": [
        1675,
        1712
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 3,
      "value": "0x40"
    },
    "810": {
      "fn": "Cage.withdraw",
      "offset": [
        1675,
        1712
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "811": {
      "fn": "Cage.withdraw",
      "offset": [
        1683,
        1693
      ],
      "op": "CALLER",
      "path": "5"
    },
    "812": {
      "fn": "Cage.withdraw",
      "offset": [
        1683,
        1693
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "813": {
      "fn": "Cage.withdraw",
      "offset": [
        1675,
        1712
      ],
      "op": "DUP4",
      "path": "5"
    },
    "814": {
      "fn": "Cage.withdraw",
      "offset": [
        1675,
        1712
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "815": {
      "fn": "Cage.withdraw",
      "offset": [
        1675,
        1712
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8FC"
    },
    "818": {
      "fn": "Cage.withdraw",
      "offset": [
        1675,
        1712
      ],
      "op": "MUL",
      "path": "5"
    },
    "819": {
      "fn": "Cage.withdraw",
      "offset": [
        1675,
        1712
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "820": {
      "fn": "Cage.withdraw",
      "offset": [
        1704,
        1711
      ],
      "op": "DUP5",
      "path": "5"
    },
    "821": {
      "fn": "Cage.withdraw",
      "offset": [
        1704,
        1711
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "822": {
      "fn": "Cage.withdraw",
      "offset": [
        1675,
        1712
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "824": {
      "fn": "Cage.withdraw",
      "offset": [
        1675,
        1712
      ],
      "op": "DUP2",
      "path": "5"
    },
    "825": {
      "fn": "Cage.withdraw",
      "offset": [
        1675,
        1712
      ],
      "op": "DUP2",
      "path": "5"
    },
    "826": {
      "fn": "Cage.withdraw",
      "offset": [
        1675,
        1712
      ],
      "op": "DUP2",
      "path": "5"
    },
    "827": {
      "fn": "Cage.withdraw",
      "offset": [
        1704,
        1711
      ],
      "op": "DUP6",
      "path": "5"
    },
    "828": {
      "fn": "Cage.withdraw",
      "offset": [
        1683,
        1693
      ],
      "op": "DUP9",
      "path": "5"
    },
    "829": {
      "fn": "Cage.withdraw",
      "offset": [
        1675,
        1712
      ],
      "op": "DUP9",
      "path": "5"
    },
    "830": {
      "fn": "Cage.withdraw",
      "offset": [
        1675,
        1712
      ],
      "op": "CALL",
      "path": "5"
    },
    "831": {
      "fn": "Cage.withdraw",
      "offset": [
        1675,
        1712
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "832": {
      "fn": "Cage.withdraw",
      "offset": [
        1675,
        1712
      ],
      "op": "POP",
      "path": "5"
    },
    "833": {
      "fn": "Cage.withdraw",
      "offset": [
        1675,
        1712
      ],
      "op": "POP",
      "path": "5"
    },
    "834": {
      "fn": "Cage.withdraw",
      "offset": [
        1675,
        1712
      ],
      "op": "POP",
      "path": "5"
    },
    "835": {
      "fn": "Cage.withdraw",
      "offset": [
        1675,
        1712
      ],
      "op": "POP",
      "path": "5"
    },
    "836": {
      "fn": "Cage.withdraw",
      "offset": [
        1675,
        1712
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "837": {
      "fn": "Cage.withdraw",
      "offset": [
        1675,
        1712
      ],
      "op": "DUP1",
      "path": "5"
    },
    "838": {
      "fn": "Cage.withdraw",
      "offset": [
        1675,
        1712
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "839": {
      "fn": "Cage.withdraw",
      "offset": [
        1675,
        1712
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x354"
    },
    "842": {
      "fn": "Cage.withdraw",
      "offset": [
        1675,
        1712
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "843": {
      "fn": "Cage.withdraw",
      "offset": [
        1675,
        1712
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "844": {
      "fn": "Cage.withdraw",
      "offset": [
        1675,
        1712
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "846": {
      "fn": "Cage.withdraw",
      "offset": [
        1675,
        1712
      ],
      "op": "DUP1",
      "path": "5"
    },
    "847": {
      "fn": "Cage.withdraw",
      "offset": [
        1675,
        1712
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "848": {
      "fn": "Cage.withdraw",
      "offset": [
        1675,
        1712
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "849": {
      "fn": "Cage.withdraw",
      "offset": [
        1675,
        1712
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "851": {
      "fn": "Cage.withdraw",
      "offset": [
        1675,
        1712
      ],
      "op": "REVERT",
      "path": "5"
    },
    "852": {
      "fn": "Cage.withdraw",
      "offset": [
        1675,
        1712
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "853": {
      "fn": "Cage.withdraw",
      "offset": [
        1675,
        1712
      ],
      "op": "POP",
      "path": "5"
    },
    "854": {
      "fn": "Cage.withdraw",
      "offset": [
        1743,
        1750
      ],
      "op": "DUP2",
      "path": "5"
    },
    "855": {
      "fn": "Cage.withdraw",
      "offset": [
        1722,
        1739
      ],
      "op": "DUP2",
      "path": "5"
    },
    "856": {
      "branch": 35,
      "fn": "Cage.withdraw",
      "offset": [
        1722,
        1750
      ],
      "op": "SUB",
      "path": "5"
    },
    "857": {
      "fn": "Cage.withdraw",
      "offset": [
        1718,
        1819
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x374"
    },
    "860": {
      "branch": 35,
      "fn": "Cage.withdraw",
      "offset": [
        1718,
        1819
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "861": {
      "fn": "Cage.withdraw",
      "offset": [
        1793,
        1803
      ],
      "op": "CALLER",
      "path": "5",
      "statement": 4
    },
    "862": {
      "fn": "Cage.withdraw",
      "offset": [
        1807,
        1812
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "864": {
      "fn": "Cage.withdraw",
      "offset": [
        1785,
        1804
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "865": {
      "fn": "Cage.withdraw",
      "offset": [
        1785,
        1804
      ],
      "op": "DUP2",
      "path": "5"
    },
    "866": {
      "fn": "Cage.withdraw",
      "offset": [
        1785,
        1804
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "867": {
      "fn": "Cage.withdraw",
      "offset": [
        1785,
        1792
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "869": {
      "fn": "Cage.withdraw",
      "offset": [
        1785,
        1804
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "871": {
      "fn": "Cage.withdraw",
      "offset": [
        1785,
        1804
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "872": {
      "fn": "Cage.withdraw",
      "offset": [
        1785,
        1804
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "874": {
      "fn": "Cage.withdraw",
      "offset": [
        1785,
        1804
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "875": {
      "fn": "Cage.withdraw",
      "offset": [
        1785,
        1804
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "876": {
      "fn": "Cage.withdraw",
      "offset": [
        1785,
        1812
      ],
      "op": "DUP1",
      "path": "5"
    },
    "877": {
      "fn": "Cage.withdraw",
      "offset": [
        1785,
        1812
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "878": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "880": {
      "op": "NOT"
    },
    "881": {
      "fn": "Cage.withdraw",
      "offset": [
        1785,
        1812
      ],
      "op": "AND",
      "path": "5"
    },
    "882": {
      "fn": "Cage.withdraw",
      "offset": [
        1785,
        1812
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "883": {
      "fn": "Cage.withdraw",
      "offset": [
        1785,
        1812
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "884": {
      "fn": "Cage.withdraw",
      "offset": [
        1718,
        1819
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "885": {
      "fn": "Cage.withdraw",
      "offset": [
        1935,
        1942
      ],
      "op": "DUP2",
      "path": "5"
    },
    "886": {
      "fn": "Cage.withdraw",
      "offset": [
        1948,
        2584
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "887": {
      "fn": "Cage.withdraw",
      "offset": [
        1955,
        1975
      ],
      "op": "DUP1",
      "path": "5"
    },
    "888": {
      "fn": "Cage.withdraw",
      "offset": [
        1955,
        1975
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "889": {
      "fn": "Cage.withdraw",
      "offset": [
        1948,
        2584
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x502"
    },
    "892": {
      "fn": "Cage.withdraw",
      "offset": [
        1948,
        2584
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "893": {
      "fn": "Cage.withdraw",
      "offset": [
        2015,
        2025
      ],
      "op": "CALLER",
      "path": "5"
    },
    "894": {
      "fn": "Cage.withdraw",
      "offset": [
        1991,
        1997
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "896": {
      "fn": "Cage.withdraw",
      "offset": [
        2000,
        2026
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "897": {
      "fn": "Cage.withdraw",
      "offset": [
        2000,
        2026
      ],
      "op": "DUP2",
      "path": "5"
    },
    "898": {
      "fn": "Cage.withdraw",
      "offset": [
        2000,
        2026
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "899": {
      "fn": "Cage.withdraw",
      "offset": [
        2000,
        2014
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "901": {
      "fn": "Cage.withdraw",
      "offset": [
        2000,
        2026
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "903": {
      "fn": "Cage.withdraw",
      "offset": [
        2000,
        2026
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "904": {
      "fn": "Cage.withdraw",
      "offset": [
        2000,
        2026
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "906": {
      "fn": "Cage.withdraw",
      "offset": [
        2000,
        2026
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "907": {
      "fn": "Cage.withdraw",
      "offset": [
        2000,
        2026
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "908": {
      "fn": "Cage.withdraw",
      "offset": [
        2000,
        2033
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "909": {
      "fn": "Cage.withdraw",
      "offset": [
        1986,
        2578
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "910": {
      "fn": "Cage.withdraw",
      "offset": [
        2035,
        2040
      ],
      "op": "DUP1",
      "path": "5"
    },
    "911": {
      "fn": "Cage.withdraw",
      "offset": [
        2035,
        2040
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "912": {
      "fn": "Cage.withdraw",
      "offset": [
        1986,
        2578
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4FC"
    },
    "915": {
      "fn": "Cage.withdraw",
      "offset": [
        1986,
        2578
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "916": {
      "fn": "Cage.withdraw",
      "offset": [
        2075,
        2085
      ],
      "op": "CALLER",
      "path": "5"
    },
    "917": {
      "fn": "Cage.withdraw",
      "offset": [
        2060,
        2086
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "919": {
      "fn": "Cage.withdraw",
      "offset": [
        2060,
        2086
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "920": {
      "fn": "Cage.withdraw",
      "offset": [
        2060,
        2086
      ],
      "op": "DUP2",
      "path": "5"
    },
    "921": {
      "fn": "Cage.withdraw",
      "offset": [
        2060,
        2086
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "922": {
      "fn": "Cage.withdraw",
      "offset": [
        2060,
        2074
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "924": {
      "fn": "Cage.withdraw",
      "offset": [
        2060,
        2086
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "926": {
      "fn": "Cage.withdraw",
      "offset": [
        2060,
        2086
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "927": {
      "fn": "Cage.withdraw",
      "offset": [
        2060,
        2086
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "929": {
      "fn": "Cage.withdraw",
      "offset": [
        2060,
        2086
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "930": {
      "fn": "Cage.withdraw",
      "offset": [
        2060,
        2086
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "931": {
      "fn": "Cage.withdraw",
      "offset": [
        2102,
        2117
      ],
      "op": "DUP3",
      "path": "5"
    },
    "932": {
      "fn": "Cage.withdraw",
      "offset": [
        2102,
        2117
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "933": {
      "fn": "Cage.withdraw",
      "offset": [
        2087,
        2090
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3AF"
    },
    "936": {
      "fn": "Cage.withdraw",
      "offset": [
        2089,
        2090
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "938": {
      "fn": "Cage.withdraw",
      "offset": [
        2087,
        2088
      ],
      "op": "DUP5",
      "path": "5"
    },
    "939": {
      "fn": "Cage.withdraw",
      "offset": [
        2087,
        2090
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE0A"
    },
    "942": {
      "fn": "Cage.withdraw",
      "jump": "i",
      "offset": [
        2087,
        2090
      ],
      "op": "JUMP",
      "path": "5"
    },
    "943": {
      "fn": "Cage.withdraw",
      "offset": [
        2087,
        2090
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "944": {
      "fn": "Cage.withdraw",
      "offset": [
        2060,
        2091
      ],
      "op": "DUP2",
      "path": "5"
    },
    "945": {
      "fn": "Cage.withdraw",
      "offset": [
        2060,
        2091
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "946": {
      "fn": "Cage.withdraw",
      "offset": [
        2060,
        2091
      ],
      "op": "DUP2",
      "path": "5"
    },
    "947": {
      "fn": "Cage.withdraw",
      "offset": [
        2060,
        2091
      ],
      "op": "LT",
      "path": "5"
    },
    "948": {
      "fn": "Cage.withdraw",
      "offset": [
        2060,
        2091
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3BF"
    },
    "951": {
      "fn": "Cage.withdraw",
      "offset": [
        2060,
        2091
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "952": {
      "fn": "Cage.withdraw",
      "offset": [
        2060,
        2091
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3BF"
    },
    "955": {
      "fn": "Cage.withdraw",
      "offset": [
        2060,
        2091
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE21"
    },
    "958": {
      "fn": "Cage.withdraw",
      "jump": "i",
      "offset": [
        2060,
        2091
      ],
      "op": "JUMP",
      "path": "5"
    },
    "959": {
      "fn": "Cage.withdraw",
      "offset": [
        2060,
        2091
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "960": {
      "fn": "Cage.withdraw",
      "offset": [
        2060,
        2091
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "961": {
      "fn": "Cage.withdraw",
      "offset": [
        2060,
        2091
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "963": {
      "fn": "Cage.withdraw",
      "offset": [
        2060,
        2091
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "964": {
      "fn": "Cage.withdraw",
      "offset": [
        2060,
        2091
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "966": {
      "fn": "Cage.withdraw",
      "offset": [
        2060,
        2091
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "968": {
      "fn": "Cage.withdraw",
      "offset": [
        2060,
        2091
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "969": {
      "fn": "Cage.withdraw",
      "offset": [
        2060,
        2091
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "970": {
      "fn": "Cage.withdraw",
      "offset": [
        2060,
        2091
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "972": {
      "fn": "Cage.withdraw",
      "offset": [
        2060,
        2091
      ],
      "op": "MUL",
      "path": "5"
    },
    "973": {
      "fn": "Cage.withdraw",
      "offset": [
        2060,
        2091
      ],
      "op": "ADD",
      "path": "5"
    },
    "974": {
      "fn": "Cage.withdraw",
      "offset": [
        2060,
        2098
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "976": {
      "fn": "Cage.withdraw",
      "offset": [
        2060,
        2098
      ],
      "op": "ADD",
      "path": "5"
    },
    "977": {
      "fn": "Cage.withdraw",
      "offset": [
        2060,
        2098
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "978": {
      "branch": 36,
      "fn": "Cage.withdraw",
      "offset": [
        2060,
        2117
      ],
      "op": "GT",
      "path": "5"
    },
    "979": {
      "fn": "Cage.withdraw",
      "offset": [
        2056,
        2570
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x462"
    },
    "982": {
      "branch": 36,
      "fn": "Cage.withdraw",
      "offset": [
        2056,
        2570
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "983": {
      "fn": "Cage.withdraw",
      "offset": [
        2263,
        2273
      ],
      "op": "CALLER",
      "path": "5",
      "statement": 5
    },
    "984": {
      "fn": "Cage.withdraw",
      "offset": [
        2248,
        2274
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "986": {
      "fn": "Cage.withdraw",
      "offset": [
        2248,
        2274
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "987": {
      "fn": "Cage.withdraw",
      "offset": [
        2248,
        2274
      ],
      "op": "DUP2",
      "path": "5"
    },
    "988": {
      "fn": "Cage.withdraw",
      "offset": [
        2248,
        2274
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "989": {
      "fn": "Cage.withdraw",
      "offset": [
        2248,
        2262
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "991": {
      "fn": "Cage.withdraw",
      "offset": [
        2248,
        2274
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "993": {
      "fn": "Cage.withdraw",
      "offset": [
        2248,
        2274
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "994": {
      "fn": "Cage.withdraw",
      "offset": [
        2248,
        2274
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "996": {
      "fn": "Cage.withdraw",
      "offset": [
        2248,
        2274
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "997": {
      "fn": "Cage.withdraw",
      "offset": [
        2248,
        2274
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "998": {
      "fn": "Cage.withdraw",
      "offset": [
        2275,
        2278
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3F0"
    },
    "1001": {
      "fn": "Cage.withdraw",
      "offset": [
        2277,
        2278
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1003": {
      "fn": "Cage.withdraw",
      "offset": [
        2275,
        2276
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1004": {
      "fn": "Cage.withdraw",
      "offset": [
        2275,
        2278
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE0A"
    },
    "1007": {
      "fn": "Cage.withdraw",
      "jump": "i",
      "offset": [
        2275,
        2278
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1008": {
      "fn": "Cage.withdraw",
      "offset": [
        2275,
        2278
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1009": {
      "fn": "Cage.withdraw",
      "offset": [
        2248,
        2279
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1010": {
      "fn": "Cage.withdraw",
      "offset": [
        2248,
        2279
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1011": {
      "fn": "Cage.withdraw",
      "offset": [
        2248,
        2279
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1012": {
      "fn": "Cage.withdraw",
      "offset": [
        2248,
        2279
      ],
      "op": "LT",
      "path": "5"
    },
    "1013": {
      "fn": "Cage.withdraw",
      "offset": [
        2248,
        2279
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x400"
    },
    "1016": {
      "fn": "Cage.withdraw",
      "offset": [
        2248,
        2279
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1017": {
      "fn": "Cage.withdraw",
      "offset": [
        2248,
        2279
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x400"
    },
    "1020": {
      "fn": "Cage.withdraw",
      "offset": [
        2248,
        2279
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE21"
    },
    "1023": {
      "fn": "Cage.withdraw",
      "jump": "i",
      "offset": [
        2248,
        2279
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1024": {
      "fn": "Cage.withdraw",
      "offset": [
        2248,
        2279
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1025": {
      "fn": "Cage.withdraw",
      "offset": [
        2248,
        2279
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1026": {
      "fn": "Cage.withdraw",
      "offset": [
        2248,
        2279
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1028": {
      "fn": "Cage.withdraw",
      "offset": [
        2248,
        2279
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1029": {
      "fn": "Cage.withdraw",
      "offset": [
        2248,
        2279
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1031": {
      "fn": "Cage.withdraw",
      "offset": [
        2248,
        2279
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1033": {
      "fn": "Cage.withdraw",
      "offset": [
        2248,
        2279
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1034": {
      "fn": "Cage.withdraw",
      "offset": [
        2248,
        2279
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1035": {
      "fn": "Cage.withdraw",
      "offset": [
        2248,
        2279
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "1037": {
      "fn": "Cage.withdraw",
      "offset": [
        2248,
        2279
      ],
      "op": "MUL",
      "path": "5"
    },
    "1038": {
      "fn": "Cage.withdraw",
      "offset": [
        2248,
        2279
      ],
      "op": "ADD",
      "path": "5"
    },
    "1039": {
      "fn": "Cage.withdraw",
      "offset": [
        2248,
        2286
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1041": {
      "fn": "Cage.withdraw",
      "offset": [
        2248,
        2286
      ],
      "op": "ADD",
      "path": "5"
    },
    "1042": {
      "fn": "Cage.withdraw",
      "offset": [
        2248,
        2286
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1043": {
      "fn": "Cage.withdraw",
      "offset": [
        2230,
        2245
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1044": {
      "fn": "Cage.withdraw",
      "offset": [
        2230,
        2286
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x41D"
    },
    "1047": {
      "fn": "Cage.withdraw",
      "offset": [
        2230,
        2286
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1048": {
      "fn": "Cage.withdraw",
      "offset": [
        2230,
        2286
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1049": {
      "fn": "Cage.withdraw",
      "offset": [
        2230,
        2286
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE0A"
    },
    "1052": {
      "fn": "Cage.withdraw",
      "jump": "i",
      "offset": [
        2230,
        2286
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1053": {
      "fn": "Cage.withdraw",
      "offset": [
        2230,
        2286
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1054": {
      "fn": "Cage.withdraw",
      "offset": [
        2313,
        2323
      ],
      "op": "CALLER",
      "path": "5",
      "statement": 6
    },
    "1055": {
      "fn": "Cage.withdraw",
      "offset": [
        2298,
        2324
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1057": {
      "fn": "Cage.withdraw",
      "offset": [
        2298,
        2324
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1058": {
      "fn": "Cage.withdraw",
      "offset": [
        2298,
        2324
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1059": {
      "fn": "Cage.withdraw",
      "offset": [
        2298,
        2324
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1060": {
      "fn": "Cage.withdraw",
      "offset": [
        2298,
        2312
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1062": {
      "fn": "Cage.withdraw",
      "offset": [
        2298,
        2324
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1064": {
      "fn": "Cage.withdraw",
      "offset": [
        2298,
        2324
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1065": {
      "fn": "Cage.withdraw",
      "offset": [
        2298,
        2324
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1067": {
      "fn": "Cage.withdraw",
      "offset": [
        2298,
        2324
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1068": {
      "fn": "Cage.withdraw",
      "offset": [
        2298,
        2324
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1069": {
      "fn": "Cage.withdraw",
      "offset": [
        2298,
        2330
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1070": {
      "fn": "Cage.withdraw",
      "offset": [
        2298,
        2330
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1071": {
      "fn": "Cage.withdraw",
      "offset": [
        2212,
        2286
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1072": {
      "fn": "Cage.withdraw",
      "offset": [
        2212,
        2286
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1073": {
      "op": "POP"
    },
    "1074": {
      "fn": "Cage.withdraw",
      "offset": [
        2298,
        2324
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1075": {
      "fn": "Cage.withdraw",
      "offset": [
        2298,
        2330
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1076": {
      "fn": "Cage.withdraw",
      "offset": [
        2298,
        2330
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x43F"
    },
    "1079": {
      "fn": "Cage.withdraw",
      "offset": [
        2298,
        2330
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1080": {
      "fn": "Cage.withdraw",
      "offset": [
        2298,
        2330
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x43F"
    },
    "1083": {
      "fn": "Cage.withdraw",
      "offset": [
        2298,
        2330
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE37"
    },
    "1086": {
      "fn": "Cage.withdraw",
      "jump": "i",
      "offset": [
        2298,
        2330
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1087": {
      "fn": "Cage.withdraw",
      "offset": [
        2298,
        2330
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1088": {
      "fn": "Cage.withdraw",
      "offset": [
        2298,
        2330
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1090": {
      "fn": "Cage.withdraw",
      "offset": [
        2298,
        2330
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1091": {
      "fn": "Cage.withdraw",
      "offset": [
        2298,
        2330
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1092": {
      "fn": "Cage.withdraw",
      "offset": [
        2298,
        2330
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1093": {
      "fn": "Cage.withdraw",
      "offset": [
        2298,
        2330
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1095": {
      "fn": "Cage.withdraw",
      "offset": [
        2298,
        2330
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1096": {
      "fn": "Cage.withdraw",
      "offset": [
        2298,
        2330
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1097": {
      "fn": "Cage.withdraw",
      "offset": [
        2298,
        2330
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "1099": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1101": {
      "op": "NOT"
    },
    "1102": {
      "fn": "Cage.withdraw",
      "offset": [
        2298,
        2330
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1103": {
      "fn": "Cage.withdraw",
      "offset": [
        2298,
        2330
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1104": {
      "fn": "Cage.withdraw",
      "offset": [
        2298,
        2330
      ],
      "op": "ADD",
      "path": "5"
    },
    "1105": {
      "fn": "Cage.withdraw",
      "offset": [
        2298,
        2330
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1106": {
      "fn": "Cage.withdraw",
      "offset": [
        2298,
        2330
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1107": {
      "fn": "Cage.withdraw",
      "offset": [
        2298,
        2330
      ],
      "op": "MUL",
      "path": "5"
    },
    "1108": {
      "fn": "Cage.withdraw",
      "offset": [
        2298,
        2330
      ],
      "op": "ADD",
      "path": "5"
    },
    "1109": {
      "fn": "Cage.withdraw",
      "offset": [
        2298,
        2330
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1110": {
      "fn": "Cage.withdraw",
      "offset": [
        2298,
        2330
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1111": {
      "fn": "Cage.withdraw",
      "offset": [
        2298,
        2330
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1112": {
      "fn": "Cage.withdraw",
      "offset": [
        2298,
        2330
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1114": {
      "fn": "Cage.withdraw",
      "offset": [
        2298,
        2330
      ],
      "op": "ADD",
      "path": "5"
    },
    "1115": {
      "fn": "Cage.withdraw",
      "offset": [
        2298,
        2330
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1116": {
      "fn": "Cage.withdraw",
      "offset": [
        2298,
        2330
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1117": {
      "fn": "Cage.withdraw",
      "offset": [
        2298,
        2330
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1118": {
      "fn": "Cage.withdraw",
      "offset": [
        2056,
        2570
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4EA"
    },
    "1121": {
      "fn": "Cage.withdraw",
      "offset": [
        2056,
        2570
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1122": {
      "fn": "Cage.withdraw",
      "offset": [
        2056,
        2570
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1123": {
      "fn": "Cage.withdraw",
      "offset": [
        2487,
        2497
      ],
      "op": "CALLER",
      "path": "5",
      "statement": 7
    },
    "1124": {
      "fn": "Cage.withdraw",
      "offset": [
        2472,
        2498
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1126": {
      "fn": "Cage.withdraw",
      "offset": [
        2472,
        2498
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1127": {
      "fn": "Cage.withdraw",
      "offset": [
        2472,
        2498
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1128": {
      "fn": "Cage.withdraw",
      "offset": [
        2472,
        2498
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1129": {
      "fn": "Cage.withdraw",
      "offset": [
        2472,
        2486
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1131": {
      "fn": "Cage.withdraw",
      "offset": [
        2472,
        2498
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1133": {
      "fn": "Cage.withdraw",
      "offset": [
        2472,
        2498
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1134": {
      "fn": "Cage.withdraw",
      "offset": [
        2472,
        2498
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1136": {
      "fn": "Cage.withdraw",
      "offset": [
        2472,
        2498
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1137": {
      "fn": "Cage.withdraw",
      "offset": [
        2472,
        2498
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1138": {
      "fn": "Cage.withdraw",
      "offset": [
        2513,
        2528
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1139": {
      "fn": "Cage.withdraw",
      "offset": [
        2513,
        2528
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1140": {
      "fn": "Cage.withdraw",
      "offset": [
        2499,
        2502
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x47E"
    },
    "1143": {
      "fn": "Cage.withdraw",
      "offset": [
        2501,
        2502
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1145": {
      "fn": "Cage.withdraw",
      "offset": [
        2499,
        2500
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1146": {
      "fn": "Cage.withdraw",
      "offset": [
        2499,
        2502
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE0A"
    },
    "1149": {
      "fn": "Cage.withdraw",
      "jump": "i",
      "offset": [
        2499,
        2502
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1150": {
      "fn": "Cage.withdraw",
      "offset": [
        2499,
        2502
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1151": {
      "fn": "Cage.withdraw",
      "offset": [
        2472,
        2503
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1152": {
      "fn": "Cage.withdraw",
      "offset": [
        2472,
        2503
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1153": {
      "fn": "Cage.withdraw",
      "offset": [
        2472,
        2503
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1154": {
      "fn": "Cage.withdraw",
      "offset": [
        2472,
        2503
      ],
      "op": "LT",
      "path": "5"
    },
    "1155": {
      "fn": "Cage.withdraw",
      "offset": [
        2472,
        2503
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x48E"
    },
    "1158": {
      "fn": "Cage.withdraw",
      "offset": [
        2472,
        2503
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1159": {
      "fn": "Cage.withdraw",
      "offset": [
        2472,
        2503
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x48E"
    },
    "1162": {
      "fn": "Cage.withdraw",
      "offset": [
        2472,
        2503
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE21"
    },
    "1165": {
      "fn": "Cage.withdraw",
      "jump": "i",
      "offset": [
        2472,
        2503
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1166": {
      "fn": "Cage.withdraw",
      "offset": [
        2472,
        2503
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1167": {
      "fn": "Cage.withdraw",
      "offset": [
        2472,
        2503
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1168": {
      "fn": "Cage.withdraw",
      "offset": [
        2472,
        2503
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1170": {
      "fn": "Cage.withdraw",
      "offset": [
        2472,
        2503
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1171": {
      "fn": "Cage.withdraw",
      "offset": [
        2472,
        2503
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1173": {
      "fn": "Cage.withdraw",
      "offset": [
        2472,
        2503
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1175": {
      "fn": "Cage.withdraw",
      "offset": [
        2472,
        2503
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1176": {
      "fn": "Cage.withdraw",
      "offset": [
        2472,
        2503
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1177": {
      "fn": "Cage.withdraw",
      "offset": [
        2472,
        2503
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "1179": {
      "fn": "Cage.withdraw",
      "offset": [
        2472,
        2503
      ],
      "op": "MUL",
      "path": "5"
    },
    "1180": {
      "fn": "Cage.withdraw",
      "offset": [
        2472,
        2503
      ],
      "op": "ADD",
      "path": "5"
    },
    "1181": {
      "fn": "Cage.withdraw",
      "offset": [
        2472,
        2510
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1183": {
      "fn": "Cage.withdraw",
      "offset": [
        2472,
        2510
      ],
      "op": "ADD",
      "path": "5"
    },
    "1184": {
      "fn": "Cage.withdraw",
      "offset": [
        2472,
        2510
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1185": {
      "fn": "Cage.withdraw",
      "offset": [
        2472,
        2528
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4AA"
    },
    "1188": {
      "fn": "Cage.withdraw",
      "offset": [
        2472,
        2528
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1189": {
      "fn": "Cage.withdraw",
      "offset": [
        2472,
        2528
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1190": {
      "fn": "Cage.withdraw",
      "offset": [
        2472,
        2528
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE0A"
    },
    "1193": {
      "fn": "Cage.withdraw",
      "jump": "i",
      "offset": [
        2472,
        2528
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1194": {
      "fn": "Cage.withdraw",
      "offset": [
        2472,
        2528
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1195": {
      "fn": "Cage.withdraw",
      "offset": [
        2446,
        2456
      ],
      "op": "CALLER",
      "path": "5"
    },
    "1196": {
      "fn": "Cage.withdraw",
      "offset": [
        2431,
        2457
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1198": {
      "fn": "Cage.withdraw",
      "offset": [
        2431,
        2457
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1199": {
      "fn": "Cage.withdraw",
      "offset": [
        2431,
        2457
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1200": {
      "fn": "Cage.withdraw",
      "offset": [
        2431,
        2457
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1201": {
      "fn": "Cage.withdraw",
      "offset": [
        2431,
        2445
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1203": {
      "fn": "Cage.withdraw",
      "offset": [
        2431,
        2457
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1205": {
      "fn": "Cage.withdraw",
      "offset": [
        2431,
        2457
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1206": {
      "fn": "Cage.withdraw",
      "offset": [
        2431,
        2457
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1208": {
      "fn": "Cage.withdraw",
      "offset": [
        2431,
        2457
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1209": {
      "fn": "Cage.withdraw",
      "offset": [
        2431,
        2457
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1210": {
      "fn": "Cage.withdraw",
      "offset": [
        2458,
        2461
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4C4"
    },
    "1213": {
      "fn": "Cage.withdraw",
      "offset": [
        2460,
        2461
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1215": {
      "fn": "Cage.withdraw",
      "offset": [
        2458,
        2459
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1216": {
      "fn": "Cage.withdraw",
      "offset": [
        2458,
        2461
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE0A"
    },
    "1219": {
      "fn": "Cage.withdraw",
      "jump": "i",
      "offset": [
        2458,
        2461
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1220": {
      "fn": "Cage.withdraw",
      "offset": [
        2458,
        2461
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1221": {
      "fn": "Cage.withdraw",
      "offset": [
        2431,
        2462
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1222": {
      "fn": "Cage.withdraw",
      "offset": [
        2431,
        2462
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1223": {
      "fn": "Cage.withdraw",
      "offset": [
        2431,
        2462
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1224": {
      "fn": "Cage.withdraw",
      "offset": [
        2431,
        2462
      ],
      "op": "LT",
      "path": "5"
    },
    "1225": {
      "fn": "Cage.withdraw",
      "offset": [
        2431,
        2462
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4D4"
    },
    "1228": {
      "fn": "Cage.withdraw",
      "offset": [
        2431,
        2462
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1229": {
      "fn": "Cage.withdraw",
      "offset": [
        2431,
        2462
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4D4"
    },
    "1232": {
      "fn": "Cage.withdraw",
      "offset": [
        2431,
        2462
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE21"
    },
    "1235": {
      "fn": "Cage.withdraw",
      "jump": "i",
      "offset": [
        2431,
        2462
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1236": {
      "fn": "Cage.withdraw",
      "offset": [
        2431,
        2462
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1237": {
      "fn": "Cage.withdraw",
      "offset": [
        2431,
        2462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1239": {
      "fn": "Cage.withdraw",
      "offset": [
        2431,
        2462
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1240": {
      "fn": "Cage.withdraw",
      "offset": [
        2431,
        2462
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1241": {
      "fn": "Cage.withdraw",
      "offset": [
        2431,
        2462
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1242": {
      "fn": "Cage.withdraw",
      "offset": [
        2431,
        2462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1244": {
      "fn": "Cage.withdraw",
      "offset": [
        2431,
        2462
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1245": {
      "fn": "Cage.withdraw",
      "offset": [
        2431,
        2462
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1246": {
      "fn": "Cage.withdraw",
      "offset": [
        2431,
        2462
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "1248": {
      "fn": "Cage.withdraw",
      "offset": [
        2431,
        2462
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1249": {
      "fn": "Cage.withdraw",
      "offset": [
        2431,
        2462
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1250": {
      "fn": "Cage.withdraw",
      "offset": [
        2431,
        2462
      ],
      "op": "MUL",
      "path": "5"
    },
    "1251": {
      "fn": "Cage.withdraw",
      "offset": [
        2431,
        2462
      ],
      "op": "ADD",
      "path": "5"
    },
    "1252": {
      "fn": "Cage.withdraw",
      "offset": [
        2431,
        2528
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1253": {
      "fn": "Cage.withdraw",
      "offset": [
        2431,
        2528
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1254": {
      "fn": "Cage.withdraw",
      "offset": [
        2431,
        2528
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1255": {
      "fn": "Cage.withdraw",
      "offset": [
        2431,
        2528
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1256": {
      "fn": "Cage.withdraw",
      "offset": [
        2431,
        2462
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1257": {
      "op": "POP"
    },
    "1258": {
      "fn": "Cage.withdraw",
      "offset": [
        2056,
        2570
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1259": {
      "fn": "Cage.withdraw",
      "offset": [
        2042,
        2045
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 8
    },
    "1260": {
      "fn": "Cage.withdraw",
      "offset": [
        2042,
        2045
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4F4"
    },
    "1263": {
      "fn": "Cage.withdraw",
      "offset": [
        2042,
        2045
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1264": {
      "fn": "Cage.withdraw",
      "offset": [
        2042,
        2045
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE4D"
    },
    "1267": {
      "fn": "Cage.withdraw",
      "jump": "i",
      "offset": [
        2042,
        2045
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1268": {
      "fn": "Cage.withdraw",
      "offset": [
        2042,
        2045
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1269": {
      "fn": "Cage.withdraw",
      "offset": [
        2042,
        2045
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1270": {
      "fn": "Cage.withdraw",
      "offset": [
        2042,
        2045
      ],
      "op": "POP",
      "path": "5"
    },
    "1271": {
      "fn": "Cage.withdraw",
      "offset": [
        2042,
        2045
      ],
      "op": "POP",
      "path": "5"
    },
    "1272": {
      "fn": "Cage.withdraw",
      "offset": [
        1986,
        2578
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x38D"
    },
    "1275": {
      "fn": "Cage.withdraw",
      "offset": [
        1986,
        2578
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1276": {
      "fn": "Cage.withdraw",
      "offset": [
        1986,
        2578
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1277": {
      "fn": "Cage.withdraw",
      "offset": [
        1986,
        2578
      ],
      "op": "POP",
      "path": "5"
    },
    "1278": {
      "fn": "Cage.withdraw",
      "offset": [
        1948,
        2584
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x376"
    },
    "1281": {
      "fn": "Cage.withdraw",
      "offset": [
        1948,
        2584
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1282": {
      "fn": "Cage.withdraw",
      "offset": [
        1948,
        2584
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1283": {
      "fn": "Cage.withdraw",
      "offset": [
        2611,
        2641
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 9,
      "value": "0x40"
    },
    "1285": {
      "fn": "Cage.withdraw",
      "offset": [
        2611,
        2641
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1286": {
      "op": "DUP4"
    },
    "1287": {
      "op": "DUP2"
    },
    "1288": {
      "op": "MSTORE"
    },
    "1289": {
      "fn": "Cage.withdraw",
      "offset": [
        2621,
        2631
      ],
      "op": "CALLER",
      "path": "5"
    },
    "1290": {
      "fn": "Cage.withdraw",
      "offset": [
        2621,
        2631
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1291": {
      "fn": "Cage.withdraw",
      "offset": [
        2611,
        2641
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5"
    },
    "1324": {
      "fn": "Cage.withdraw",
      "offset": [
        2611,
        2641
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1325": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1327": {
      "op": "ADD"
    },
    "1328": {
      "fn": "Cage.withdraw",
      "offset": [
        2611,
        2641
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1330": {
      "fn": "Cage.withdraw",
      "offset": [
        2611,
        2641
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1331": {
      "fn": "Cage.withdraw",
      "offset": [
        2611,
        2641
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1332": {
      "fn": "Cage.withdraw",
      "offset": [
        2611,
        2641
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1333": {
      "fn": "Cage.withdraw",
      "offset": [
        2611,
        2641
      ],
      "op": "SUB",
      "path": "5"
    },
    "1334": {
      "fn": "Cage.withdraw",
      "offset": [
        2611,
        2641
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1335": {
      "fn": "Cage.withdraw",
      "offset": [
        2611,
        2641
      ],
      "op": "LOG2",
      "path": "5"
    },
    "1336": {
      "fn": "Cage.withdraw",
      "offset": [
        1506,
        2646
      ],
      "op": "POP",
      "path": "5"
    },
    "1337": {
      "fn": "Cage.withdraw",
      "offset": [
        1506,
        2646
      ],
      "op": "POP",
      "path": "5"
    },
    "1338": {
      "fn": "Cage.withdraw",
      "offset": [
        1453,
        2646
      ],
      "op": "POP",
      "path": "5"
    },
    "1339": {
      "fn": "Cage.withdraw",
      "jump": "o",
      "offset": [
        1453,
        2646
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1340": {
      "fn": "Cage.stake",
      "offset": [
        995,
        1448
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1341": {
      "fn": "Cage.stake",
      "offset": [
        1116,
        1125
      ],
      "op": "CALLVALUE",
      "path": "5",
      "statement": 10
    },
    "1342": {
      "fn": "Cage.stake",
      "offset": [
        1095,
        1105
      ],
      "op": "CALLER",
      "path": "5"
    },
    "1343": {
      "fn": "Cage.stake",
      "offset": [
        1095,
        1113
      ],
      "op": "BALANCE",
      "path": "5"
    },
    "1344": {
      "branch": 37,
      "fn": "Cage.stake",
      "offset": [
        1095,
        1125
      ],
      "op": "GT",
      "path": "5"
    },
    "1345": {
      "fn": "Cage.stake",
      "offset": [
        1087,
        1155
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x588"
    },
    "1348": {
      "branch": 37,
      "fn": "Cage.stake",
      "offset": [
        1087,
        1155
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1349": {
      "fn": "Cage.stake",
      "offset": [
        1087,
        1155
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1351": {
      "fn": "Cage.stake",
      "offset": [
        1087,
        1155
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1352": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1356": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1358": {
      "op": "SHL"
    },
    "1359": {
      "fn": "Cage.stake",
      "offset": [
        1087,
        1155
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1360": {
      "fn": "Cage.stake",
      "offset": [
        1087,
        1155
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1361": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1363": {
      "fn": "Cage.stake",
      "offset": [
        1087,
        1155
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1365": {
      "fn": "Cage.stake",
      "offset": [
        1087,
        1155
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1366": {
      "fn": "Cage.stake",
      "offset": [
        1087,
        1155
      ],
      "op": "ADD",
      "path": "5"
    },
    "1367": {
      "op": "MSTORE"
    },
    "1368": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "1370": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1372": {
      "op": "DUP3"
    },
    "1373": {
      "op": "ADD"
    },
    "1374": {
      "op": "MSTORE"
    },
    "1375": {
      "op": "PUSH25",
      "value": "0xB2DEEA40C8DE40DCDEE840DEEEDC40CADCDEEACED0408AA89"
    },
    "1401": {
      "op": "PUSH1",
      "value": "0x3B"
    },
    "1403": {
      "op": "SHL"
    },
    "1404": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1406": {
      "op": "DUP3"
    },
    "1407": {
      "op": "ADD"
    },
    "1408": {
      "op": "MSTORE"
    },
    "1409": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1411": {
      "op": "ADD"
    },
    "1412": {
      "fn": "Cage.stake",
      "offset": [
        1087,
        1155
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2B0"
    },
    "1415": {
      "op": "JUMP"
    },
    "1416": {
      "fn": "Cage.stake",
      "offset": [
        1087,
        1155
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1417": {
      "fn": "Cage.stake",
      "offset": [
        1208,
        1218
      ],
      "op": "CALLER",
      "path": "5",
      "statement": 11
    },
    "1418": {
      "fn": "Cage.stake",
      "offset": [
        1200,
        1219
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1420": {
      "fn": "Cage.stake",
      "offset": [
        1200,
        1219
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1421": {
      "fn": "Cage.stake",
      "offset": [
        1200,
        1219
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1422": {
      "fn": "Cage.stake",
      "offset": [
        1200,
        1219
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1423": {
      "fn": "Cage.stake",
      "offset": [
        1200,
        1207
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "1425": {
      "fn": "Cage.stake",
      "offset": [
        1200,
        1219
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1427": {
      "fn": "Cage.stake",
      "offset": [
        1200,
        1219
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1428": {
      "fn": "Cage.stake",
      "offset": [
        1200,
        1219
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1429": {
      "fn": "Cage.stake",
      "offset": [
        1200,
        1219
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1430": {
      "fn": "Cage.stake",
      "offset": [
        1200,
        1219
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1432": {
      "fn": "Cage.stake",
      "offset": [
        1200,
        1219
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1433": {
      "fn": "Cage.stake",
      "offset": [
        1200,
        1219
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1434": {
      "fn": "Cage.stake",
      "offset": [
        1200,
        1219
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1435": {
      "fn": "Cage.stake",
      "offset": [
        1200,
        1226
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1436": {
      "fn": "Cage.stake",
      "offset": [
        1200,
        1226
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1437": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1439": {
      "op": "NOT"
    },
    "1440": {
      "fn": "Cage.stake",
      "offset": [
        1200,
        1226
      ],
      "op": "AND",
      "path": "5"
    },
    "1441": {
      "fn": "Cage.stake",
      "offset": [
        1222,
        1226
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1443": {
      "fn": "Cage.stake",
      "offset": [
        1200,
        1226
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1444": {
      "fn": "Cage.stake",
      "offset": [
        1200,
        1226
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1445": {
      "fn": "Cage.stake",
      "offset": [
        1200,
        1226
      ],
      "op": "OR",
      "path": "5"
    },
    "1446": {
      "fn": "Cage.stake",
      "offset": [
        1200,
        1226
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1447": {
      "fn": "Cage.stake",
      "offset": [
        1200,
        1226
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1448": {
      "fn": "Cage.stake",
      "offset": [
        1200,
        1226
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1449": {
      "fn": "Cage.stake",
      "offset": [
        1308,
        1322
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 12,
      "value": "0x4"
    },
    "1451": {
      "fn": "Cage.stake",
      "offset": [
        1308,
        1334
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1452": {
      "fn": "Cage.stake",
      "offset": [
        1308,
        1334
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1453": {
      "fn": "Cage.stake",
      "offset": [
        1308,
        1334
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1454": {
      "fn": "Cage.stake",
      "offset": [
        1308,
        1334
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1455": {
      "fn": "Cage.stake",
      "offset": [
        1308,
        1334
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1456": {
      "fn": "Cage.stake",
      "offset": [
        1340,
        1367
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1457": {
      "fn": "Cage.stake",
      "offset": [
        1340,
        1367
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1458": {
      "fn": "Cage.stake",
      "offset": [
        1340,
        1367
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1459": {
      "fn": "Cage.stake",
      "offset": [
        1340,
        1367
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1460": {
      "fn": "Cage.stake",
      "offset": [
        1340,
        1367
      ],
      "op": "ADD",
      "path": "5"
    },
    "1461": {
      "fn": "Cage.stake",
      "offset": [
        1340,
        1367
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1462": {
      "fn": "Cage.stake",
      "offset": [
        1340,
        1367
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1463": {
      "fn": "Cage.stake",
      "offset": [
        1346,
        1355
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "1464": {
      "fn": "Cage.stake",
      "offset": [
        1340,
        1367
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1465": {
      "fn": "Cage.stake",
      "offset": [
        1340,
        1367
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1466": {
      "fn": "Cage.stake",
      "offset": [
        1340,
        1367
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1467": {
      "fn": "Cage.stake",
      "offset": [
        1287,
        1302
      ],
      "op": "TIMESTAMP",
      "path": "5"
    },
    "1468": {
      "fn": "Cage.stake",
      "offset": [
        1340,
        1367
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1469": {
      "fn": "Cage.stake",
      "offset": [
        1340,
        1367
      ],
      "op": "DUP8",
      "path": "5"
    },
    "1470": {
      "fn": "Cage.stake",
      "offset": [
        1340,
        1367
      ],
      "op": "ADD",
      "path": "5"
    },
    "1471": {
      "fn": "Cage.stake",
      "offset": [
        1340,
        1367
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1472": {
      "fn": "Cage.stake",
      "offset": [
        1340,
        1367
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1473": {
      "fn": "Cage.stake",
      "offset": [
        1340,
        1367
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1474": {
      "fn": "Cage.stake",
      "offset": [
        1308,
        1368
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1475": {
      "fn": "Cage.stake",
      "offset": [
        1308,
        1368
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1476": {
      "fn": "Cage.stake",
      "offset": [
        1308,
        1368
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1477": {
      "fn": "Cage.stake",
      "offset": [
        1308,
        1368
      ],
      "op": "DUP8",
      "path": "5"
    },
    "1478": {
      "fn": "Cage.stake",
      "offset": [
        1308,
        1368
      ],
      "op": "ADD",
      "path": "5"
    },
    "1479": {
      "fn": "Cage.stake",
      "offset": [
        1308,
        1368
      ],
      "op": "DUP7",
      "path": "5"
    },
    "1480": {
      "fn": "Cage.stake",
      "offset": [
        1308,
        1368
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1481": {
      "fn": "Cage.stake",
      "offset": [
        1308,
        1368
      ],
      "op": "SWAP5",
      "path": "5"
    },
    "1482": {
      "fn": "Cage.stake",
      "offset": [
        1308,
        1368
      ],
      "op": "DUP10",
      "path": "5"
    },
    "1483": {
      "fn": "Cage.stake",
      "offset": [
        1308,
        1368
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1484": {
      "fn": "Cage.stake",
      "offset": [
        1308,
        1368
      ],
      "op": "SWAP7",
      "path": "5"
    },
    "1485": {
      "fn": "Cage.stake",
      "offset": [
        1308,
        1368
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1486": {
      "fn": "Cage.stake",
      "offset": [
        1308,
        1368
      ],
      "op": "SWAP8",
      "path": "5"
    },
    "1487": {
      "fn": "Cage.stake",
      "offset": [
        1308,
        1368
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1488": {
      "fn": "Cage.stake",
      "offset": [
        1308,
        1368
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1489": {
      "fn": "Cage.stake",
      "offset": [
        1308,
        1368
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1490": {
      "fn": "Cage.stake",
      "offset": [
        1308,
        1368
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "1492": {
      "fn": "Cage.stake",
      "offset": [
        1308,
        1368
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1493": {
      "fn": "Cage.stake",
      "offset": [
        1308,
        1368
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1494": {
      "fn": "Cage.stake",
      "offset": [
        1308,
        1368
      ],
      "op": "MUL",
      "path": "5"
    },
    "1495": {
      "fn": "Cage.stake",
      "offset": [
        1308,
        1368
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1496": {
      "fn": "Cage.stake",
      "offset": [
        1308,
        1368
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1497": {
      "fn": "Cage.stake",
      "offset": [
        1308,
        1368
      ],
      "op": "ADD",
      "path": "5"
    },
    "1498": {
      "fn": "Cage.stake",
      "offset": [
        1308,
        1368
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1499": {
      "fn": "Cage.stake",
      "offset": [
        1308,
        1368
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1500": {
      "fn": "Cage.stake",
      "offset": [
        1308,
        1368
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1501": {
      "fn": "Cage.stake",
      "offset": [
        1308,
        1368
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1502": {
      "fn": "Cage.stake",
      "offset": [
        1308,
        1368
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1503": {
      "fn": "Cage.stake",
      "offset": [
        1308,
        1368
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1504": {
      "fn": "Cage.stake",
      "offset": [
        1308,
        1368
      ],
      "op": "ADD",
      "path": "5"
    },
    "1505": {
      "fn": "Cage.stake",
      "offset": [
        1308,
        1368
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1506": {
      "fn": "Cage.stake",
      "offset": [
        1403,
        1443
      ],
      "op": "MLOAD",
      "path": "5",
      "statement": 13
    },
    "1507": {
      "fn": "Cage.stake",
      "offset": [
        1287,
        1302
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1508": {
      "fn": "Cage.stake",
      "offset": [
        1287,
        1302
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1509": {
      "fn": "Cage.stake",
      "offset": [
        1208,
        1218
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1510": {
      "fn": "Cage.stake",
      "offset": [
        1403,
        1443
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x1449C6DD7851ABC30ABF37F57715F492010519147CC2652FBC38202C18A6EE90"
    },
    "1543": {
      "fn": "Cage.stake",
      "offset": [
        1403,
        1443
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1544": {
      "fn": "Cage.stake",
      "offset": [
        1403,
        1443
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x61B"
    },
    "1547": {
      "fn": "Cage.stake",
      "offset": [
        1403,
        1443
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1548": {
      "fn": "Cage.stake",
      "offset": [
        1287,
        1302
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1549": {
      "fn": "Cage.stake",
      "offset": [
        1287,
        1302
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1550": {
      "op": "SWAP2"
    },
    "1551": {
      "op": "DUP3"
    },
    "1552": {
      "op": "MSTORE"
    },
    "1553": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1555": {
      "op": "DUP3"
    },
    "1556": {
      "op": "ADD"
    },
    "1557": {
      "op": "MSTORE"
    },
    "1558": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1560": {
      "op": "ADD"
    },
    "1561": {
      "op": "SWAP1"
    },
    "1562": {
      "op": "JUMP"
    },
    "1563": {
      "fn": "Cage.stake",
      "offset": [
        1403,
        1443
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1564": {
      "fn": "Cage.stake",
      "offset": [
        1403,
        1443
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1566": {
      "fn": "Cage.stake",
      "offset": [
        1403,
        1443
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1567": {
      "fn": "Cage.stake",
      "offset": [
        1403,
        1443
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1568": {
      "fn": "Cage.stake",
      "offset": [
        1403,
        1443
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1569": {
      "fn": "Cage.stake",
      "offset": [
        1403,
        1443
      ],
      "op": "SUB",
      "path": "5"
    },
    "1570": {
      "fn": "Cage.stake",
      "offset": [
        1403,
        1443
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1571": {
      "fn": "Cage.stake",
      "offset": [
        1403,
        1443
      ],
      "op": "LOG2",
      "path": "5"
    },
    "1572": {
      "fn": "Cage.stake",
      "offset": [
        1027,
        1448
      ],
      "op": "POP",
      "path": "5"
    },
    "1573": {
      "fn": "Cage.stake",
      "jump": "o",
      "offset": [
        995,
        1448
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1574": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2795,
        3109
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1575": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1577": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1579": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1581": {
      "op": "SHL"
    },
    "1582": {
      "op": "SUB"
    },
    "1583": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2939,
        2963
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1584": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2939,
        2963
      ],
      "op": "AND",
      "path": "5"
    },
    "1585": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2858,
        2865
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1587": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2939,
        2963
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1588": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2939,
        2963
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1589": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2939,
        2963
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1590": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2939,
        2953
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1592": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2939,
        2963
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1594": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2939,
        2963
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1595": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2939,
        2963
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1596": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2939,
        2963
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1597": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2939,
        2963
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1599": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2939,
        2963
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1600": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2939,
        2963
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1601": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2939,
        2963
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1602": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1603": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1604": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1605": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1606": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1607": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1608": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "MUL",
      "path": "5"
    },
    "1609": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1610": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "ADD",
      "path": "5"
    },
    "1611": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1612": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "ADD",
      "path": "5"
    },
    "1613": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1614": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1615": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1616": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1617": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1618": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1619": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2858,
        2865
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1620": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2858,
        2865
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1621": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2858,
        2865
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1622": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2858,
        2865
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1623": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1624": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2939,
        2963
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1625": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1626": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2858,
        2865
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1627": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2858,
        2865
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1628": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "DUP5",
      "path": "5"
    },
    "1629": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "ADD",
      "path": "5"
    },
    "1630": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1631": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1632": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1633": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "LT",
      "path": "5"
    },
    "1634": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1635": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6A4"
    },
    "1638": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1639": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1640": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1641": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1642": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1644": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1645": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1647": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1649": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "1650": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1651": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "1653": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "MUL",
      "path": "5"
    },
    "1654": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "ADD",
      "path": "5"
    },
    "1655": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1657": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1658": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1659": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1661": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "ADD",
      "path": "5"
    },
    "1662": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1664": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1665": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1666": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1667": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1669": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1670": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "ADD",
      "path": "5"
    },
    "1671": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1672": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1673": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1674": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1676": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "ADD",
      "path": "5"
    },
    "1677": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1679": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1680": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "ADD",
      "path": "5"
    },
    "1681": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1682": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1683": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1684": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "POP",
      "path": "5"
    },
    "1685": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "POP",
      "path": "5"
    },
    "1686": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1687": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1688": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1690": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "ADD",
      "path": "5"
    },
    "1691": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1692": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "1694": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "ADD",
      "path": "5"
    },
    "1695": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1696": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x65E"
    },
    "1699": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1700": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1701": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "POP",
      "path": "5"
    },
    "1702": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "POP",
      "path": "5"
    },
    "1703": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "POP",
      "path": "5"
    },
    "1704": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "POP",
      "path": "5"
    },
    "1705": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1706": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2908,
        2963
      ],
      "op": "POP",
      "path": "5"
    },
    "1707": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2974,
        2980
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1709": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2969,
        3075
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1710": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2990,
        3003
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1711": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2990,
        3010
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1712": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2986,
        2987
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1713": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2986,
        3010
      ],
      "op": "LT",
      "path": "5"
    },
    "1714": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2969,
        3075
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1715": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2969,
        3075
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6F3"
    },
    "1718": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2969,
        3075
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1719": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        3045,
        3058
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 14
    },
    "1720": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        3059,
        3060
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1721": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        3045,
        3061
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1722": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        3045,
        3061
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1723": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        3045,
        3061
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1724": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        3045,
        3061
      ],
      "op": "LT",
      "path": "5"
    },
    "1725": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        3045,
        3061
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6C8"
    },
    "1728": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        3045,
        3061
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1729": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        3045,
        3061
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6C8"
    },
    "1732": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        3045,
        3061
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE21"
    },
    "1735": {
      "fn": "Cage.getStakedAmount",
      "jump": "i",
      "offset": [
        3045,
        3061
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1736": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        3045,
        3061
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1737": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        3045,
        3061
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1739": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        3045,
        3061
      ],
      "op": "MUL",
      "path": "5"
    },
    "1740": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        3045,
        3061
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "1742": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        3045,
        3061
      ],
      "op": "ADD",
      "path": "5"
    },
    "1743": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        3045,
        3061
      ],
      "op": "ADD",
      "path": "5"
    },
    "1744": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        3045,
        3061
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1745": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        3045,
        3068
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1747": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        3045,
        3068
      ],
      "op": "ADD",
      "path": "5"
    },
    "1748": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        3045,
        3068
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1749": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        3024,
        3068
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1750": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        3024,
        3068
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6DF"
    },
    "1753": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        3024,
        3068
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1754": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        3024,
        3068
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1755": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        3024,
        3068
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE64"
    },
    "1758": {
      "fn": "Cage.getStakedAmount",
      "jump": "i",
      "offset": [
        3024,
        3068
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1759": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        3024,
        3068
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1760": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        3024,
        3068
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1761": {
      "op": "POP"
    },
    "1762": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        3012,
        3015
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 15
    },
    "1763": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        3012,
        3015
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6EB"
    },
    "1766": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        3012,
        3015
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1767": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        3012,
        3015
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE7C"
    },
    "1770": {
      "fn": "Cage.getStakedAmount",
      "jump": "i",
      "offset": [
        3012,
        3015
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1771": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        3012,
        3015
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1772": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        3012,
        3015
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "1773": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        3012,
        3015
      ],
      "op": "POP",
      "path": "5"
    },
    "1774": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        3012,
        3015
      ],
      "op": "POP",
      "path": "5"
    },
    "1775": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2969,
        3075
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6AD"
    },
    "1778": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2969,
        3075
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1779": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2969,
        3075
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1780": {
      "op": "POP"
    },
    "1781": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        3087,
        3104
      ],
      "op": "SWAP1",
      "path": "5",
      "statement": 16
    },
    "1782": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        3087,
        3104
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "1783": {
      "fn": "Cage.getStakedAmount",
      "offset": [
        2795,
        3109
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "1784": {
      "op": "POP"
    },
    "1785": {
      "op": "POP"
    },
    "1786": {
      "op": "POP"
    },
    "1787": {
      "fn": "Cage.getStakedAmount",
      "jump": "o",
      "offset": [
        2795,
        3109
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1788": {
      "fn": "Cage.buyIn",
      "offset": [
        3780,
        4040
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1789": {
      "fn": "Cage.buyIn",
      "offset": [
        3901,
        3910
      ],
      "op": "CALLVALUE",
      "path": "5",
      "statement": 17
    },
    "1790": {
      "fn": "Cage.buyIn",
      "offset": [
        3879,
        3889
      ],
      "op": "CALLER",
      "path": "5"
    },
    "1791": {
      "fn": "Cage.buyIn",
      "offset": [
        3879,
        3897
      ],
      "op": "BALANCE",
      "path": "5"
    },
    "1792": {
      "fn": "Cage.buyIn",
      "offset": [
        3879,
        3910
      ],
      "op": "LT",
      "path": "5"
    },
    "1793": {
      "branch": 38,
      "fn": "Cage.buyIn",
      "offset": [
        3879,
        3910
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1794": {
      "fn": "Cage.buyIn",
      "offset": [
        3871,
        3940
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x749"
    },
    "1797": {
      "branch": 38,
      "fn": "Cage.buyIn",
      "offset": [
        3871,
        3940
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1798": {
      "fn": "Cage.buyIn",
      "offset": [
        3871,
        3940
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1800": {
      "fn": "Cage.buyIn",
      "offset": [
        3871,
        3940
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1801": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1805": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1807": {
      "op": "SHL"
    },
    "1808": {
      "fn": "Cage.buyIn",
      "offset": [
        3871,
        3940
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1809": {
      "fn": "Cage.buyIn",
      "offset": [
        3871,
        3940
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1810": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1812": {
      "fn": "Cage.buyIn",
      "offset": [
        3871,
        3940
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1814": {
      "fn": "Cage.buyIn",
      "offset": [
        3871,
        3940
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1815": {
      "fn": "Cage.buyIn",
      "offset": [
        3871,
        3940
      ],
      "op": "ADD",
      "path": "5"
    },
    "1816": {
      "op": "MSTORE"
    },
    "1817": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "1819": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1821": {
      "op": "DUP3"
    },
    "1822": {
      "op": "ADD"
    },
    "1823": {
      "op": "MSTORE"
    },
    "1824": {
      "op": "PUSH25",
      "value": "0xB2DEEA40C8DE40DCDEE840DEEEDC40CADCDEEACED0408AA89"
    },
    "1850": {
      "op": "PUSH1",
      "value": "0x3B"
    },
    "1852": {
      "op": "SHL"
    },
    "1853": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1855": {
      "op": "DUP3"
    },
    "1856": {
      "op": "ADD"
    },
    "1857": {
      "op": "MSTORE"
    },
    "1858": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1860": {
      "op": "ADD"
    },
    "1861": {
      "fn": "Cage.buyIn",
      "offset": [
        3871,
        3940
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2B0"
    },
    "1864": {
      "op": "JUMP"
    },
    "1865": {
      "fn": "Cage.buyIn",
      "offset": [
        3871,
        3940
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1866": {
      "fn": "Cage.buyIn",
      "offset": [
        3990,
        4001
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 18,
      "value": "0x2"
    },
    "1868": {
      "fn": "Cage.buyIn",
      "offset": [
        3990,
        4001
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1869": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1871": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1873": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1875": {
      "op": "SHL"
    },
    "1876": {
      "op": "SUB"
    },
    "1877": {
      "fn": "Cage.buyIn",
      "offset": [
        3990,
        4001
      ],
      "op": "AND",
      "path": "5"
    },
    "1878": {
      "fn": "Cage.buyIn",
      "offset": [
        3990,
        4006
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x40C10F19"
    },
    "1883": {
      "fn": "Cage.buyIn",
      "offset": [
        4007,
        4017
      ],
      "op": "CALLER",
      "path": "5"
    },
    "1884": {
      "fn": "Cage.buyIn",
      "offset": [
        4019,
        4033
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x767"
    },
    "1887": {
      "fn": "Cage.buyIn",
      "offset": [
        4019,
        4028
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "1888": {
      "fn": "Cage.buyIn",
      "offset": [
        4029,
        4033
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3E8"
    },
    "1891": {
      "fn": "Cage.buyIn",
      "offset": [
        4019,
        4033
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE95"
    },
    "1894": {
      "fn": "Cage.buyIn",
      "jump": "i",
      "offset": [
        4019,
        4033
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1895": {
      "fn": "Cage.buyIn",
      "offset": [
        4019,
        4033
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1896": {
      "fn": "Cage.buyIn",
      "offset": [
        3990,
        4035
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1898": {
      "fn": "Cage.buyIn",
      "offset": [
        3990,
        4035
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1899": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1901": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1903": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1905": {
      "op": "SHL"
    },
    "1906": {
      "op": "SUB"
    },
    "1907": {
      "op": "NOT"
    },
    "1908": {
      "fn": "Cage.buyIn",
      "offset": [
        3990,
        4035
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xE0"
    },
    "1910": {
      "fn": "Cage.buyIn",
      "offset": [
        3990,
        4035
      ],
      "op": "DUP6",
      "path": "5"
    },
    "1911": {
      "fn": "Cage.buyIn",
      "offset": [
        3990,
        4035
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "1912": {
      "fn": "Cage.buyIn",
      "offset": [
        3990,
        4035
      ],
      "op": "SHL",
      "path": "5"
    },
    "1913": {
      "fn": "Cage.buyIn",
      "offset": [
        3990,
        4035
      ],
      "op": "AND",
      "path": "5"
    },
    "1914": {
      "fn": "Cage.buyIn",
      "offset": [
        3990,
        4035
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1915": {
      "fn": "Cage.buyIn",
      "offset": [
        3990,
        4035
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1916": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1918": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1920": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1922": {
      "op": "SHL"
    },
    "1923": {
      "op": "SUB"
    },
    "1924": {
      "op": "SWAP1"
    },
    "1925": {
      "op": "SWAP3"
    },
    "1926": {
      "op": "AND"
    },
    "1927": {
      "fn": "Cage.buyIn",
      "offset": [
        3990,
        4035
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1929": {
      "fn": "Cage.buyIn",
      "offset": [
        3990,
        4035
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1930": {
      "fn": "Cage.buyIn",
      "offset": [
        3990,
        4035
      ],
      "op": "ADD",
      "path": "5"
    },
    "1931": {
      "op": "MSTORE"
    },
    "1932": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1934": {
      "op": "DUP3"
    },
    "1935": {
      "op": "ADD"
    },
    "1936": {
      "op": "MSTORE"
    },
    "1937": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1939": {
      "op": "ADD"
    },
    "1940": {
      "fn": "Cage.buyIn",
      "offset": [
        3990,
        4035
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1942": {
      "fn": "Cage.buyIn",
      "offset": [
        3990,
        4035
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1944": {
      "fn": "Cage.buyIn",
      "offset": [
        3990,
        4035
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1945": {
      "fn": "Cage.buyIn",
      "offset": [
        3990,
        4035
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1946": {
      "fn": "Cage.buyIn",
      "offset": [
        3990,
        4035
      ],
      "op": "DUP4",
      "path": "5"
    },
    "1947": {
      "fn": "Cage.buyIn",
      "offset": [
        3990,
        4035
      ],
      "op": "SUB",
      "path": "5"
    },
    "1948": {
      "fn": "Cage.buyIn",
      "offset": [
        3990,
        4035
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1949": {
      "fn": "Cage.buyIn",
      "offset": [
        3990,
        4035
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1951": {
      "fn": "Cage.buyIn",
      "offset": [
        3990,
        4035
      ],
      "op": "DUP8",
      "path": "5"
    },
    "1952": {
      "fn": "Cage.buyIn",
      "offset": [
        3990,
        4035
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1953": {
      "fn": "Cage.buyIn",
      "offset": [
        3990,
        4035
      ],
      "op": "EXTCODESIZE",
      "path": "5"
    },
    "1954": {
      "fn": "Cage.buyIn",
      "offset": [
        3990,
        4035
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1955": {
      "fn": "Cage.buyIn",
      "offset": [
        3990,
        4035
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1956": {
      "fn": "Cage.buyIn",
      "offset": [
        3990,
        4035
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1957": {
      "fn": "Cage.buyIn",
      "offset": [
        3990,
        4035
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7AD"
    },
    "1960": {
      "fn": "Cage.buyIn",
      "offset": [
        3990,
        4035
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1961": {
      "fn": "Cage.buyIn",
      "offset": [
        3990,
        4035
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1963": {
      "fn": "Cage.buyIn",
      "offset": [
        3990,
        4035
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1964": {
      "fn": "Cage.buyIn",
      "offset": [
        3990,
        4035
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1965": {
      "fn": "Cage.buyIn",
      "offset": [
        3990,
        4035
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1966": {
      "fn": "Cage.buyIn",
      "offset": [
        3990,
        4035
      ],
      "op": "POP",
      "path": "5"
    },
    "1967": {
      "fn": "Cage.buyIn",
      "offset": [
        3990,
        4035
      ],
      "op": "GAS",
      "path": "5"
    },
    "1968": {
      "fn": "Cage.buyIn",
      "offset": [
        3990,
        4035
      ],
      "op": "CALL",
      "path": "5"
    },
    "1969": {
      "fn": "Cage.buyIn",
      "offset": [
        3990,
        4035
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1970": {
      "fn": "Cage.buyIn",
      "offset": [
        3990,
        4035
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1971": {
      "fn": "Cage.buyIn",
      "offset": [
        3990,
        4035
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1972": {
      "fn": "Cage.buyIn",
      "offset": [
        3990,
        4035
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x7C1"
    },
    "1975": {
      "fn": "Cage.buyIn",
      "offset": [
        3990,
        4035
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1976": {
      "fn": "Cage.buyIn",
      "offset": [
        3990,
        4035
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "1977": {
      "fn": "Cage.buyIn",
      "offset": [
        3990,
        4035
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1979": {
      "fn": "Cage.buyIn",
      "offset": [
        3990,
        4035
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1980": {
      "fn": "Cage.buyIn",
      "offset": [
        3990,
        4035
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "1981": {
      "fn": "Cage.buyIn",
      "offset": [
        3990,
        4035
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "1982": {
      "fn": "Cage.buyIn",
      "offset": [
        3990,
        4035
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1984": {
      "fn": "Cage.buyIn",
      "offset": [
        3990,
        4035
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1985": {
      "fn": "Cage.buyIn",
      "offset": [
        3990,
        4035
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1986": {
      "fn": "Cage.buyIn",
      "offset": [
        3990,
        4035
      ],
      "op": "POP",
      "path": "5"
    },
    "1987": {
      "fn": "Cage.buyIn",
      "offset": [
        3990,
        4035
      ],
      "op": "POP",
      "path": "5"
    },
    "1988": {
      "fn": "Cage.buyIn",
      "offset": [
        3990,
        4035
      ],
      "op": "POP",
      "path": "5"
    },
    "1989": {
      "fn": "Cage.buyIn",
      "offset": [
        3990,
        4035
      ],
      "op": "POP",
      "path": "5"
    },
    "1990": {
      "fn": "Cage.buyIn",
      "jump": "o",
      "offset": [
        3780,
        4040
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1991": {
      "fn": "Cage.cashOut",
      "offset": [
        4044,
        4445
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1992": {
      "fn": "Cage.cashOut",
      "offset": [
        4099,
        4110
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 19,
      "value": "0x2"
    },
    "1994": {
      "fn": "Cage.cashOut",
      "offset": [
        4099,
        4110
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1995": {
      "fn": "Cage.cashOut",
      "offset": [
        4099,
        4132
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1997": {
      "fn": "Cage.cashOut",
      "offset": [
        4099,
        4132
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1998": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2003": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2005": {
      "op": "SHL"
    },
    "2006": {
      "fn": "Cage.cashOut",
      "offset": [
        4099,
        4132
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2007": {
      "fn": "Cage.cashOut",
      "offset": [
        4099,
        4132
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2008": {
      "fn": "Cage.cashOut",
      "offset": [
        4121,
        4131
      ],
      "op": "CALLER",
      "path": "5"
    },
    "2009": {
      "fn": "Cage.cashOut",
      "offset": [
        4099,
        4132
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2011": {
      "fn": "Cage.cashOut",
      "offset": [
        4099,
        4132
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2012": {
      "fn": "Cage.cashOut",
      "offset": [
        4099,
        4132
      ],
      "op": "ADD",
      "path": "5"
    },
    "2013": {
      "op": "MSTORE"
    },
    "2014": {
      "fn": "Cage.cashOut",
      "offset": [
        4136,
        4143
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2015": {
      "fn": "Cage.cashOut",
      "offset": [
        4136,
        4143
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2016": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2018": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2020": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2022": {
      "op": "SHL"
    },
    "2023": {
      "op": "SUB"
    },
    "2024": {
      "fn": "Cage.cashOut",
      "offset": [
        4099,
        4110
      ],
      "op": "AND",
      "path": "5"
    },
    "2025": {
      "fn": "Cage.cashOut",
      "offset": [
        4099,
        4110
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2026": {
      "fn": "Cage.cashOut",
      "offset": [
        4099,
        4120
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x70A08231"
    },
    "2031": {
      "fn": "Cage.cashOut",
      "offset": [
        4099,
        4120
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2032": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2034": {
      "op": "ADD"
    },
    "2035": {
      "fn": "Cage.cashOut",
      "offset": [
        4099,
        4132
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2037": {
      "fn": "Cage.cashOut",
      "offset": [
        4099,
        4132
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2039": {
      "fn": "Cage.cashOut",
      "offset": [
        4099,
        4132
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2040": {
      "fn": "Cage.cashOut",
      "offset": [
        4099,
        4132
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2041": {
      "fn": "Cage.cashOut",
      "offset": [
        4099,
        4132
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2042": {
      "fn": "Cage.cashOut",
      "offset": [
        4099,
        4132
      ],
      "op": "SUB",
      "path": "5"
    },
    "2043": {
      "fn": "Cage.cashOut",
      "offset": [
        4099,
        4132
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2044": {
      "fn": "Cage.cashOut",
      "offset": [
        4099,
        4132
      ],
      "op": "DUP7",
      "path": "5"
    },
    "2045": {
      "fn": "Cage.cashOut",
      "offset": [
        4099,
        4132
      ],
      "op": "GAS",
      "path": "5"
    },
    "2046": {
      "fn": "Cage.cashOut",
      "offset": [
        4099,
        4132
      ],
      "op": "STATICCALL",
      "path": "5"
    },
    "2047": {
      "fn": "Cage.cashOut",
      "offset": [
        4099,
        4132
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2048": {
      "fn": "Cage.cashOut",
      "offset": [
        4099,
        4132
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2049": {
      "fn": "Cage.cashOut",
      "offset": [
        4099,
        4132
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2050": {
      "fn": "Cage.cashOut",
      "offset": [
        4099,
        4132
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x80F"
    },
    "2053": {
      "fn": "Cage.cashOut",
      "offset": [
        4099,
        4132
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2054": {
      "fn": "Cage.cashOut",
      "offset": [
        4099,
        4132
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "2055": {
      "fn": "Cage.cashOut",
      "offset": [
        4099,
        4132
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2057": {
      "fn": "Cage.cashOut",
      "offset": [
        4099,
        4132
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2058": {
      "fn": "Cage.cashOut",
      "offset": [
        4099,
        4132
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "2059": {
      "fn": "Cage.cashOut",
      "offset": [
        4099,
        4132
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "2060": {
      "fn": "Cage.cashOut",
      "offset": [
        4099,
        4132
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2062": {
      "fn": "Cage.cashOut",
      "offset": [
        4099,
        4132
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2063": {
      "fn": "Cage.cashOut",
      "offset": [
        4099,
        4132
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2064": {
      "fn": "Cage.cashOut",
      "offset": [
        4099,
        4132
      ],
      "op": "POP",
      "path": "5"
    },
    "2065": {
      "fn": "Cage.cashOut",
      "offset": [
        4099,
        4132
      ],
      "op": "POP",
      "path": "5"
    },
    "2066": {
      "fn": "Cage.cashOut",
      "offset": [
        4099,
        4132
      ],
      "op": "POP",
      "path": "5"
    },
    "2067": {
      "fn": "Cage.cashOut",
      "offset": [
        4099,
        4132
      ],
      "op": "POP",
      "path": "5"
    },
    "2068": {
      "fn": "Cage.cashOut",
      "offset": [
        4099,
        4132
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2070": {
      "fn": "Cage.cashOut",
      "offset": [
        4099,
        4132
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2071": {
      "fn": "Cage.cashOut",
      "offset": [
        4099,
        4132
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "2072": {
      "fn": "Cage.cashOut",
      "offset": [
        4099,
        4132
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "2074": {
      "fn": "Cage.cashOut",
      "offset": [
        4099,
        4132
      ],
      "op": "NOT",
      "path": "5"
    },
    "2075": {
      "fn": "Cage.cashOut",
      "offset": [
        4099,
        4132
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1F"
    },
    "2077": {
      "fn": "Cage.cashOut",
      "offset": [
        4099,
        4132
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2078": {
      "fn": "Cage.cashOut",
      "offset": [
        4099,
        4132
      ],
      "op": "ADD",
      "path": "5"
    },
    "2079": {
      "fn": "Cage.cashOut",
      "offset": [
        4099,
        4132
      ],
      "op": "AND",
      "path": "5"
    },
    "2080": {
      "fn": "Cage.cashOut",
      "offset": [
        4099,
        4132
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2081": {
      "fn": "Cage.cashOut",
      "offset": [
        4099,
        4132
      ],
      "op": "ADD",
      "path": "5"
    },
    "2082": {
      "fn": "Cage.cashOut",
      "offset": [
        4099,
        4132
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2083": {
      "fn": "Cage.cashOut",
      "offset": [
        4099,
        4132
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2085": {
      "fn": "Cage.cashOut",
      "offset": [
        4099,
        4132
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2086": {
      "fn": "Cage.cashOut",
      "offset": [
        4099,
        4132
      ],
      "op": "POP",
      "path": "5"
    },
    "2087": {
      "fn": "Cage.cashOut",
      "offset": [
        4099,
        4132
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2088": {
      "fn": "Cage.cashOut",
      "offset": [
        4099,
        4132
      ],
      "op": "ADD",
      "path": "5"
    },
    "2089": {
      "fn": "Cage.cashOut",
      "offset": [
        4099,
        4132
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2090": {
      "fn": "Cage.cashOut",
      "offset": [
        4099,
        4132
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x833"
    },
    "2093": {
      "fn": "Cage.cashOut",
      "offset": [
        4099,
        4132
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2094": {
      "fn": "Cage.cashOut",
      "offset": [
        4099,
        4132
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2095": {
      "fn": "Cage.cashOut",
      "offset": [
        4099,
        4132
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xEB4"
    },
    "2098": {
      "fn": "Cage.cashOut",
      "jump": "i",
      "offset": [
        4099,
        4132
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2099": {
      "fn": "Cage.cashOut",
      "offset": [
        4099,
        4132
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2100": {
      "fn": "Cage.cashOut",
      "offset": [
        4099,
        4143
      ],
      "op": "LT",
      "path": "5"
    },
    "2101": {
      "branch": 39,
      "fn": "Cage.cashOut",
      "offset": [
        4099,
        4143
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2102": {
      "fn": "Cage.cashOut",
      "offset": [
        4091,
        4208
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8A7"
    },
    "2105": {
      "branch": 39,
      "fn": "Cage.cashOut",
      "offset": [
        4091,
        4208
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2106": {
      "fn": "Cage.cashOut",
      "offset": [
        4091,
        4208
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2108": {
      "fn": "Cage.cashOut",
      "offset": [
        4091,
        4208
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2109": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2113": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2115": {
      "op": "SHL"
    },
    "2116": {
      "fn": "Cage.cashOut",
      "offset": [
        4091,
        4208
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2117": {
      "fn": "Cage.cashOut",
      "offset": [
        4091,
        4208
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2118": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2120": {
      "fn": "Cage.cashOut",
      "offset": [
        4091,
        4208
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2122": {
      "fn": "Cage.cashOut",
      "offset": [
        4091,
        4208
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2123": {
      "fn": "Cage.cashOut",
      "offset": [
        4091,
        4208
      ],
      "op": "ADD",
      "path": "5"
    },
    "2124": {
      "op": "MSTORE"
    },
    "2125": {
      "op": "PUSH1",
      "value": "0x3C"
    },
    "2127": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2129": {
      "op": "DUP3"
    },
    "2130": {
      "op": "ADD"
    },
    "2131": {
      "op": "MSTORE"
    },
    "2132": {
      "op": "PUSH32",
      "value": "0x596F75206D69676874206E65656420746F2070757420697420616C6C206F6E20"
    },
    "2165": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2167": {
      "op": "DUP3"
    },
    "2168": {
      "op": "ADD"
    },
    "2169": {
      "op": "MSTORE"
    },
    "2170": {
      "op": "PUSH32",
      "value": "0x72656420746F2063617368206F7574207468617420616D6F756E742E00000000"
    },
    "2203": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2205": {
      "op": "DUP3"
    },
    "2206": {
      "op": "ADD"
    },
    "2207": {
      "op": "MSTORE"
    },
    "2208": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2210": {
      "op": "ADD"
    },
    "2211": {
      "fn": "Cage.cashOut",
      "offset": [
        4091,
        4208
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2B0"
    },
    "2214": {
      "op": "JUMP"
    },
    "2215": {
      "fn": "Cage.cashOut",
      "offset": [
        4091,
        4208
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2216": {
      "fn": "Cage.cashOut",
      "offset": [
        4214,
        4235
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2218": {
      "fn": "Cage.cashOut",
      "offset": [
        4238,
        4250
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8B5"
    },
    "2221": {
      "fn": "Cage.cashOut",
      "offset": [
        4246,
        4250
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3E8"
    },
    "2224": {
      "fn": "Cage.cashOut",
      "offset": [
        4238,
        4245
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2225": {
      "fn": "Cage.cashOut",
      "offset": [
        4238,
        4250
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xECD"
    },
    "2228": {
      "fn": "Cage.cashOut",
      "jump": "i",
      "offset": [
        4238,
        4250
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2229": {
      "fn": "Cage.cashOut",
      "offset": [
        4238,
        4250
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2230": {
      "fn": "Cage.cashOut",
      "offset": [
        4283,
        4326
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 20,
      "value": "0x40"
    },
    "2232": {
      "fn": "Cage.cashOut",
      "offset": [
        4283,
        4326
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2233": {
      "fn": "Cage.cashOut",
      "offset": [
        4214,
        4250
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2234": {
      "fn": "Cage.cashOut",
      "offset": [
        4214,
        4250
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2235": {
      "op": "POP"
    },
    "2236": {
      "fn": "Cage.cashOut",
      "offset": [
        4291,
        4301
      ],
      "op": "CALLER",
      "path": "5"
    },
    "2237": {
      "fn": "Cage.cashOut",
      "offset": [
        4291,
        4301
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2238": {
      "fn": "Cage.cashOut",
      "offset": [
        4283,
        4326
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2239": {
      "fn": "Cage.cashOut",
      "offset": [
        4283,
        4326
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2240": {
      "fn": "Cage.cashOut",
      "offset": [
        4283,
        4326
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8FC"
    },
    "2243": {
      "fn": "Cage.cashOut",
      "offset": [
        4283,
        4326
      ],
      "op": "MUL",
      "path": "5"
    },
    "2244": {
      "fn": "Cage.cashOut",
      "offset": [
        4283,
        4326
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2245": {
      "fn": "Cage.cashOut",
      "offset": [
        4214,
        4250
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2246": {
      "fn": "Cage.cashOut",
      "offset": [
        4214,
        4250
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2247": {
      "fn": "Cage.cashOut",
      "offset": [
        4283,
        4326
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2249": {
      "fn": "Cage.cashOut",
      "offset": [
        4283,
        4326
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2250": {
      "fn": "Cage.cashOut",
      "offset": [
        4283,
        4326
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2251": {
      "fn": "Cage.cashOut",
      "offset": [
        4283,
        4326
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2252": {
      "fn": "Cage.cashOut",
      "offset": [
        4214,
        4250
      ],
      "op": "DUP6",
      "path": "5"
    },
    "2253": {
      "fn": "Cage.cashOut",
      "offset": [
        4291,
        4301
      ],
      "op": "DUP9",
      "path": "5"
    },
    "2254": {
      "fn": "Cage.cashOut",
      "offset": [
        4283,
        4326
      ],
      "op": "DUP9",
      "path": "5"
    },
    "2255": {
      "fn": "Cage.cashOut",
      "offset": [
        4283,
        4326
      ],
      "op": "CALL",
      "path": "5"
    },
    "2256": {
      "fn": "Cage.cashOut",
      "offset": [
        4283,
        4326
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "2257": {
      "fn": "Cage.cashOut",
      "offset": [
        4283,
        4326
      ],
      "op": "POP",
      "path": "5"
    },
    "2258": {
      "fn": "Cage.cashOut",
      "offset": [
        4283,
        4326
      ],
      "op": "POP",
      "path": "5"
    },
    "2259": {
      "fn": "Cage.cashOut",
      "offset": [
        4283,
        4326
      ],
      "op": "POP",
      "path": "5"
    },
    "2260": {
      "fn": "Cage.cashOut",
      "offset": [
        4283,
        4326
      ],
      "op": "POP",
      "path": "5"
    },
    "2261": {
      "fn": "Cage.cashOut",
      "offset": [
        4283,
        4326
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2262": {
      "fn": "Cage.cashOut",
      "offset": [
        4283,
        4326
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2263": {
      "fn": "Cage.cashOut",
      "offset": [
        4283,
        4326
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2264": {
      "fn": "Cage.cashOut",
      "offset": [
        4283,
        4326
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8E5"
    },
    "2267": {
      "fn": "Cage.cashOut",
      "offset": [
        4283,
        4326
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2268": {
      "fn": "Cage.cashOut",
      "offset": [
        4283,
        4326
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "2269": {
      "fn": "Cage.cashOut",
      "offset": [
        4283,
        4326
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2271": {
      "fn": "Cage.cashOut",
      "offset": [
        4283,
        4326
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2272": {
      "fn": "Cage.cashOut",
      "offset": [
        4283,
        4326
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "2273": {
      "fn": "Cage.cashOut",
      "offset": [
        4283,
        4326
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "2274": {
      "fn": "Cage.cashOut",
      "offset": [
        4283,
        4326
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2276": {
      "fn": "Cage.cashOut",
      "offset": [
        4283,
        4326
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2277": {
      "fn": "Cage.cashOut",
      "offset": [
        4283,
        4326
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2278": {
      "op": "POP"
    },
    "2279": {
      "fn": "Cage.cashOut",
      "offset": [
        4359,
        4370
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 21,
      "value": "0x2"
    },
    "2281": {
      "fn": "Cage.cashOut",
      "offset": [
        4359,
        4370
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2282": {
      "fn": "Cage.cashOut",
      "offset": [
        4359,
        4395
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2284": {
      "fn": "Cage.cashOut",
      "offset": [
        4359,
        4395
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2285": {
      "op": "PUSH4",
      "value": "0x2770A7EB"
    },
    "2290": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "2292": {
      "op": "SHL"
    },
    "2293": {
      "fn": "Cage.cashOut",
      "offset": [
        4359,
        4395
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2294": {
      "fn": "Cage.cashOut",
      "offset": [
        4359,
        4395
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2295": {
      "fn": "Cage.cashOut",
      "offset": [
        4376,
        4386
      ],
      "op": "CALLER",
      "path": "5"
    },
    "2296": {
      "fn": "Cage.cashOut",
      "offset": [
        4359,
        4395
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2298": {
      "fn": "Cage.cashOut",
      "offset": [
        4359,
        4395
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2299": {
      "fn": "Cage.cashOut",
      "offset": [
        4359,
        4395
      ],
      "op": "ADD",
      "path": "5"
    },
    "2300": {
      "op": "MSTORE"
    },
    "2301": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2303": {
      "op": "DUP2"
    },
    "2304": {
      "op": "ADD"
    },
    "2305": {
      "op": "DUP5"
    },
    "2306": {
      "op": "SWAP1"
    },
    "2307": {
      "op": "MSTORE"
    },
    "2308": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2310": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2312": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2314": {
      "op": "SHL"
    },
    "2315": {
      "op": "SUB"
    },
    "2316": {
      "fn": "Cage.cashOut",
      "offset": [
        4359,
        4370
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2317": {
      "fn": "Cage.cashOut",
      "offset": [
        4359,
        4370
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2318": {
      "fn": "Cage.cashOut",
      "offset": [
        4359,
        4370
      ],
      "op": "AND",
      "path": "5"
    },
    "2319": {
      "fn": "Cage.cashOut",
      "offset": [
        4359,
        4370
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2320": {
      "fn": "Cage.cashOut",
      "offset": [
        4359,
        4375
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x9DC29FAC"
    },
    "2325": {
      "fn": "Cage.cashOut",
      "offset": [
        4359,
        4375
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2326": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2328": {
      "op": "ADD"
    },
    "2329": {
      "fn": "Cage.cashOut",
      "offset": [
        4359,
        4395
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2331": {
      "fn": "Cage.cashOut",
      "offset": [
        4359,
        4395
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2333": {
      "fn": "Cage.cashOut",
      "offset": [
        4359,
        4395
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2334": {
      "fn": "Cage.cashOut",
      "offset": [
        4359,
        4395
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2335": {
      "fn": "Cage.cashOut",
      "offset": [
        4359,
        4395
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2336": {
      "fn": "Cage.cashOut",
      "offset": [
        4359,
        4395
      ],
      "op": "SUB",
      "path": "5"
    },
    "2337": {
      "fn": "Cage.cashOut",
      "offset": [
        4359,
        4395
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2338": {
      "fn": "Cage.cashOut",
      "offset": [
        4359,
        4395
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2340": {
      "fn": "Cage.cashOut",
      "offset": [
        4359,
        4395
      ],
      "op": "DUP8",
      "path": "5"
    },
    "2341": {
      "fn": "Cage.cashOut",
      "offset": [
        4359,
        4395
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2342": {
      "fn": "Cage.cashOut",
      "offset": [
        4359,
        4395
      ],
      "op": "EXTCODESIZE",
      "path": "5"
    },
    "2343": {
      "fn": "Cage.cashOut",
      "offset": [
        4359,
        4395
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2344": {
      "fn": "Cage.cashOut",
      "offset": [
        4359,
        4395
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2345": {
      "fn": "Cage.cashOut",
      "offset": [
        4359,
        4395
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2346": {
      "fn": "Cage.cashOut",
      "offset": [
        4359,
        4395
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x932"
    },
    "2349": {
      "fn": "Cage.cashOut",
      "offset": [
        4359,
        4395
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2350": {
      "fn": "Cage.cashOut",
      "offset": [
        4359,
        4395
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2352": {
      "fn": "Cage.cashOut",
      "offset": [
        4359,
        4395
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2353": {
      "fn": "Cage.cashOut",
      "offset": [
        4359,
        4395
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2354": {
      "fn": "Cage.cashOut",
      "offset": [
        4359,
        4395
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2355": {
      "fn": "Cage.cashOut",
      "offset": [
        4359,
        4395
      ],
      "op": "POP",
      "path": "5"
    },
    "2356": {
      "fn": "Cage.cashOut",
      "offset": [
        4359,
        4395
      ],
      "op": "GAS",
      "path": "5"
    },
    "2357": {
      "fn": "Cage.cashOut",
      "offset": [
        4359,
        4395
      ],
      "op": "CALL",
      "path": "5"
    },
    "2358": {
      "fn": "Cage.cashOut",
      "offset": [
        4359,
        4395
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2359": {
      "fn": "Cage.cashOut",
      "offset": [
        4359,
        4395
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2360": {
      "fn": "Cage.cashOut",
      "offset": [
        4359,
        4395
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2361": {
      "fn": "Cage.cashOut",
      "offset": [
        4359,
        4395
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x946"
    },
    "2364": {
      "fn": "Cage.cashOut",
      "offset": [
        4359,
        4395
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2365": {
      "fn": "Cage.cashOut",
      "offset": [
        4359,
        4395
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "2366": {
      "fn": "Cage.cashOut",
      "offset": [
        4359,
        4395
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2368": {
      "fn": "Cage.cashOut",
      "offset": [
        4359,
        4395
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2369": {
      "fn": "Cage.cashOut",
      "offset": [
        4359,
        4395
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "2370": {
      "fn": "Cage.cashOut",
      "offset": [
        4359,
        4395
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "2371": {
      "fn": "Cage.cashOut",
      "offset": [
        4359,
        4395
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2373": {
      "fn": "Cage.cashOut",
      "offset": [
        4359,
        4395
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2374": {
      "fn": "Cage.cashOut",
      "offset": [
        4359,
        4395
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2375": {
      "op": "POP"
    },
    "2376": {
      "op": "POP"
    },
    "2377": {
      "fn": "Cage.cashOut",
      "offset": [
        4406,
        4440
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 22,
      "value": "0x40"
    },
    "2379": {
      "fn": "Cage.cashOut",
      "offset": [
        4406,
        4440
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2380": {
      "op": "DUP4"
    },
    "2381": {
      "op": "DUP2"
    },
    "2382": {
      "op": "MSTORE"
    },
    "2383": {
      "fn": "Cage.cashOut",
      "offset": [
        4414,
        4424
      ],
      "op": "CALLER",
      "path": "5"
    },
    "2384": {
      "fn": "Cage.cashOut",
      "offset": [
        4414,
        4424
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2385": {
      "op": "POP"
    },
    "2386": {
      "fn": "Cage.cashOut",
      "offset": [
        4406,
        4440
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0xAB933177D8753A66DD869151CF9AA88649E067B7A4E2DAD9D5D192D61CF593B0"
    },
    "2419": {
      "fn": "Cage.cashOut",
      "offset": [
        4406,
        4440
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2420": {
      "op": "POP"
    },
    "2421": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2423": {
      "op": "ADD"
    },
    "2424": {
      "fn": "Cage.cashOut",
      "offset": [
        4406,
        4440
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2426": {
      "fn": "Cage.cashOut",
      "offset": [
        4406,
        4440
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2427": {
      "fn": "Cage.cashOut",
      "offset": [
        4406,
        4440
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2428": {
      "fn": "Cage.cashOut",
      "offset": [
        4406,
        4440
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2429": {
      "fn": "Cage.cashOut",
      "offset": [
        4406,
        4440
      ],
      "op": "SUB",
      "path": "5"
    },
    "2430": {
      "fn": "Cage.cashOut",
      "offset": [
        4406,
        4440
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2431": {
      "fn": "Cage.cashOut",
      "offset": [
        4406,
        4440
      ],
      "op": "LOG2",
      "path": "5"
    },
    "2432": {
      "fn": "Cage.cashOut",
      "offset": [
        4085,
        4445
      ],
      "op": "POP",
      "path": "5"
    },
    "2433": {
      "fn": "Cage.cashOut",
      "offset": [
        4044,
        4445
      ],
      "op": "POP",
      "path": "5"
    },
    "2434": {
      "fn": "Cage.cashOut",
      "jump": "o",
      "offset": [
        4044,
        4445
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2435": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2436": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2438": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2441": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2443": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2445": {
      "op": "SHL"
    },
    "2446": {
      "op": "SUB"
    },
    "2447": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "2448": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4",
      "statement": 23
    },
    "2449": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "2450": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9DD"
    },
    "2453": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2454": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2456": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2457": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2461": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2463": {
      "op": "SHL"
    },
    "2464": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2465": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2466": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2468": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2470": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2471": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "2472": {
      "op": "DUP2"
    },
    "2473": {
      "op": "SWAP1"
    },
    "2474": {
      "op": "MSTORE"
    },
    "2475": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2477": {
      "op": "DUP3"
    },
    "2478": {
      "op": "ADD"
    },
    "2479": {
      "op": "MSTORE"
    },
    "2480": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "2513": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2515": {
      "op": "DUP3"
    },
    "2516": {
      "op": "ADD"
    },
    "2517": {
      "op": "MSTORE"
    },
    "2518": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2520": {
      "op": "ADD"
    },
    "2521": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B0"
    },
    "2524": {
      "op": "JUMP"
    },
    "2525": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2526": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 24,
      "value": "0x9E7"
    },
    "2529": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2531": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBF8"
    },
    "2534": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2535": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2536": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2537": {
      "fn": "Cage.claimReward",
      "offset": [
        2650,
        2791
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2538": {
      "offset": [
        4699,
        4709
      ],
      "op": "CALLER",
      "path": "5"
    },
    "2539": {
      "offset": [
        4691,
        4710
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2541": {
      "fn": "Cage.claimReward",
      "offset": [
        4691,
        4710
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2542": {
      "fn": "Cage.claimReward",
      "offset": [
        4691,
        4710
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2543": {
      "fn": "Cage.claimReward",
      "offset": [
        4691,
        4710
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2544": {
      "offset": [
        4691,
        4698
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "2546": {
      "offset": [
        4691,
        4710
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2548": {
      "fn": "Cage.claimReward",
      "offset": [
        4691,
        4710
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2549": {
      "fn": "Cage.claimReward",
      "offset": [
        4691,
        4710
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2551": {
      "fn": "Cage.claimReward",
      "offset": [
        4691,
        4710
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2552": {
      "fn": "Cage.claimReward",
      "offset": [
        4691,
        4710
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2553": {
      "fn": "Cage.claimReward",
      "offset": [
        4691,
        4710
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2554": {
      "fn": "Cage.claimReward",
      "offset": [
        4691,
        4710
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "2556": {
      "branch": 40,
      "fn": "Cage.claimReward",
      "offset": [
        4691,
        4710
      ],
      "op": "AND",
      "path": "5"
    },
    "2557": {
      "offset": [
        4683,
        4743
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA48"
    },
    "2560": {
      "branch": 40,
      "offset": [
        4683,
        4743
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2561": {
      "fn": "Cage.claimReward",
      "offset": [
        4683,
        4743
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2563": {
      "fn": "Cage.claimReward",
      "offset": [
        4683,
        4743
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2564": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2568": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2570": {
      "op": "SHL"
    },
    "2571": {
      "offset": [
        4683,
        4743
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2572": {
      "fn": "Cage.claimReward",
      "offset": [
        4683,
        4743
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2573": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2575": {
      "offset": [
        4683,
        4743
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2577": {
      "fn": "Cage.claimReward",
      "offset": [
        4683,
        4743
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2578": {
      "fn": "Cage.claimReward",
      "offset": [
        4683,
        4743
      ],
      "op": "ADD",
      "path": "5"
    },
    "2579": {
      "op": "MSTORE"
    },
    "2580": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "2582": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2584": {
      "op": "DUP3"
    },
    "2585": {
      "op": "ADD"
    },
    "2586": {
      "op": "MSTORE"
    },
    "2587": {
      "op": "PUSH32",
      "value": "0x596F752068617665206E6F74207374616B656420616E79204554482E00000000"
    },
    "2620": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2622": {
      "op": "DUP3"
    },
    "2623": {
      "op": "ADD"
    },
    "2624": {
      "op": "MSTORE"
    },
    "2625": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2627": {
      "op": "ADD"
    },
    "2628": {
      "offset": [
        4683,
        4743
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2B0"
    },
    "2631": {
      "op": "JUMP"
    },
    "2632": {
      "offset": [
        4683,
        4743
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2633": {
      "fn": "Cage.claimReward",
      "offset": [
        2698,
        2718
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2635": {
      "fn": "Cage.claimReward",
      "offset": [
        2721,
        2738
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA52"
    },
    "2638": {
      "fn": "Cage.claimReward",
      "offset": [
        2721,
        2736
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC48"
    },
    "2641": {
      "fn": "Cage.claimReward",
      "jump": "i",
      "offset": [
        2721,
        2738
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2642": {
      "fn": "Cage.claimReward",
      "offset": [
        2721,
        2738
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2643": {
      "fn": "Cage.claimReward",
      "offset": [
        2744,
        2755
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 25,
      "value": "0x2"
    },
    "2645": {
      "fn": "Cage.claimReward",
      "offset": [
        2744,
        2755
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2646": {
      "fn": "Cage.claimReward",
      "offset": [
        2744,
        2786
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2648": {
      "fn": "Cage.claimReward",
      "offset": [
        2744,
        2786
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2649": {
      "op": "PUSH4",
      "value": "0x40C10F19"
    },
    "2654": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2656": {
      "op": "SHL"
    },
    "2657": {
      "fn": "Cage.claimReward",
      "offset": [
        2744,
        2786
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2658": {
      "fn": "Cage.claimReward",
      "offset": [
        2744,
        2786
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2659": {
      "fn": "Cage.claimReward",
      "offset": [
        2761,
        2771
      ],
      "op": "CALLER",
      "path": "5"
    },
    "2660": {
      "fn": "Cage.claimReward",
      "offset": [
        2744,
        2786
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2662": {
      "fn": "Cage.claimReward",
      "offset": [
        2744,
        2786
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2663": {
      "fn": "Cage.claimReward",
      "offset": [
        2744,
        2786
      ],
      "op": "ADD",
      "path": "5"
    },
    "2664": {
      "op": "MSTORE"
    },
    "2665": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2667": {
      "op": "DUP2"
    },
    "2668": {
      "op": "ADD"
    },
    "2669": {
      "op": "DUP4"
    },
    "2670": {
      "op": "SWAP1"
    },
    "2671": {
      "op": "MSTORE"
    },
    "2672": {
      "fn": "Cage.claimReward",
      "offset": [
        2698,
        2738
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2673": {
      "fn": "Cage.claimReward",
      "offset": [
        2698,
        2738
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "2674": {
      "op": "POP"
    },
    "2675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2677": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2679": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2681": {
      "op": "SHL"
    },
    "2682": {
      "op": "SUB"
    },
    "2683": {
      "fn": "Cage.claimReward",
      "offset": [
        2744,
        2755
      ],
      "op": "AND",
      "path": "5"
    },
    "2684": {
      "fn": "Cage.claimReward",
      "offset": [
        2744,
        2755
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2685": {
      "fn": "Cage.claimReward",
      "offset": [
        2744,
        2760
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x40C10F19"
    },
    "2690": {
      "fn": "Cage.claimReward",
      "offset": [
        2744,
        2760
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2691": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2693": {
      "op": "ADD"
    },
    "2694": {
      "fn": "Cage.claimReward",
      "offset": [
        2744,
        2786
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2696": {
      "fn": "Cage.claimReward",
      "offset": [
        2744,
        2786
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2698": {
      "fn": "Cage.claimReward",
      "offset": [
        2744,
        2786
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2699": {
      "fn": "Cage.claimReward",
      "offset": [
        2744,
        2786
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2700": {
      "fn": "Cage.claimReward",
      "offset": [
        2744,
        2786
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2701": {
      "fn": "Cage.claimReward",
      "offset": [
        2744,
        2786
      ],
      "op": "SUB",
      "path": "5"
    },
    "2702": {
      "fn": "Cage.claimReward",
      "offset": [
        2744,
        2786
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2703": {
      "fn": "Cage.claimReward",
      "offset": [
        2744,
        2786
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2705": {
      "fn": "Cage.claimReward",
      "offset": [
        2744,
        2786
      ],
      "op": "DUP8",
      "path": "5"
    },
    "2706": {
      "fn": "Cage.claimReward",
      "offset": [
        2744,
        2786
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2707": {
      "fn": "Cage.claimReward",
      "offset": [
        2744,
        2786
      ],
      "op": "EXTCODESIZE",
      "path": "5"
    },
    "2708": {
      "fn": "Cage.claimReward",
      "offset": [
        2744,
        2786
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2709": {
      "fn": "Cage.claimReward",
      "offset": [
        2744,
        2786
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2710": {
      "fn": "Cage.claimReward",
      "offset": [
        2744,
        2786
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2711": {
      "fn": "Cage.claimReward",
      "offset": [
        2744,
        2786
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA9F"
    },
    "2714": {
      "fn": "Cage.claimReward",
      "offset": [
        2744,
        2786
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2715": {
      "fn": "Cage.claimReward",
      "offset": [
        2744,
        2786
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2717": {
      "fn": "Cage.claimReward",
      "offset": [
        2744,
        2786
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2718": {
      "fn": "Cage.claimReward",
      "offset": [
        2744,
        2786
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2719": {
      "fn": "Cage.claimReward",
      "offset": [
        2744,
        2786
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2720": {
      "fn": "Cage.claimReward",
      "offset": [
        2744,
        2786
      ],
      "op": "POP",
      "path": "5"
    },
    "2721": {
      "fn": "Cage.claimReward",
      "offset": [
        2744,
        2786
      ],
      "op": "GAS",
      "path": "5"
    },
    "2722": {
      "fn": "Cage.claimReward",
      "offset": [
        2744,
        2786
      ],
      "op": "CALL",
      "path": "5"
    },
    "2723": {
      "fn": "Cage.claimReward",
      "offset": [
        2744,
        2786
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2724": {
      "fn": "Cage.claimReward",
      "offset": [
        2744,
        2786
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2725": {
      "fn": "Cage.claimReward",
      "offset": [
        2744,
        2786
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2726": {
      "fn": "Cage.claimReward",
      "offset": [
        2744,
        2786
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAB3"
    },
    "2729": {
      "fn": "Cage.claimReward",
      "offset": [
        2744,
        2786
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2730": {
      "fn": "Cage.claimReward",
      "offset": [
        2744,
        2786
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "2731": {
      "fn": "Cage.claimReward",
      "offset": [
        2744,
        2786
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2733": {
      "fn": "Cage.claimReward",
      "offset": [
        2744,
        2786
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2734": {
      "fn": "Cage.claimReward",
      "offset": [
        2744,
        2786
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "2735": {
      "fn": "Cage.claimReward",
      "offset": [
        2744,
        2786
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "2736": {
      "fn": "Cage.claimReward",
      "offset": [
        2744,
        2786
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2738": {
      "fn": "Cage.claimReward",
      "offset": [
        2744,
        2786
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2739": {
      "fn": "Cage.claimReward",
      "offset": [
        2744,
        2786
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2740": {
      "fn": "Cage.claimReward",
      "offset": [
        2744,
        2786
      ],
      "op": "POP",
      "path": "5"
    },
    "2741": {
      "fn": "Cage.claimReward",
      "offset": [
        2744,
        2786
      ],
      "op": "POP",
      "path": "5"
    },
    "2742": {
      "fn": "Cage.claimReward",
      "offset": [
        2744,
        2786
      ],
      "op": "POP",
      "path": "5"
    },
    "2743": {
      "fn": "Cage.claimReward",
      "offset": [
        2744,
        2786
      ],
      "op": "POP",
      "path": "5"
    },
    "2744": {
      "fn": "Cage.claimReward",
      "offset": [
        2692,
        2791
      ],
      "op": "POP",
      "path": "5"
    },
    "2745": {
      "fn": "Cage.claimReward",
      "jump": "o",
      "offset": [
        2650,
        2791
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2746": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2747": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2749": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2750": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2752": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2754": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2756": {
      "op": "SHL"
    },
    "2757": {
      "op": "SUB"
    },
    "2758": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "2759": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "4"
    },
    "2760": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "2761": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB14"
    },
    "2764": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2765": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2767": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2768": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2772": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2774": {
      "op": "SHL"
    },
    "2775": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2776": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2777": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2779": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2781": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2782": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "2783": {
      "op": "DUP2"
    },
    "2784": {
      "op": "SWAP1"
    },
    "2785": {
      "op": "MSTORE"
    },
    "2786": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2788": {
      "op": "DUP3"
    },
    "2789": {
      "op": "ADD"
    },
    "2790": {
      "op": "MSTORE"
    },
    "2791": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "2824": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2826": {
      "op": "DUP3"
    },
    "2827": {
      "op": "ADD"
    },
    "2828": {
      "op": "MSTORE"
    },
    "2829": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2831": {
      "op": "ADD"
    },
    "2832": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B0"
    },
    "2835": {
      "op": "JUMP"
    },
    "2836": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2839": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2841": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2843": {
      "op": "SHL"
    },
    "2844": {
      "op": "SUB"
    },
    "2845": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 26
    },
    "2846": {
      "branch": 41,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "2847": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB79"
    },
    "2850": {
      "branch": 41,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2851": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2853": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2854": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2858": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2860": {
      "op": "SHL"
    },
    "2861": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2862": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2863": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2865": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2867": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2868": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "2869": {
      "op": "MSTORE"
    },
    "2870": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "2872": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2874": {
      "op": "DUP3"
    },
    "2875": {
      "op": "ADD"
    },
    "2876": {
      "op": "MSTORE"
    },
    "2877": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "2910": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2912": {
      "op": "DUP3"
    },
    "2913": {
      "op": "ADD"
    },
    "2914": {
      "op": "MSTORE"
    },
    "2915": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "2922": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "2924": {
      "op": "SHL"
    },
    "2925": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2927": {
      "op": "DUP3"
    },
    "2928": {
      "op": "ADD"
    },
    "2929": {
      "op": "MSTORE"
    },
    "2930": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2932": {
      "op": "ADD"
    },
    "2933": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B0"
    },
    "2936": {
      "op": "JUMP"
    },
    "2937": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2938": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 27,
      "value": "0xB82"
    },
    "2941": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2942": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBF8"
    },
    "2945": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2946": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2947": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "POP",
      "path": "0"
    },
    "2948": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2949": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3214,
        3353
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2950": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2952": {
      "op": "DUP1"
    },
    "2953": {
      "op": "MLOAD"
    },
    "2954": {
      "op": "DUP1"
    },
    "2955": {
      "op": "DUP3"
    },
    "2956": {
      "op": "ADD"
    },
    "2957": {
      "op": "SWAP1"
    },
    "2958": {
      "op": "SWAP2"
    },
    "2959": {
      "op": "MSTORE"
    },
    "2960": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2962": {
      "op": "DUP1"
    },
    "2963": {
      "op": "DUP3"
    },
    "2964": {
      "op": "MSTORE"
    },
    "2965": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2967": {
      "op": "DUP3"
    },
    "2968": {
      "op": "ADD"
    },
    "2969": {
      "op": "MSTORE"
    },
    "2970": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2972": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2974": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2976": {
      "op": "SHL"
    },
    "2977": {
      "op": "SUB"
    },
    "2978": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3316,
        3340
      ],
      "op": "DUP4",
      "path": "5",
      "statement": 28
    },
    "2979": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3316,
        3340
      ],
      "op": "AND",
      "path": "5"
    },
    "2980": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3316,
        3340
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2982": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3316,
        3340
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2983": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3316,
        3340
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2984": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3316,
        3340
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2985": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3316,
        3330
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2987": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3316,
        3340
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2989": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3316,
        3340
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2990": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3316,
        3340
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2992": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3316,
        3340
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2993": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3316,
        3340
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2994": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3316,
        3348
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2995": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3316,
        3348
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2996": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3341,
        3347
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2997": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3341,
        3347
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2998": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3316,
        3348
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2999": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3316,
        3348
      ],
      "op": "LT",
      "path": "5"
    },
    "3000": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3316,
        3348
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBC3"
    },
    "3003": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3316,
        3348
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3004": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3316,
        3348
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBC3"
    },
    "3007": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3316,
        3348
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE21"
    },
    "3010": {
      "fn": "Cage.getStakeObj",
      "jump": "i",
      "offset": [
        3316,
        3348
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3011": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3316,
        3348
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3012": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3316,
        3348
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3013": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3316,
        3348
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3015": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3316,
        3348
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3016": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3316,
        3348
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3018": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3316,
        3348
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3020": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3316,
        3348
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3021": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3316,
        3348
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3022": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3316,
        3348
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "3024": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3316,
        3348
      ],
      "op": "MUL",
      "path": "5"
    },
    "3025": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3316,
        3348
      ],
      "op": "ADD",
      "path": "5"
    },
    "3026": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3309,
        3348
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3028": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3309,
        3348
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3029": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3309,
        3348
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3030": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3309,
        3348
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3032": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3309,
        3348
      ],
      "op": "ADD",
      "path": "5"
    },
    "3033": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3309,
        3348
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3035": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3309,
        3348
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3036": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3309,
        3348
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3037": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3309,
        3348
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3038": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3309,
        3348
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3040": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3309,
        3348
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3041": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3309,
        3348
      ],
      "op": "ADD",
      "path": "5"
    },
    "3042": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3309,
        3348
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3043": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3309,
        3348
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3044": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3309,
        3348
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3045": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3309,
        3348
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3047": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3309,
        3348
      ],
      "op": "ADD",
      "path": "5"
    },
    "3048": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3309,
        3348
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "3050": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3309,
        3348
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3051": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3309,
        3348
      ],
      "op": "ADD",
      "path": "5"
    },
    "3052": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3309,
        3348
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3053": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3309,
        3348
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3054": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3309,
        3348
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3055": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3309,
        3348
      ],
      "op": "POP",
      "path": "5"
    },
    "3056": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3309,
        3348
      ],
      "op": "POP",
      "path": "5"
    },
    "3057": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3309,
        3348
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3058": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3309,
        3348
      ],
      "op": "POP",
      "path": "5"
    },
    "3059": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3214,
        3353
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3060": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3214,
        3353
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3061": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3214,
        3353
      ],
      "op": "POP",
      "path": "5"
    },
    "3062": {
      "fn": "Cage.getStakeObj",
      "offset": [
        3214,
        3353
      ],
      "op": "POP",
      "path": "5"
    },
    "3063": {
      "fn": "Cage.getStakeObj",
      "jump": "o",
      "offset": [
        3214,
        3353
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3064": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3065": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3067": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3068": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3069": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3071": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3073": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3075": {
      "op": "SHL"
    },
    "3076": {
      "op": "SUB"
    },
    "3077": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 29
    },
    "3078": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3079": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "3080": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3082": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3084": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3086": {
      "op": "SHL"
    },
    "3087": {
      "op": "SUB"
    },
    "3088": {
      "op": "NOT"
    },
    "3089": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3090": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "3091": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3092": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "3093": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP5",
      "path": "0"
    },
    "3094": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3095": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 30,
      "value": "0x40"
    },
    "3097": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3098": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3099": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3100": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3101": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "3102": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "3103": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3104": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3105": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "3138": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3139": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3140": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "3141": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "3142": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "3143": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3144": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3356,
        3776
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3145": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3490,
        3500
      ],
      "op": "CALLER",
      "path": "5"
    },
    "3146": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3400,
        3407
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3148": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3475,
        3501
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3149": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3475,
        3501
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3150": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3475,
        3501
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3151": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3475,
        3489
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3153": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3475,
        3501
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3155": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3475,
        3501
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3156": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3475,
        3501
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3157": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3475,
        3501
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3158": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3475,
        3501
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3160": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3475,
        3501
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3161": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3475,
        3501
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3162": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3475,
        3501
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3163": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3164": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3165": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3166": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3167": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3168": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "DUP6",
      "path": "5"
    },
    "3169": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "MUL",
      "path": "5"
    },
    "3170": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3171": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "ADD",
      "path": "5"
    },
    "3172": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "DUP6",
      "path": "5"
    },
    "3173": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "ADD",
      "path": "5"
    },
    "3174": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3175": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "3176": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3177": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3178": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3179": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3180": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3400,
        3407
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3181": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3400,
        3407
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "3182": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3400,
        3407
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3183": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3400,
        3407
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "3184": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3185": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3475,
        3501
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3186": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3187": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3400,
        3407
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3188": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3400,
        3407
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3189": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3190": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "ADD",
      "path": "5"
    },
    "3191": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3192": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3193": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3194": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "LT",
      "path": "5"
    },
    "3195": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3196": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCBD"
    },
    "3199": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3200": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3201": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3202": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3203": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3205": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3206": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3208": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3210": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3211": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3212": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x2"
    },
    "3214": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "MUL",
      "path": "5"
    },
    "3215": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "ADD",
      "path": "5"
    },
    "3216": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3218": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3219": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3220": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3222": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "ADD",
      "path": "5"
    },
    "3223": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3225": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3226": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3227": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3228": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3230": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3231": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "ADD",
      "path": "5"
    },
    "3232": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3233": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3234": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3235": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3237": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "ADD",
      "path": "5"
    },
    "3238": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "3240": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3241": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "ADD",
      "path": "5"
    },
    "3242": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3243": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3244": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3245": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "POP",
      "path": "5"
    },
    "3246": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "POP",
      "path": "5"
    },
    "3247": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3248": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3249": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3251": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "ADD",
      "path": "5"
    },
    "3252": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3253": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "3255": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "ADD",
      "path": "5"
    },
    "3256": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3257": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC77"
    },
    "3260": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3261": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3262": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "POP",
      "path": "5"
    },
    "3263": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "POP",
      "path": "5"
    },
    "3264": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "POP",
      "path": "5"
    },
    "3265": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "POP",
      "path": "5"
    },
    "3266": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3267": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3444,
        3501
      ],
      "op": "POP",
      "path": "5"
    },
    "3268": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3512,
        3518
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3270": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3507,
        3748
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3271": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3528,
        3541
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3272": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3528,
        3548
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3273": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3524,
        3525
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3274": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3524,
        3548
      ],
      "op": "LT",
      "path": "5"
    },
    "3275": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3507,
        3748
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3276": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3507,
        3748
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD6B"
    },
    "3279": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3507,
        3748
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3280": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3731,
        3741
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 31,
      "value": "0x0"
    },
    "3282": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3731,
        3741
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x14"
    },
    "3284": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3731,
        3741
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3285": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3731,
        3741
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3286": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3731,
        3741
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3287": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3731,
        3741
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x100"
    },
    "3290": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3731,
        3741
      ],
      "op": "EXP",
      "path": "5"
    },
    "3291": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3731,
        3741
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3292": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3731,
        3741
      ],
      "op": "DIV",
      "path": "5"
    },
    "3293": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3731,
        3741
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFFFF"
    },
    "3296": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3731,
        3741
      ],
      "op": "AND",
      "path": "5"
    },
    "3297": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3643,
        3741
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFFFF"
    },
    "3300": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3643,
        3741
      ],
      "op": "AND",
      "path": "5"
    },
    "3301": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3720,
        3726
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0x15180"
    },
    "3305": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3690,
        3703
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3306": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3704,
        3705
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3307": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3690,
        3706
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3308": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3690,
        3706
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3309": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3690,
        3706
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3310": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3690,
        3706
      ],
      "op": "LT",
      "path": "5"
    },
    "3311": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3690,
        3706
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCFA"
    },
    "3314": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3690,
        3706
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3315": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3690,
        3706
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCFA"
    },
    "3318": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3690,
        3706
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE21"
    },
    "3321": {
      "fn": "Cage._getRewardValue",
      "jump": "i",
      "offset": [
        3690,
        3706
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3322": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3690,
        3706
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3323": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3690,
        3706
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3325": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3690,
        3706
      ],
      "op": "MUL",
      "path": "5"
    },
    "3326": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3690,
        3706
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3328": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3690,
        3706
      ],
      "op": "ADD",
      "path": "5"
    },
    "3329": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3690,
        3706
      ],
      "op": "ADD",
      "path": "5"
    },
    "3330": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3690,
        3706
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3331": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3690,
        3716
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3333": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3690,
        3716
      ],
      "op": "ADD",
      "path": "5"
    },
    "3334": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3690,
        3716
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3335": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3672,
        3687
      ],
      "op": "TIMESTAMP",
      "path": "5"
    },
    "3336": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3672,
        3716
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD11"
    },
    "3339": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3672,
        3716
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3340": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3672,
        3716
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3341": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3672,
        3716
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE0A"
    },
    "3344": {
      "fn": "Cage._getRewardValue",
      "jump": "i",
      "offset": [
        3672,
        3716
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3345": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3672,
        3716
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3346": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3671,
        3726
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD1B"
    },
    "3349": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3671,
        3726
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3350": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3671,
        3726
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3351": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3671,
        3726
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xECD"
    },
    "3354": {
      "fn": "Cage._getRewardValue",
      "jump": "i",
      "offset": [
        3671,
        3726
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3355": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3671,
        3726
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3356": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3644,
        3657
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3357": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3658,
        3659
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3358": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3644,
        3660
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3359": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3644,
        3660
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3360": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3644,
        3660
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3361": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3644,
        3660
      ],
      "op": "LT",
      "path": "5"
    },
    "3362": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3644,
        3660
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD2D"
    },
    "3365": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3644,
        3660
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3366": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3644,
        3660
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD2D"
    },
    "3369": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3644,
        3660
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE21"
    },
    "3372": {
      "fn": "Cage._getRewardValue",
      "jump": "i",
      "offset": [
        3644,
        3660
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3373": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3644,
        3660
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3374": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3644,
        3660
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3376": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3644,
        3660
      ],
      "op": "MUL",
      "path": "5"
    },
    "3377": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3644,
        3660
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3379": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3644,
        3660
      ],
      "op": "ADD",
      "path": "5"
    },
    "3380": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3644,
        3660
      ],
      "op": "ADD",
      "path": "5"
    },
    "3381": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3644,
        3660
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3382": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3644,
        3667
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3384": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3644,
        3667
      ],
      "op": "ADD",
      "path": "5"
    },
    "3385": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3644,
        3667
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3386": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3644,
        3727
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD43"
    },
    "3389": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3644,
        3727
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3390": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3644,
        3727
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3391": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3644,
        3727
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE95"
    },
    "3394": {
      "fn": "Cage._getRewardValue",
      "jump": "i",
      "offset": [
        3644,
        3727
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3395": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3644,
        3727
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3396": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3643,
        3741
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD4D"
    },
    "3399": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3643,
        3741
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3400": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3643,
        3741
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3401": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3643,
        3741
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xECD"
    },
    "3404": {
      "fn": "Cage._getRewardValue",
      "jump": "i",
      "offset": [
        3643,
        3741
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3405": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3643,
        3741
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3406": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3628,
        3741
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD57"
    },
    "3409": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3628,
        3741
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3410": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3628,
        3741
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3411": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3628,
        3741
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE64"
    },
    "3414": {
      "fn": "Cage._getRewardValue",
      "jump": "i",
      "offset": [
        3628,
        3741
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3415": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3628,
        3741
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3416": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3628,
        3741
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3417": {
      "op": "POP"
    },
    "3418": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3550,
        3553
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 32
    },
    "3419": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3550,
        3553
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD63"
    },
    "3422": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3550,
        3553
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3423": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3550,
        3553
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE7C"
    },
    "3426": {
      "fn": "Cage._getRewardValue",
      "jump": "i",
      "offset": [
        3550,
        3553
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3427": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3550,
        3553
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3428": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3550,
        3553
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3429": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3550,
        3553
      ],
      "op": "POP",
      "path": "5"
    },
    "3430": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3550,
        3553
      ],
      "op": "POP",
      "path": "5"
    },
    "3431": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3507,
        3748
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCC6"
    },
    "3434": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3507,
        3748
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3435": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3507,
        3748
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3436": {
      "op": "POP"
    },
    "3437": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3760,
        3771
      ],
      "op": "SWAP1",
      "path": "5",
      "statement": 33
    },
    "3438": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3760,
        3771
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3439": {
      "fn": "Cage._getRewardValue",
      "offset": [
        3356,
        3776
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3440": {
      "op": "POP"
    },
    "3441": {
      "op": "POP"
    },
    "3442": {
      "fn": "Cage._getRewardValue",
      "jump": "o",
      "offset": [
        3356,
        3776
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3443": {
      "op": "JUMPDEST"
    },
    "3444": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3446": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3448": {
      "op": "DUP3"
    },
    "3449": {
      "op": "DUP5"
    },
    "3450": {
      "op": "SUB"
    },
    "3451": {
      "op": "SLT"
    },
    "3452": {
      "op": "ISZERO"
    },
    "3453": {
      "op": "PUSH2",
      "value": "0xD85"
    },
    "3456": {
      "op": "JUMPI"
    },
    "3457": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3459": {
      "op": "DUP1"
    },
    "3460": {
      "op": "REVERT"
    },
    "3461": {
      "op": "JUMPDEST"
    },
    "3462": {
      "op": "POP"
    },
    "3463": {
      "op": "CALLDATALOAD"
    },
    "3464": {
      "op": "SWAP2"
    },
    "3465": {
      "op": "SWAP1"
    },
    "3466": {
      "op": "POP"
    },
    "3467": {
      "jump": "o",
      "op": "JUMP"
    },
    "3468": {
      "op": "JUMPDEST"
    },
    "3469": {
      "op": "DUP1"
    },
    "3470": {
      "op": "CALLDATALOAD"
    },
    "3471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3473": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3475": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3477": {
      "op": "SHL"
    },
    "3478": {
      "op": "SUB"
    },
    "3479": {
      "op": "DUP2"
    },
    "3480": {
      "op": "AND"
    },
    "3481": {
      "op": "DUP2"
    },
    "3482": {
      "op": "EQ"
    },
    "3483": {
      "op": "PUSH2",
      "value": "0xDA3"
    },
    "3486": {
      "op": "JUMPI"
    },
    "3487": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3489": {
      "op": "DUP1"
    },
    "3490": {
      "op": "REVERT"
    },
    "3491": {
      "op": "JUMPDEST"
    },
    "3492": {
      "op": "SWAP2"
    },
    "3493": {
      "op": "SWAP1"
    },
    "3494": {
      "op": "POP"
    },
    "3495": {
      "jump": "o",
      "op": "JUMP"
    },
    "3496": {
      "op": "JUMPDEST"
    },
    "3497": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3499": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3501": {
      "op": "DUP3"
    },
    "3502": {
      "op": "DUP5"
    },
    "3503": {
      "op": "SUB"
    },
    "3504": {
      "op": "SLT"
    },
    "3505": {
      "op": "ISZERO"
    },
    "3506": {
      "op": "PUSH2",
      "value": "0xDBA"
    },
    "3509": {
      "op": "JUMPI"
    },
    "3510": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3512": {
      "op": "DUP1"
    },
    "3513": {
      "op": "REVERT"
    },
    "3514": {
      "op": "JUMPDEST"
    },
    "3515": {
      "op": "PUSH2",
      "value": "0xDC3"
    },
    "3518": {
      "op": "DUP3"
    },
    "3519": {
      "op": "PUSH2",
      "value": "0xD8C"
    },
    "3522": {
      "jump": "i",
      "op": "JUMP"
    },
    "3523": {
      "op": "JUMPDEST"
    },
    "3524": {
      "op": "SWAP4"
    },
    "3525": {
      "op": "SWAP3"
    },
    "3526": {
      "op": "POP"
    },
    "3527": {
      "op": "POP"
    },
    "3528": {
      "op": "POP"
    },
    "3529": {
      "jump": "o",
      "op": "JUMP"
    },
    "3530": {
      "op": "JUMPDEST"
    },
    "3531": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3533": {
      "op": "DUP1"
    },
    "3534": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3536": {
      "op": "DUP4"
    },
    "3537": {
      "op": "DUP6"
    },
    "3538": {
      "op": "SUB"
    },
    "3539": {
      "op": "SLT"
    },
    "3540": {
      "op": "ISZERO"
    },
    "3541": {
      "op": "PUSH2",
      "value": "0xDDD"
    },
    "3544": {
      "op": "JUMPI"
    },
    "3545": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3547": {
      "op": "DUP1"
    },
    "3548": {
      "op": "REVERT"
    },
    "3549": {
      "op": "JUMPDEST"
    },
    "3550": {
      "op": "PUSH2",
      "value": "0xDE6"
    },
    "3553": {
      "op": "DUP4"
    },
    "3554": {
      "op": "PUSH2",
      "value": "0xD8C"
    },
    "3557": {
      "jump": "i",
      "op": "JUMP"
    },
    "3558": {
      "op": "JUMPDEST"
    },
    "3559": {
      "op": "SWAP5"
    },
    "3560": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3562": {
      "op": "SWAP4"
    },
    "3563": {
      "op": "SWAP1"
    },
    "3564": {
      "op": "SWAP4"
    },
    "3565": {
      "op": "ADD"
    },
    "3566": {
      "op": "CALLDATALOAD"
    },
    "3567": {
      "op": "SWAP4"
    },
    "3568": {
      "op": "POP"
    },
    "3569": {
      "op": "POP"
    },
    "3570": {
      "op": "POP"
    },
    "3571": {
      "jump": "o",
      "op": "JUMP"
    },
    "3572": {
      "op": "JUMPDEST"
    },
    "3573": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3578": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3580": {
      "op": "SHL"
    },
    "3581": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3583": {
      "op": "MSTORE"
    },
    "3584": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "3586": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3588": {
      "op": "MSTORE"
    },
    "3589": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3591": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3593": {
      "op": "REVERT"
    },
    "3594": {
      "op": "JUMPDEST"
    },
    "3595": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3597": {
      "op": "DUP3"
    },
    "3598": {
      "op": "DUP3"
    },
    "3599": {
      "op": "LT"
    },
    "3600": {
      "op": "ISZERO"
    },
    "3601": {
      "op": "PUSH2",
      "value": "0xE1C"
    },
    "3604": {
      "op": "JUMPI"
    },
    "3605": {
      "op": "PUSH2",
      "value": "0xE1C"
    },
    "3608": {
      "op": "PUSH2",
      "value": "0xDF4"
    },
    "3611": {
      "jump": "i",
      "op": "JUMP"
    },
    "3612": {
      "op": "JUMPDEST"
    },
    "3613": {
      "op": "POP"
    },
    "3614": {
      "op": "SUB"
    },
    "3615": {
      "op": "SWAP1"
    },
    "3616": {
      "jump": "o",
      "op": "JUMP"
    },
    "3617": {
      "op": "JUMPDEST"
    },
    "3618": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3623": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3625": {
      "op": "SHL"
    },
    "3626": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3628": {
      "op": "MSTORE"
    },
    "3629": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "3631": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3633": {
      "op": "MSTORE"
    },
    "3634": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3636": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3638": {
      "op": "REVERT"
    },
    "3639": {
      "op": "JUMPDEST"
    },
    "3640": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3645": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3647": {
      "op": "SHL"
    },
    "3648": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3650": {
      "op": "MSTORE"
    },
    "3651": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "3653": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3655": {
      "op": "MSTORE"
    },
    "3656": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3658": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3660": {
      "op": "REVERT"
    },
    "3661": {
      "op": "JUMPDEST"
    },
    "3662": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3664": {
      "op": "DUP2"
    },
    "3665": {
      "op": "PUSH2",
      "value": "0xE5C"
    },
    "3668": {
      "op": "JUMPI"
    },
    "3669": {
      "op": "PUSH2",
      "value": "0xE5C"
    },
    "3672": {
      "op": "PUSH2",
      "value": "0xDF4"
    },
    "3675": {
      "jump": "i",
      "op": "JUMP"
    },
    "3676": {
      "op": "JUMPDEST"
    },
    "3677": {
      "op": "POP"
    },
    "3678": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3680": {
      "op": "NOT"
    },
    "3681": {
      "op": "ADD"
    },
    "3682": {
      "op": "SWAP1"
    },
    "3683": {
      "jump": "o",
      "op": "JUMP"
    },
    "3684": {
      "op": "JUMPDEST"
    },
    "3685": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3687": {
      "op": "DUP3"
    },
    "3688": {
      "op": "NOT"
    },
    "3689": {
      "op": "DUP3"
    },
    "3690": {
      "op": "GT"
    },
    "3691": {
      "op": "ISZERO"
    },
    "3692": {
      "op": "PUSH2",
      "value": "0xE77"
    },
    "3695": {
      "op": "JUMPI"
    },
    "3696": {
      "op": "PUSH2",
      "value": "0xE77"
    },
    "3699": {
      "op": "PUSH2",
      "value": "0xDF4"
    },
    "3702": {
      "jump": "i",
      "op": "JUMP"
    },
    "3703": {
      "op": "JUMPDEST"
    },
    "3704": {
      "op": "POP"
    },
    "3705": {
      "op": "ADD"
    },
    "3706": {
      "op": "SWAP1"
    },
    "3707": {
      "jump": "o",
      "op": "JUMP"
    },
    "3708": {
      "op": "JUMPDEST"
    },
    "3709": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3711": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3713": {
      "op": "DUP3"
    },
    "3714": {
      "op": "ADD"
    },
    "3715": {
      "op": "PUSH2",
      "value": "0xE8E"
    },
    "3718": {
      "op": "JUMPI"
    },
    "3719": {
      "op": "PUSH2",
      "value": "0xE8E"
    },
    "3722": {
      "op": "PUSH2",
      "value": "0xDF4"
    },
    "3725": {
      "jump": "i",
      "op": "JUMP"
    },
    "3726": {
      "op": "JUMPDEST"
    },
    "3727": {
      "op": "POP"
    },
    "3728": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3730": {
      "op": "ADD"
    },
    "3731": {
      "op": "SWAP1"
    },
    "3732": {
      "jump": "o",
      "op": "JUMP"
    },
    "3733": {
      "op": "JUMPDEST"
    },
    "3734": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3736": {
      "op": "DUP2"
    },
    "3737": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3739": {
      "op": "NOT"
    },
    "3740": {
      "op": "DIV"
    },
    "3741": {
      "op": "DUP4"
    },
    "3742": {
      "op": "GT"
    },
    "3743": {
      "op": "DUP3"
    },
    "3744": {
      "op": "ISZERO"
    },
    "3745": {
      "op": "ISZERO"
    },
    "3746": {
      "op": "AND"
    },
    "3747": {
      "op": "ISZERO"
    },
    "3748": {
      "op": "PUSH2",
      "value": "0xEAF"
    },
    "3751": {
      "op": "JUMPI"
    },
    "3752": {
      "op": "PUSH2",
      "value": "0xEAF"
    },
    "3755": {
      "op": "PUSH2",
      "value": "0xDF4"
    },
    "3758": {
      "jump": "i",
      "op": "JUMP"
    },
    "3759": {
      "op": "JUMPDEST"
    },
    "3760": {
      "op": "POP"
    },
    "3761": {
      "op": "MUL"
    },
    "3762": {
      "op": "SWAP1"
    },
    "3763": {
      "jump": "o",
      "op": "JUMP"
    },
    "3764": {
      "op": "JUMPDEST"
    },
    "3765": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3767": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3769": {
      "op": "DUP3"
    },
    "3770": {
      "op": "DUP5"
    },
    "3771": {
      "op": "SUB"
    },
    "3772": {
      "op": "SLT"
    },
    "3773": {
      "op": "ISZERO"
    },
    "3774": {
      "op": "PUSH2",
      "value": "0xEC6"
    },
    "3777": {
      "op": "JUMPI"
    },
    "3778": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3780": {
      "op": "DUP1"
    },
    "3781": {
      "op": "REVERT"
    },
    "3782": {
      "op": "JUMPDEST"
    },
    "3783": {
      "op": "POP"
    },
    "3784": {
      "op": "MLOAD"
    },
    "3785": {
      "op": "SWAP2"
    },
    "3786": {
      "op": "SWAP1"
    },
    "3787": {
      "op": "POP"
    },
    "3788": {
      "jump": "o",
      "op": "JUMP"
    },
    "3789": {
      "op": "JUMPDEST"
    },
    "3790": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3792": {
      "op": "DUP3"
    },
    "3793": {
      "op": "PUSH2",
      "value": "0xEEA"
    },
    "3796": {
      "op": "JUMPI"
    },
    "3797": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3802": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3804": {
      "op": "SHL"
    },
    "3805": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3807": {
      "op": "MSTORE"
    },
    "3808": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "3810": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3812": {
      "op": "MSTORE"
    },
    "3813": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3815": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3817": {
      "op": "REVERT"
    },
    "3818": {
      "op": "JUMPDEST"
    },
    "3819": {
      "op": "POP"
    },
    "3820": {
      "op": "DIV"
    },
    "3821": {
      "op": "SWAP1"
    },
    "3822": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "6c90c03b1fb9e335879db96257d7f19f33c6e517",
  "source": "//SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"./GambleToken.sol\";\n\nerror TransferFailed();\n\ncontract Cage is Ownable{\n\n  uint16 internal rewardRate;\n  uint16 internal exchangeRate;\n\n  IERC20 public wethToken;\n  GambleToken internal gambleToken;\n\n  Stake[] internal stakes;\n\n  mapping(address => Stake[]) internal stakerToStakes;\n  mapping(address => bool) internal stakers;\n\n  event Staked(address indexed user, uint256 amount, uint256 timestamp);\n  event Withdrawn(address indexed user, uint256 amount);\n  event CashOut(address indexed user, uint256 amount);\n\n  constructor(\n    address _gambleTokenAddress,\n    uint256 _rewardRate,\n    uint256 _exchangeRate\n  ) public {\n\n    gambleToken = GambleToken(_gambleTokenAddress);\n    _setRewardRate(_rewardRate);\n    _setExchangeRate(_exchangeRate);\n  }\n  struct Stake{\n    uint256 amount;\n    uint256 timestamp;\n  }\n\n\n  function stake() public payable {\n    // Sender has enough WETH to stake amount desired\n    require(msg.sender.balance > msg.value, \"You do not own enough ETH\");\n\n\n    //add msg.sender to stakers list\n    stakers[msg.sender] = true;\n    // If successful update values\n    uint256 timestamp = block.timestamp;\n    stakerToStakes[msg.sender].push(Stake(msg.value, timestamp));\n\n    // then emit event\n    emit Staked(msg.sender, msg.value, timestamp);\n  }\n\n\n  function withdraw(uint256 _amount) public onlyStakers{\n    uint256 totalAmountStaked = getStakedAmount(msg.sender);\n    require(_amount <= totalAmountStaked, \"Attempting to withdraw more than staked.\");\n    //withdraw\n    payable(msg.sender).transfer(_amount);\n    if (totalAmountStaked == _amount) { //entire stake withdrawn\n      stakers[msg.sender] = false;\n    }\n    //update values -> popping off stake events from mapping until amount is reached\n    uint256 amountRemaining = _amount;\n    while (amountRemaining != 0) {\n\n      for (uint i = stakerToStakes[msg.sender].length; i > 0; i--){\n        if (stakerToStakes[msg.sender][i-1].amount <= amountRemaining){ //amount in this stake does not cover or is entire amount that is being withdrawn\n          amountRemaining = amountRemaining - stakerToStakes[msg.sender][i-1].amount;\n          stakerToStakes[msg.sender].pop();\n        } else { //amount covers entire amountRemaining. need to update last stake event\n          stakerToStakes[msg.sender][i-1].amount = stakerToStakes[msg.sender][i-1].amount - amountRemaining;\n          amountRemaining = 0;\n        }\n      }\n    }\n    //emit event\n    emit Withdrawn(msg.sender, _amount);\n  }\n\n  function claimReward() public onlyStakers {\n    uint256 amountToMint = _getRewardValue();\n    gambleToken.mint(msg.sender, amountToMint);\n  }\n\n  function getStakedAmount(address _account) public view returns(uint256) {\n    uint256 totalAmountStaked = 0;\n    Stake[] memory currentStakes = stakerToStakes[_account];\n    for (uint i = 0; i < currentStakes.length; i++){\n      totalAmountStaked += currentStakes[i].amount;\n    }\n    return totalAmountStaked;\n  }\n\n  function isStaker(address _account) public view returns(bool) {\n    return stakers[_account];\n  }\n\n  function getStakeObj(address _account, uint256 _index) public view returns(Stake memory) {\n    return stakerToStakes[_account][_index];\n  }\n  function _getRewardValue() internal returns(uint256) {\n    uint256 rewardValue = 0;\n    Stake[] memory currentStakes = stakerToStakes[msg.sender];\n    for (uint i = 0; i < currentStakes.length; i++){\n      // mint = how much(eth) * how long(days) / rewardrate(1000)\n      rewardValue += (currentStakes[i].amount * ((block.timestamp - currentStakes[i].timestamp) / 1 days)) / rewardRate;\n    }\n    return rewardValue;\n  }\n\n  function buyIn() public payable{\n    // Sender has enough WETH to stake amount desired\n    require(msg.sender.balance >= msg.value, \"You do not own enough ETH\");\n\n    //mint appropraite # of gamble to user\n    gambleToken.mint(msg.sender,(msg.value*1000));\n  }\n\n  function cashOut(uint256 _amount) public {\n    require(gambleToken.balanceOf(msg.sender) >= _amount, \"You might need to put it all on red to cash out that amount.\");\n    uint256 cashOutAmount = _amount/1000;\n    //transfer eth to user\n    payable(msg.sender).transfer(cashOutAmount);\n    //burn gamble (amount)\n    gambleToken.burn(msg.sender,_amount);\n    emit CashOut(msg.sender, cashOutAmount);\n  }\n\n  function _setRewardRate(uint256 _rate) internal onlyOwner {\n    rewardRate = uint16(_rate);\n  }\n\n  function _setExchangeRate(uint256 _rate) internal onlyOwner {\n    exchangeRate = uint16(_rate);\n  }\n\n\n\n\n  modifier onlyStakers() {\n    require(stakers[msg.sender], \"You have not staked any ETH.\");\n    _;\n  }\n\n\n\n}\n",
  "sourceMap": "220:4540:5:-:0;;;691:236;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;719:10:4;921:18:0;:32::i;:::-;806:11:5;:46;;-1:-1:-1;;;;;;806:46:5;-1:-1:-1;;;;;806:46:5;;;;;858:27;873:11;858:14;:27::i;:::-;891:31;908:13;891:16;:31::i;:::-;691:236;;;220:4540;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;4449:95:5:-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;633:2:7;1240:68:0;;;615:21:7;;;652:18;;;645:30;-1:-1:-1;;;;;;;;;;;691:18:7;;;684:62;763:18;;1240:68:0;;;;;;;;;4513:10:5::1;:26:::0;;::::1;::::0;;::::1;-1:-1:-1::0;;;4513:26:5::1;-1:-1:-1::0;;;;4513:26:5;;::::1;::::0;;;::::1;::::0;;4449:95::o;4548:99::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:4;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;633:2:7;1240:68:0;;;615:21:7;;;652:18;;;645:30;-1:-1:-1;;;;;;;;;;;691:18:7;;;684:62;763:18;;1240:68:0;431:356:7;1240:68:0;4614:12:5::1;:28:::0;;::::1;::::0;;::::1;-1:-1:-1::0;;;4614:28:5::1;-1:-1:-1::0;;;;4614:28:5;;::::1;::::0;;;::::1;::::0;;4548:99::o;14:412:7:-;102:6;110;118;171:2;159:9;150:7;146:23;142:32;139:52;;;187:1;184;177:12;139:52;213:16;;-1:-1:-1;;;;;258:31:7;;248:42;;238:70;;304:1;301;294:12;238:70;372:2;357:18;;351:25;416:2;401:18;;;395:25;327:5;;351:25;;-1:-1:-1;395:25:7;14:412;-1:-1:-1;;;14:412:7:o;431:356::-;220:4540:5;;;;;;",
  "sourcePath": "contracts/Cage.sol",
  "type": "contract"
}